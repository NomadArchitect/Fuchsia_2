// Code generated by fidlgen; DO NOT EDIT.

package protocollayouts

import (
	testprotocollayoutsimported "fidl/test/protocollayouts/imported"
	_bindings "syscall/zx/fidl"
)

type mainProtocolWithCtxTwoWayAnonComposedWithErrorResponse struct {
	_      struct{}                                                                      `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8"`
	Result testprotocollayoutsimported.ComposedProtocolTwoWayAnonComposedWithErrorResult `fidl_offset_v1:"0" fidl_offset_v2:"0"`
}

var _mmainProtocolWithCtxTwoWayAnonComposedWithErrorResponse = _bindings.CreateLazyMarshaler(mainProtocolWithCtxTwoWayAnonComposedWithErrorResponse{})

func (msg *mainProtocolWithCtxTwoWayAnonComposedWithErrorResponse) Marshaler() _bindings.Marshaler {
	return _mmainProtocolWithCtxTwoWayAnonComposedWithErrorResponse
}

type mainProtocolWithCtxOnAnonComposedWithErrorResponse struct {
	_      struct{}                                                                  `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8"`
	Result testprotocollayoutsimported.ComposedProtocolOnAnonComposedWithErrorResult `fidl_offset_v1:"0" fidl_offset_v2:"0"`
}

var _mmainProtocolWithCtxOnAnonComposedWithErrorResponse = _bindings.CreateLazyMarshaler(mainProtocolWithCtxOnAnonComposedWithErrorResponse{})

func (msg *mainProtocolWithCtxOnAnonComposedWithErrorResponse) Marshaler() _bindings.Marshaler {
	return _mmainProtocolWithCtxOnAnonComposedWithErrorResponse
}

type mainProtocolWithCtxTwoWayNamedComposedWithErrorResponse struct {
	_      struct{}                                                                       `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8"`
	Result testprotocollayoutsimported.ComposedProtocolTwoWayNamedComposedWithErrorResult `fidl_offset_v1:"0" fidl_offset_v2:"0"`
}

var _mmainProtocolWithCtxTwoWayNamedComposedWithErrorResponse = _bindings.CreateLazyMarshaler(mainProtocolWithCtxTwoWayNamedComposedWithErrorResponse{})

func (msg *mainProtocolWithCtxTwoWayNamedComposedWithErrorResponse) Marshaler() _bindings.Marshaler {
	return _mmainProtocolWithCtxTwoWayNamedComposedWithErrorResponse
}

type mainProtocolWithCtxOnNamedComposedWithErrorResponse struct {
	_      struct{}                                                                   `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8"`
	Result testprotocollayoutsimported.ComposedProtocolOnNamedComposedWithErrorResult `fidl_offset_v1:"0" fidl_offset_v2:"0"`
}

var _mmainProtocolWithCtxOnNamedComposedWithErrorResponse = _bindings.CreateLazyMarshaler(mainProtocolWithCtxOnNamedComposedWithErrorResponse{})

func (msg *mainProtocolWithCtxOnNamedComposedWithErrorResponse) Marshaler() _bindings.Marshaler {
	return _mmainProtocolWithCtxOnNamedComposedWithErrorResponse
}

type mainProtocolWithCtxTwoWayImportWithErrorResponse struct {
	_      struct{}                                `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8"`
	Result MainProtocolTwoWayImportWithErrorResult `fidl_offset_v1:"0" fidl_offset_v2:"0"`
}

var _mmainProtocolWithCtxTwoWayImportWithErrorResponse = _bindings.CreateLazyMarshaler(mainProtocolWithCtxTwoWayImportWithErrorResponse{})

func (msg *mainProtocolWithCtxTwoWayImportWithErrorResponse) Marshaler() _bindings.Marshaler {
	return _mmainProtocolWithCtxTwoWayImportWithErrorResponse
}

type mainProtocolWithCtxOnImportWithErrorResponse struct {
	_      struct{}                            `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8"`
	Result MainProtocolOnImportWithErrorResult `fidl_offset_v1:"0" fidl_offset_v2:"0"`
}

var _mmainProtocolWithCtxOnImportWithErrorResponse = _bindings.CreateLazyMarshaler(mainProtocolWithCtxOnImportWithErrorResponse{})

func (msg *mainProtocolWithCtxOnImportWithErrorResponse) Marshaler() _bindings.Marshaler {
	return _mmainProtocolWithCtxOnImportWithErrorResponse
}

type mainProtocolWithCtxTwoWayLocalWithErrorResponse struct {
	_      struct{}                               `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8"`
	Result MainProtocolTwoWayLocalWithErrorResult `fidl_offset_v1:"0" fidl_offset_v2:"0"`
}

var _mmainProtocolWithCtxTwoWayLocalWithErrorResponse = _bindings.CreateLazyMarshaler(mainProtocolWithCtxTwoWayLocalWithErrorResponse{})

func (msg *mainProtocolWithCtxTwoWayLocalWithErrorResponse) Marshaler() _bindings.Marshaler {
	return _mmainProtocolWithCtxTwoWayLocalWithErrorResponse
}

type mainProtocolWithCtxOnLocalWithErrorResponse struct {
	_      struct{}                           `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8"`
	Result MainProtocolOnLocalWithErrorResult `fidl_offset_v1:"0" fidl_offset_v2:"0"`
}

var _mmainProtocolWithCtxOnLocalWithErrorResponse = _bindings.CreateLazyMarshaler(mainProtocolWithCtxOnLocalWithErrorResponse{})

func (msg *mainProtocolWithCtxOnLocalWithErrorResponse) Marshaler() _bindings.Marshaler {
	return _mmainProtocolWithCtxOnLocalWithErrorResponse
}

type mainProtocolWithCtxTwoWayAnonWithErrorResponse struct {
	_      struct{}                              `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8"`
	Result MainProtocolTwoWayAnonWithErrorResult `fidl_offset_v1:"0" fidl_offset_v2:"0"`
}

var _mmainProtocolWithCtxTwoWayAnonWithErrorResponse = _bindings.CreateLazyMarshaler(mainProtocolWithCtxTwoWayAnonWithErrorResponse{})

func (msg *mainProtocolWithCtxTwoWayAnonWithErrorResponse) Marshaler() _bindings.Marshaler {
	return _mmainProtocolWithCtxTwoWayAnonWithErrorResponse
}

type mainProtocolWithCtxOnAnonWithErrorResponse struct {
	_      struct{}                          `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8"`
	Result MainProtocolOnAnonWithErrorResult `fidl_offset_v1:"0" fidl_offset_v2:"0"`
}

var _mmainProtocolWithCtxOnAnonWithErrorResponse = _bindings.CreateLazyMarshaler(mainProtocolWithCtxOnAnonWithErrorResponse{})

func (msg *mainProtocolWithCtxOnAnonWithErrorResponse) Marshaler() _bindings.Marshaler {
	return _mmainProtocolWithCtxOnAnonWithErrorResponse
}

type I_mainProtocolTwoWayImportWithErrorResultTag uint64

const (
	MainProtocolTwoWayImportWithErrorResultResponse = 1 // 0x00000001
	MainProtocolTwoWayImportWithErrorResultErr      = 2 // 0x00000002
)

type MainProtocolTwoWayImportWithErrorResult struct {
	I_mainProtocolTwoWayImportWithErrorResultTag `fidl:"x!" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	Response                                     testprotocollayoutsimported.ImportUnionPayload `fidl_ordinal:"1"`
	Err                                          uint32                                         `fidl_ordinal:"2"`
}

var _mMainProtocolTwoWayImportWithErrorResult = _bindings.CreateLazyMarshaler(MainProtocolTwoWayImportWithErrorResult{})

func (msg *MainProtocolTwoWayImportWithErrorResult) Marshaler() _bindings.Marshaler {
	return _mMainProtocolTwoWayImportWithErrorResult
}

func (_m *MainProtocolTwoWayImportWithErrorResult) reset() {
	switch _m.I_mainProtocolTwoWayImportWithErrorResultTag {
	case 1:
		var _zeroed testprotocollayoutsimported.ImportUnionPayload
		_m.Response = _zeroed
	case 2:
		var _zeroed uint32
		_m.Err = _zeroed
	}
}

func (_m *MainProtocolTwoWayImportWithErrorResult) Which() I_mainProtocolTwoWayImportWithErrorResultTag {
	return _m.I_mainProtocolTwoWayImportWithErrorResultTag
}

func (_m *MainProtocolTwoWayImportWithErrorResult) Ordinal() uint64 {
	return uint64(_m.I_mainProtocolTwoWayImportWithErrorResultTag)
}

func (_m *MainProtocolTwoWayImportWithErrorResult) SetResponse(response testprotocollayoutsimported.ImportUnionPayload) {
	_m.reset()
	_m.I_mainProtocolTwoWayImportWithErrorResultTag = MainProtocolTwoWayImportWithErrorResultResponse
	_m.Response = response
}

func MainProtocolTwoWayImportWithErrorResultWithResponse(response testprotocollayoutsimported.ImportUnionPayload) MainProtocolTwoWayImportWithErrorResult {
	var _u MainProtocolTwoWayImportWithErrorResult
	_u.SetResponse(response)
	return _u
}

func (_m *MainProtocolTwoWayImportWithErrorResult) SetErr(err uint32) {
	_m.reset()
	_m.I_mainProtocolTwoWayImportWithErrorResultTag = MainProtocolTwoWayImportWithErrorResultErr
	_m.Err = err
}

func MainProtocolTwoWayImportWithErrorResultWithErr(err uint32) MainProtocolTwoWayImportWithErrorResult {
	var _u MainProtocolTwoWayImportWithErrorResult
	_u.SetErr(err)
	return _u
}

type I_mainProtocolOnImportWithErrorResultTag uint64

const (
	MainProtocolOnImportWithErrorResultResponse = 1 // 0x00000001
	MainProtocolOnImportWithErrorResultErr      = 2 // 0x00000002
)

type MainProtocolOnImportWithErrorResult struct {
	I_mainProtocolOnImportWithErrorResultTag `fidl:"x!" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	Response                                 testprotocollayoutsimported.ImportTablePayload `fidl_ordinal:"1"`
	Err                                      uint32                                         `fidl_ordinal:"2"`
}

var _mMainProtocolOnImportWithErrorResult = _bindings.CreateLazyMarshaler(MainProtocolOnImportWithErrorResult{})

func (msg *MainProtocolOnImportWithErrorResult) Marshaler() _bindings.Marshaler {
	return _mMainProtocolOnImportWithErrorResult
}

func (_m *MainProtocolOnImportWithErrorResult) reset() {
	switch _m.I_mainProtocolOnImportWithErrorResultTag {
	case 1:
		var _zeroed testprotocollayoutsimported.ImportTablePayload
		_m.Response = _zeroed
	case 2:
		var _zeroed uint32
		_m.Err = _zeroed
	}
}

func (_m *MainProtocolOnImportWithErrorResult) Which() I_mainProtocolOnImportWithErrorResultTag {
	return _m.I_mainProtocolOnImportWithErrorResultTag
}

func (_m *MainProtocolOnImportWithErrorResult) Ordinal() uint64 {
	return uint64(_m.I_mainProtocolOnImportWithErrorResultTag)
}

func (_m *MainProtocolOnImportWithErrorResult) SetResponse(response testprotocollayoutsimported.ImportTablePayload) {
	_m.reset()
	_m.I_mainProtocolOnImportWithErrorResultTag = MainProtocolOnImportWithErrorResultResponse
	_m.Response = response
}

func MainProtocolOnImportWithErrorResultWithResponse(response testprotocollayoutsimported.ImportTablePayload) MainProtocolOnImportWithErrorResult {
	var _u MainProtocolOnImportWithErrorResult
	_u.SetResponse(response)
	return _u
}

func (_m *MainProtocolOnImportWithErrorResult) SetErr(err uint32) {
	_m.reset()
	_m.I_mainProtocolOnImportWithErrorResultTag = MainProtocolOnImportWithErrorResultErr
	_m.Err = err
}

func MainProtocolOnImportWithErrorResultWithErr(err uint32) MainProtocolOnImportWithErrorResult {
	var _u MainProtocolOnImportWithErrorResult
	_u.SetErr(err)
	return _u
}

type I_mainProtocolTwoWayLocalWithErrorResultTag uint64

const (
	MainProtocolTwoWayLocalWithErrorResultResponse = 1 // 0x00000001
	MainProtocolTwoWayLocalWithErrorResultErr      = 2 // 0x00000002
)

type MainProtocolTwoWayLocalWithErrorResult struct {
	I_mainProtocolTwoWayLocalWithErrorResultTag `fidl:"x!" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	Response                                    LocalUnionPayload `fidl_ordinal:"1"`
	Err                                         uint32            `fidl_ordinal:"2"`
}

var _mMainProtocolTwoWayLocalWithErrorResult = _bindings.CreateLazyMarshaler(MainProtocolTwoWayLocalWithErrorResult{})

func (msg *MainProtocolTwoWayLocalWithErrorResult) Marshaler() _bindings.Marshaler {
	return _mMainProtocolTwoWayLocalWithErrorResult
}

func (_m *MainProtocolTwoWayLocalWithErrorResult) reset() {
	switch _m.I_mainProtocolTwoWayLocalWithErrorResultTag {
	case 1:
		var _zeroed LocalUnionPayload
		_m.Response = _zeroed
	case 2:
		var _zeroed uint32
		_m.Err = _zeroed
	}
}

func (_m *MainProtocolTwoWayLocalWithErrorResult) Which() I_mainProtocolTwoWayLocalWithErrorResultTag {
	return _m.I_mainProtocolTwoWayLocalWithErrorResultTag
}

func (_m *MainProtocolTwoWayLocalWithErrorResult) Ordinal() uint64 {
	return uint64(_m.I_mainProtocolTwoWayLocalWithErrorResultTag)
}

func (_m *MainProtocolTwoWayLocalWithErrorResult) SetResponse(response LocalUnionPayload) {
	_m.reset()
	_m.I_mainProtocolTwoWayLocalWithErrorResultTag = MainProtocolTwoWayLocalWithErrorResultResponse
	_m.Response = response
}

func MainProtocolTwoWayLocalWithErrorResultWithResponse(response LocalUnionPayload) MainProtocolTwoWayLocalWithErrorResult {
	var _u MainProtocolTwoWayLocalWithErrorResult
	_u.SetResponse(response)
	return _u
}

func (_m *MainProtocolTwoWayLocalWithErrorResult) SetErr(err uint32) {
	_m.reset()
	_m.I_mainProtocolTwoWayLocalWithErrorResultTag = MainProtocolTwoWayLocalWithErrorResultErr
	_m.Err = err
}

func MainProtocolTwoWayLocalWithErrorResultWithErr(err uint32) MainProtocolTwoWayLocalWithErrorResult {
	var _u MainProtocolTwoWayLocalWithErrorResult
	_u.SetErr(err)
	return _u
}

type I_mainProtocolOnLocalWithErrorResultTag uint64

const (
	MainProtocolOnLocalWithErrorResultResponse = 1 // 0x00000001
	MainProtocolOnLocalWithErrorResultErr      = 2 // 0x00000002
)

type MainProtocolOnLocalWithErrorResult struct {
	I_mainProtocolOnLocalWithErrorResultTag `fidl:"x!" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	Response                                LocalTablePayload `fidl_ordinal:"1"`
	Err                                     uint32            `fidl_ordinal:"2"`
}

var _mMainProtocolOnLocalWithErrorResult = _bindings.CreateLazyMarshaler(MainProtocolOnLocalWithErrorResult{})

func (msg *MainProtocolOnLocalWithErrorResult) Marshaler() _bindings.Marshaler {
	return _mMainProtocolOnLocalWithErrorResult
}

func (_m *MainProtocolOnLocalWithErrorResult) reset() {
	switch _m.I_mainProtocolOnLocalWithErrorResultTag {
	case 1:
		var _zeroed LocalTablePayload
		_m.Response = _zeroed
	case 2:
		var _zeroed uint32
		_m.Err = _zeroed
	}
}

func (_m *MainProtocolOnLocalWithErrorResult) Which() I_mainProtocolOnLocalWithErrorResultTag {
	return _m.I_mainProtocolOnLocalWithErrorResultTag
}

func (_m *MainProtocolOnLocalWithErrorResult) Ordinal() uint64 {
	return uint64(_m.I_mainProtocolOnLocalWithErrorResultTag)
}

func (_m *MainProtocolOnLocalWithErrorResult) SetResponse(response LocalTablePayload) {
	_m.reset()
	_m.I_mainProtocolOnLocalWithErrorResultTag = MainProtocolOnLocalWithErrorResultResponse
	_m.Response = response
}

func MainProtocolOnLocalWithErrorResultWithResponse(response LocalTablePayload) MainProtocolOnLocalWithErrorResult {
	var _u MainProtocolOnLocalWithErrorResult
	_u.SetResponse(response)
	return _u
}

func (_m *MainProtocolOnLocalWithErrorResult) SetErr(err uint32) {
	_m.reset()
	_m.I_mainProtocolOnLocalWithErrorResultTag = MainProtocolOnLocalWithErrorResultErr
	_m.Err = err
}

func MainProtocolOnLocalWithErrorResultWithErr(err uint32) MainProtocolOnLocalWithErrorResult {
	var _u MainProtocolOnLocalWithErrorResult
	_u.SetErr(err)
	return _u
}

type I_mainProtocolTwoWayAnonWithErrorResponseTag uint64

const (
	MainProtocolTwoWayAnonWithErrorResponse_unknownData = 0 // 0x00000000
	MainProtocolTwoWayAnonWithErrorResponseB            = 1 // 0x00000001
)

type MainProtocolTwoWayAnonWithErrorResponse struct {
	I_mainProtocolTwoWayAnonWithErrorResponseTag `fidl:"x" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	I_unknownData                                interface{}
	B                                            bool `fidl_ordinal:"1"`
}

var _mMainProtocolTwoWayAnonWithErrorResponse = _bindings.CreateLazyMarshaler(MainProtocolTwoWayAnonWithErrorResponse{})

func (msg *MainProtocolTwoWayAnonWithErrorResponse) Marshaler() _bindings.Marshaler {
	return _mMainProtocolTwoWayAnonWithErrorResponse
}

func (_m *MainProtocolTwoWayAnonWithErrorResponse) reset() {
	switch _m.I_mainProtocolTwoWayAnonWithErrorResponseTag {
	case 1:
		var _zeroed bool
		_m.B = _zeroed
	default:
		var _zeroed interface{}
		_m.I_unknownData = _zeroed
	}
}

func (_m *MainProtocolTwoWayAnonWithErrorResponse) Which() I_mainProtocolTwoWayAnonWithErrorResponseTag {
	switch _m.I_mainProtocolTwoWayAnonWithErrorResponseTag {
	case 1:
		return MainProtocolTwoWayAnonWithErrorResponseB
	default:
		return MainProtocolTwoWayAnonWithErrorResponse_unknownData
	}
}

func (_m *MainProtocolTwoWayAnonWithErrorResponse) Ordinal() uint64 {
	return uint64(_m.I_mainProtocolTwoWayAnonWithErrorResponseTag)
}

func (_m *MainProtocolTwoWayAnonWithErrorResponse) SetB(b bool) {
	_m.reset()
	_m.I_mainProtocolTwoWayAnonWithErrorResponseTag = MainProtocolTwoWayAnonWithErrorResponseB
	_m.B = b
}

func MainProtocolTwoWayAnonWithErrorResponseWithB(b bool) MainProtocolTwoWayAnonWithErrorResponse {
	var _u MainProtocolTwoWayAnonWithErrorResponse
	_u.SetB(b)
	return _u
}
func (_m *MainProtocolTwoWayAnonWithErrorResponse) GetUnknownData() _bindings.UnknownData {
	return _m.I_unknownData.(_bindings.UnknownData)
}

type I_mainProtocolTwoWayAnonWithErrorResultTag uint64

const (
	MainProtocolTwoWayAnonWithErrorResultResponse = 1 // 0x00000001
	MainProtocolTwoWayAnonWithErrorResultErr      = 2 // 0x00000002
)

type MainProtocolTwoWayAnonWithErrorResult struct {
	I_mainProtocolTwoWayAnonWithErrorResultTag `fidl:"x!" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	Response                                   MainProtocolTwoWayAnonWithErrorResponse `fidl_ordinal:"1"`
	Err                                        uint32                                  `fidl_ordinal:"2"`
}

var _mMainProtocolTwoWayAnonWithErrorResult = _bindings.CreateLazyMarshaler(MainProtocolTwoWayAnonWithErrorResult{})

func (msg *MainProtocolTwoWayAnonWithErrorResult) Marshaler() _bindings.Marshaler {
	return _mMainProtocolTwoWayAnonWithErrorResult
}

func (_m *MainProtocolTwoWayAnonWithErrorResult) reset() {
	switch _m.I_mainProtocolTwoWayAnonWithErrorResultTag {
	case 1:
		var _zeroed MainProtocolTwoWayAnonWithErrorResponse
		_m.Response = _zeroed
	case 2:
		var _zeroed uint32
		_m.Err = _zeroed
	}
}

func (_m *MainProtocolTwoWayAnonWithErrorResult) Which() I_mainProtocolTwoWayAnonWithErrorResultTag {
	return _m.I_mainProtocolTwoWayAnonWithErrorResultTag
}

func (_m *MainProtocolTwoWayAnonWithErrorResult) Ordinal() uint64 {
	return uint64(_m.I_mainProtocolTwoWayAnonWithErrorResultTag)
}

func (_m *MainProtocolTwoWayAnonWithErrorResult) SetResponse(response MainProtocolTwoWayAnonWithErrorResponse) {
	_m.reset()
	_m.I_mainProtocolTwoWayAnonWithErrorResultTag = MainProtocolTwoWayAnonWithErrorResultResponse
	_m.Response = response
}

func MainProtocolTwoWayAnonWithErrorResultWithResponse(response MainProtocolTwoWayAnonWithErrorResponse) MainProtocolTwoWayAnonWithErrorResult {
	var _u MainProtocolTwoWayAnonWithErrorResult
	_u.SetResponse(response)
	return _u
}

func (_m *MainProtocolTwoWayAnonWithErrorResult) SetErr(err uint32) {
	_m.reset()
	_m.I_mainProtocolTwoWayAnonWithErrorResultTag = MainProtocolTwoWayAnonWithErrorResultErr
	_m.Err = err
}

func MainProtocolTwoWayAnonWithErrorResultWithErr(err uint32) MainProtocolTwoWayAnonWithErrorResult {
	var _u MainProtocolTwoWayAnonWithErrorResult
	_u.SetErr(err)
	return _u
}

type I_mainProtocolOnAnonWithErrorResultTag uint64

const (
	MainProtocolOnAnonWithErrorResultResponse = 1 // 0x00000001
	MainProtocolOnAnonWithErrorResultErr      = 2 // 0x00000002
)

type MainProtocolOnAnonWithErrorResult struct {
	I_mainProtocolOnAnonWithErrorResultTag `fidl:"x!" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	Response                               MainProtocolOnAnonWithErrorResponse `fidl_ordinal:"1"`
	Err                                    uint32                              `fidl_ordinal:"2"`
}

var _mMainProtocolOnAnonWithErrorResult = _bindings.CreateLazyMarshaler(MainProtocolOnAnonWithErrorResult{})

func (msg *MainProtocolOnAnonWithErrorResult) Marshaler() _bindings.Marshaler {
	return _mMainProtocolOnAnonWithErrorResult
}

func (_m *MainProtocolOnAnonWithErrorResult) reset() {
	switch _m.I_mainProtocolOnAnonWithErrorResultTag {
	case 1:
		var _zeroed MainProtocolOnAnonWithErrorResponse
		_m.Response = _zeroed
	case 2:
		var _zeroed uint32
		_m.Err = _zeroed
	}
}

func (_m *MainProtocolOnAnonWithErrorResult) Which() I_mainProtocolOnAnonWithErrorResultTag {
	return _m.I_mainProtocolOnAnonWithErrorResultTag
}

func (_m *MainProtocolOnAnonWithErrorResult) Ordinal() uint64 {
	return uint64(_m.I_mainProtocolOnAnonWithErrorResultTag)
}

func (_m *MainProtocolOnAnonWithErrorResult) SetResponse(response MainProtocolOnAnonWithErrorResponse) {
	_m.reset()
	_m.I_mainProtocolOnAnonWithErrorResultTag = MainProtocolOnAnonWithErrorResultResponse
	_m.Response = response
}

func MainProtocolOnAnonWithErrorResultWithResponse(response MainProtocolOnAnonWithErrorResponse) MainProtocolOnAnonWithErrorResult {
	var _u MainProtocolOnAnonWithErrorResult
	_u.SetResponse(response)
	return _u
}

func (_m *MainProtocolOnAnonWithErrorResult) SetErr(err uint32) {
	_m.reset()
	_m.I_mainProtocolOnAnonWithErrorResultTag = MainProtocolOnAnonWithErrorResultErr
	_m.Err = err
}

func MainProtocolOnAnonWithErrorResultWithErr(err uint32) MainProtocolOnAnonWithErrorResult {
	var _u MainProtocolOnAnonWithErrorResult
	_u.SetErr(err)
	return _u
}

type I_localUnionPayloadTag uint64

const (
	LocalUnionPayload_unknownData = 0 // 0x00000000
	LocalUnionPayloadB            = 1 // 0x00000001
)

type LocalUnionPayload struct {
	I_localUnionPayloadTag `fidl:"x" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	I_unknownData          interface{}
	B                      bool `fidl_ordinal:"1"`
}

var _mLocalUnionPayload = _bindings.CreateLazyMarshaler(LocalUnionPayload{})

func (msg *LocalUnionPayload) Marshaler() _bindings.Marshaler {
	return _mLocalUnionPayload
}

func (_m *LocalUnionPayload) reset() {
	switch _m.I_localUnionPayloadTag {
	case 1:
		var _zeroed bool
		_m.B = _zeroed
	default:
		var _zeroed interface{}
		_m.I_unknownData = _zeroed
	}
}

func (_m *LocalUnionPayload) Which() I_localUnionPayloadTag {
	switch _m.I_localUnionPayloadTag {
	case 1:
		return LocalUnionPayloadB
	default:
		return LocalUnionPayload_unknownData
	}
}

func (_m *LocalUnionPayload) Ordinal() uint64 {
	return uint64(_m.I_localUnionPayloadTag)
}

func (_m *LocalUnionPayload) SetB(b bool) {
	_m.reset()
	_m.I_localUnionPayloadTag = LocalUnionPayloadB
	_m.B = b
}

func LocalUnionPayloadWithB(b bool) LocalUnionPayload {
	var _u LocalUnionPayload
	_u.SetB(b)
	return _u
}
func (_m *LocalUnionPayload) GetUnknownData() _bindings.UnknownData {
	return _m.I_unknownData.(_bindings.UnknownData)
}

type I_mainProtocolTwoWayAnonRequestTag uint64

const (
	MainProtocolTwoWayAnonRequest_unknownData = 0 // 0x00000000
	MainProtocolTwoWayAnonRequestB            = 1 // 0x00000001
)

type MainProtocolTwoWayAnonRequest struct {
	I_mainProtocolTwoWayAnonRequestTag `fidl:"x" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	I_unknownData                      interface{}
	B                                  bool `fidl_ordinal:"1"`
}

var _mMainProtocolTwoWayAnonRequest = _bindings.CreateLazyMarshaler(MainProtocolTwoWayAnonRequest{})

func (msg *MainProtocolTwoWayAnonRequest) Marshaler() _bindings.Marshaler {
	return _mMainProtocolTwoWayAnonRequest
}

func (_m *MainProtocolTwoWayAnonRequest) reset() {
	switch _m.I_mainProtocolTwoWayAnonRequestTag {
	case 1:
		var _zeroed bool
		_m.B = _zeroed
	default:
		var _zeroed interface{}
		_m.I_unknownData = _zeroed
	}
}

func (_m *MainProtocolTwoWayAnonRequest) Which() I_mainProtocolTwoWayAnonRequestTag {
	switch _m.I_mainProtocolTwoWayAnonRequestTag {
	case 1:
		return MainProtocolTwoWayAnonRequestB
	default:
		return MainProtocolTwoWayAnonRequest_unknownData
	}
}

func (_m *MainProtocolTwoWayAnonRequest) Ordinal() uint64 {
	return uint64(_m.I_mainProtocolTwoWayAnonRequestTag)
}

func (_m *MainProtocolTwoWayAnonRequest) SetB(b bool) {
	_m.reset()
	_m.I_mainProtocolTwoWayAnonRequestTag = MainProtocolTwoWayAnonRequestB
	_m.B = b
}

func MainProtocolTwoWayAnonRequestWithB(b bool) MainProtocolTwoWayAnonRequest {
	var _u MainProtocolTwoWayAnonRequest
	_u.SetB(b)
	return _u
}
func (_m *MainProtocolTwoWayAnonRequest) GetUnknownData() _bindings.UnknownData {
	return _m.I_unknownData.(_bindings.UnknownData)
}

type I_mainProtocolOnAnonRequestTag uint64

const (
	MainProtocolOnAnonResponse_unknownData = 0 // 0x00000000
	MainProtocolOnAnonResponseB            = 1 // 0x00000001
)

type MainProtocolOnAnonResponse struct {
	I_mainProtocolOnAnonRequestTag `fidl:"x" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	I_unknownData                  interface{}
	B                              bool `fidl_ordinal:"1"`
}

var _mMainProtocolOnAnonResponse = _bindings.CreateLazyMarshaler(MainProtocolOnAnonResponse{})

func (msg *MainProtocolOnAnonResponse) Marshaler() _bindings.Marshaler {
	return _mMainProtocolOnAnonResponse
}

func (_m *MainProtocolOnAnonResponse) reset() {
	switch _m.I_mainProtocolOnAnonRequestTag {
	case 1:
		var _zeroed bool
		_m.B = _zeroed
	default:
		var _zeroed interface{}
		_m.I_unknownData = _zeroed
	}
}

func (_m *MainProtocolOnAnonResponse) Which() I_mainProtocolOnAnonRequestTag {
	switch _m.I_mainProtocolOnAnonRequestTag {
	case 1:
		return MainProtocolOnAnonResponseB
	default:
		return MainProtocolOnAnonResponse_unknownData
	}
}

func (_m *MainProtocolOnAnonResponse) Ordinal() uint64 {
	return uint64(_m.I_mainProtocolOnAnonRequestTag)
}

func (_m *MainProtocolOnAnonResponse) SetB(b bool) {
	_m.reset()
	_m.I_mainProtocolOnAnonRequestTag = MainProtocolOnAnonResponseB
	_m.B = b
}

func MainProtocolOnAnonResponseWithB(b bool) MainProtocolOnAnonResponse {
	var _u MainProtocolOnAnonResponse
	_u.SetB(b)
	return _u
}
func (_m *MainProtocolOnAnonResponse) GetUnknownData() _bindings.UnknownData {
	return _m.I_unknownData.(_bindings.UnknownData)
}

type MainProtocolOnAnonWithErrorResponse struct {
	_             struct{} `fidl:"t" fidl_size_v1:"16" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	I_unknownData interface{}
	A             uint16 `fidl_ordinal:"1"`
	APresent      bool
}

var _mMainProtocolOnAnonWithErrorResponse = _bindings.CreateLazyMarshaler(MainProtocolOnAnonWithErrorResponse{})

func (msg *MainProtocolOnAnonWithErrorResponse) Marshaler() _bindings.Marshaler {
	return _mMainProtocolOnAnonWithErrorResponse
}

func (u *MainProtocolOnAnonWithErrorResponse) SetA(a uint16) {
	u.A = a
	u.APresent = true
}

func (u *MainProtocolOnAnonWithErrorResponse) GetA() uint16 {
	return u.A
}

func (u *MainProtocolOnAnonWithErrorResponse) GetAWithDefault(_default uint16) uint16 {
	if !u.HasA() {
		return _default
	}
	return u.A
}

func (u *MainProtocolOnAnonWithErrorResponse) HasA() bool {
	return u.APresent
}

func (u *MainProtocolOnAnonWithErrorResponse) ClearA() {
	u.APresent = false
}

func (u *MainProtocolOnAnonWithErrorResponse) HasUnknownData() bool {
	return u.I_unknownData != nil
}

func (u *MainProtocolOnAnonWithErrorResponse) GetUnknownData() map[uint64]_bindings.UnknownData {
	return u.I_unknownData.(map[uint64]_bindings.UnknownData)
}

type LocalTablePayload struct {
	_             struct{} `fidl:"t" fidl_size_v1:"16" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	I_unknownData interface{}
	A             uint16 `fidl_ordinal:"1"`
	APresent      bool
}

var _mLocalTablePayload = _bindings.CreateLazyMarshaler(LocalTablePayload{})

func (msg *LocalTablePayload) Marshaler() _bindings.Marshaler {
	return _mLocalTablePayload
}

func (u *LocalTablePayload) SetA(a uint16) {
	u.A = a
	u.APresent = true
}

func (u *LocalTablePayload) GetA() uint16 {
	return u.A
}

func (u *LocalTablePayload) GetAWithDefault(_default uint16) uint16 {
	if !u.HasA() {
		return _default
	}
	return u.A
}

func (u *LocalTablePayload) HasA() bool {
	return u.APresent
}

func (u *LocalTablePayload) ClearA() {
	u.APresent = false
}

func (u *LocalTablePayload) HasUnknownData() bool {
	return u.I_unknownData != nil
}

func (u *LocalTablePayload) GetUnknownData() map[uint64]_bindings.UnknownData {
	return u.I_unknownData.(map[uint64]_bindings.UnknownData)
}

type MainProtocolOneWayAnonRequest struct {
	_             struct{} `fidl:"t" fidl_size_v1:"16" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	I_unknownData interface{}
	A             uint16 `fidl_ordinal:"1"`
	APresent      bool
}

var _mMainProtocolOneWayAnonRequest = _bindings.CreateLazyMarshaler(MainProtocolOneWayAnonRequest{})

func (msg *MainProtocolOneWayAnonRequest) Marshaler() _bindings.Marshaler {
	return _mMainProtocolOneWayAnonRequest
}

func (u *MainProtocolOneWayAnonRequest) SetA(a uint16) {
	u.A = a
	u.APresent = true
}

func (u *MainProtocolOneWayAnonRequest) GetA() uint16 {
	return u.A
}

func (u *MainProtocolOneWayAnonRequest) GetAWithDefault(_default uint16) uint16 {
	if !u.HasA() {
		return _default
	}
	return u.A
}

func (u *MainProtocolOneWayAnonRequest) HasA() bool {
	return u.APresent
}

func (u *MainProtocolOneWayAnonRequest) ClearA() {
	u.APresent = false
}

func (u *MainProtocolOneWayAnonRequest) HasUnknownData() bool {
	return u.I_unknownData != nil
}

func (u *MainProtocolOneWayAnonRequest) GetUnknownData() map[uint64]_bindings.UnknownData {
	return u.I_unknownData.(map[uint64]_bindings.UnknownData)
}

type MainProtocolTwoWayAnonResponse struct {
	_             struct{} `fidl:"t" fidl_size_v1:"16" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	I_unknownData interface{}
	A             uint16 `fidl_ordinal:"1"`
	APresent      bool
}

var _mMainProtocolTwoWayAnonResponse = _bindings.CreateLazyMarshaler(MainProtocolTwoWayAnonResponse{})

func (msg *MainProtocolTwoWayAnonResponse) Marshaler() _bindings.Marshaler {
	return _mMainProtocolTwoWayAnonResponse
}

func (u *MainProtocolTwoWayAnonResponse) SetA(a uint16) {
	u.A = a
	u.APresent = true
}

func (u *MainProtocolTwoWayAnonResponse) GetA() uint16 {
	return u.A
}

func (u *MainProtocolTwoWayAnonResponse) GetAWithDefault(_default uint16) uint16 {
	if !u.HasA() {
		return _default
	}
	return u.A
}

func (u *MainProtocolTwoWayAnonResponse) HasA() bool {
	return u.APresent
}

func (u *MainProtocolTwoWayAnonResponse) ClearA() {
	u.APresent = false
}

func (u *MainProtocolTwoWayAnonResponse) HasUnknownData() bool {
	return u.I_unknownData != nil
}

func (u *MainProtocolTwoWayAnonResponse) GetUnknownData() map[uint64]_bindings.UnknownData {
	return u.I_unknownData.(map[uint64]_bindings.UnknownData)
}

type MainProtocolTwoWayAnonWithErrorRequest struct {
	_             struct{} `fidl:"t" fidl_size_v1:"16" fidl_alignment_v1:"8" fidl_size_v2:"16" fidl_alignment_v2:"8" fidl_resource:"false"`
	I_unknownData interface{}
	A             uint16 `fidl_ordinal:"1"`
	APresent      bool
}

var _mMainProtocolTwoWayAnonWithErrorRequest = _bindings.CreateLazyMarshaler(MainProtocolTwoWayAnonWithErrorRequest{})

func (msg *MainProtocolTwoWayAnonWithErrorRequest) Marshaler() _bindings.Marshaler {
	return _mMainProtocolTwoWayAnonWithErrorRequest
}

func (u *MainProtocolTwoWayAnonWithErrorRequest) SetA(a uint16) {
	u.A = a
	u.APresent = true
}

func (u *MainProtocolTwoWayAnonWithErrorRequest) GetA() uint16 {
	return u.A
}

func (u *MainProtocolTwoWayAnonWithErrorRequest) GetAWithDefault(_default uint16) uint16 {
	if !u.HasA() {
		return _default
	}
	return u.A
}

func (u *MainProtocolTwoWayAnonWithErrorRequest) HasA() bool {
	return u.APresent
}

func (u *MainProtocolTwoWayAnonWithErrorRequest) ClearA() {
	u.APresent = false
}

func (u *MainProtocolTwoWayAnonWithErrorRequest) HasUnknownData() bool {
	return u.I_unknownData != nil
}

func (u *MainProtocolTwoWayAnonWithErrorRequest) GetUnknownData() map[uint64]_bindings.UnknownData {
	return u.I_unknownData.(map[uint64]_bindings.UnknownData)
}

const (
	MainProtocolOneWayAnonComposedOrdinal           uint64 = 0x67da05e1ae3f5e1
	MainProtocolTwoWayAnonComposedOrdinal           uint64 = 0x16afa17ea70d3370
	MainProtocolTwoWayAnonComposedWithErrorOrdinal  uint64 = 0x2ed33746b7bb119d
	MainProtocolOnAnonComposedOrdinal               uint64 = 0x7fa8a0bf08128a0b
	MainProtocolOnAnonComposedWithErrorOrdinal      uint64 = 0x9e24af9a2790a3b
	MainProtocolOneWayNamedComposedOrdinal          uint64 = 0x5d78ce13958eee58
	MainProtocolTwoWayNamedComposedOrdinal          uint64 = 0xf67f27cae663810
	MainProtocolTwoWayNamedComposedWithErrorOrdinal uint64 = 0x30dac4182813ef7f
	MainProtocolOnNamedComposedOrdinal              uint64 = 0x5e68f92a5b28cdea
	MainProtocolOnNamedComposedWithErrorOrdinal     uint64 = 0x67eb74dad2a05c0b
	MainProtocolOneWayImportOrdinal                 uint64 = 0x530db65f2691d3b
	MainProtocolTwoWayImportOrdinal                 uint64 = 0x2bf680c8f0d40604
	MainProtocolTwoWayImportWithErrorOrdinal        uint64 = 0x432093586084ff0a
	MainProtocolOnImportOrdinal                     uint64 = 0x5b61e3156b09acd0
	MainProtocolOnImportWithErrorOrdinal            uint64 = 0xf988d72f8ee4fd7
	MainProtocolOneWayLocalOrdinal                  uint64 = 0x54759b55efd60f43
	MainProtocolTwoWayLocalOrdinal                  uint64 = 0x6bbeeb18f39c539b
	MainProtocolTwoWayLocalWithErrorOrdinal         uint64 = 0x4dd8e7287c4c9b57
	MainProtocolOnLocalOrdinal                      uint64 = 0x3a46c48153f0437c
	MainProtocolOnLocalWithErrorOrdinal             uint64 = 0x79ac5bbdc7114e24
	MainProtocolOneWayAnonOrdinal                   uint64 = 0x3a552f30c77c76ec
	MainProtocolTwoWayAnonOrdinal                   uint64 = 0x672eb5e71efdabcf
	MainProtocolTwoWayAnonWithErrorOrdinal          uint64 = 0x6bd5fcf6f7b46df1
	MainProtocolOnAnonOrdinal                       uint64 = 0x64f7b1ec1ba0810b
	MainProtocolOnAnonWithErrorOrdinal              uint64 = 0x32f63a6e25a83699
)

type MainProtocolWithCtxInterface _bindings.ChannelProxy

func (p *MainProtocolWithCtxInterface) OneWayAnonComposed(ctx_ _bindings.Context, payload testprotocollayoutsimported.ComposedProtocolOneWayAnonComposedRequest) error {
	req_ := &payload
	err_ := ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOneWayAnonComposedOrdinal, req_)
	return err_
}

func (p *MainProtocolWithCtxInterface) TwoWayAnonComposed(ctx_ _bindings.Context, payload testprotocollayoutsimported.ComposedProtocolTwoWayAnonComposedRequest) (testprotocollayoutsimported.ComposedProtocolTwoWayAnonComposedTopResponse, error) {
	req_ := &payload
	resp_ := &testprotocollayoutsimported.ComposedProtocolTwoWayAnonComposedTopResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(MainProtocolTwoWayAnonComposedOrdinal, req_, resp_)
	return (*resp_), err_
}

func (p *MainProtocolWithCtxInterface) TwoWayAnonComposedWithError(ctx_ _bindings.Context, payload testprotocollayoutsimported.ComposedProtocolTwoWayAnonComposedWithErrorRequest) (testprotocollayoutsimported.ComposedProtocolTwoWayAnonComposedWithErrorResult, error) {
	req_ := &payload
	resp_ := &mainProtocolWithCtxTwoWayAnonComposedWithErrorResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(MainProtocolTwoWayAnonComposedWithErrorOrdinal, req_, resp_)
	return (*resp_).Result, err_
}

func (p *MainProtocolWithCtxInterface) ExpectOnAnonComposed(ctx_ _bindings.Context) (testprotocollayoutsimported.ComposedProtocolOnAnonComposedRequest, error) {
	resp_ := &testprotocollayoutsimported.ComposedProtocolOnAnonComposedRequest{}
	err_ := ((*_bindings.ChannelProxy)(p)).Recv(MainProtocolOnAnonComposedOrdinal, resp_)
	return (*resp_), err_
}

func (p *MainProtocolWithCtxInterface) ExpectOnAnonComposedWithError(ctx_ _bindings.Context) (testprotocollayoutsimported.ComposedProtocolOnAnonComposedWithErrorResult, error) {
	resp_ := &mainProtocolWithCtxOnAnonComposedWithErrorResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Recv(MainProtocolOnAnonComposedWithErrorOrdinal, resp_)
	return (*resp_).Result, err_
}

func (p *MainProtocolWithCtxInterface) OneWayNamedComposed(ctx_ _bindings.Context, payload testprotocollayoutsimported.ImportTablePayload) error {
	req_ := &payload
	err_ := ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOneWayNamedComposedOrdinal, req_)
	return err_
}

func (p *MainProtocolWithCtxInterface) TwoWayNamedComposed(ctx_ _bindings.Context, payload testprotocollayoutsimported.ImportUnionPayload) (testprotocollayoutsimported.ImportTablePayload, error) {
	req_ := &payload
	resp_ := &testprotocollayoutsimported.ImportTablePayload{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(MainProtocolTwoWayNamedComposedOrdinal, req_, resp_)
	return (*resp_), err_
}

func (p *MainProtocolWithCtxInterface) TwoWayNamedComposedWithError(ctx_ _bindings.Context, payload testprotocollayoutsimported.ImportTablePayload) (testprotocollayoutsimported.ComposedProtocolTwoWayNamedComposedWithErrorResult, error) {
	req_ := &payload
	resp_ := &mainProtocolWithCtxTwoWayNamedComposedWithErrorResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(MainProtocolTwoWayNamedComposedWithErrorOrdinal, req_, resp_)
	return (*resp_).Result, err_
}

func (p *MainProtocolWithCtxInterface) ExpectOnNamedComposed(ctx_ _bindings.Context) (testprotocollayoutsimported.ImportUnionPayload, error) {
	resp_ := &testprotocollayoutsimported.ImportUnionPayload{}
	err_ := ((*_bindings.ChannelProxy)(p)).Recv(MainProtocolOnNamedComposedOrdinal, resp_)
	return (*resp_), err_
}

func (p *MainProtocolWithCtxInterface) ExpectOnNamedComposedWithError(ctx_ _bindings.Context) (testprotocollayoutsimported.ComposedProtocolOnNamedComposedWithErrorResult, error) {
	resp_ := &mainProtocolWithCtxOnNamedComposedWithErrorResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Recv(MainProtocolOnNamedComposedWithErrorOrdinal, resp_)
	return (*resp_).Result, err_
}

func (p *MainProtocolWithCtxInterface) OneWayImport(ctx_ _bindings.Context, payload testprotocollayoutsimported.ImportTablePayload) error {
	req_ := &payload
	err_ := ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOneWayImportOrdinal, req_)
	return err_
}

func (p *MainProtocolWithCtxInterface) TwoWayImport(ctx_ _bindings.Context, payload testprotocollayoutsimported.ImportUnionPayload) (testprotocollayoutsimported.ImportTablePayload, error) {
	req_ := &payload
	resp_ := &testprotocollayoutsimported.ImportTablePayload{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(MainProtocolTwoWayImportOrdinal, req_, resp_)
	return (*resp_), err_
}

func (p *MainProtocolWithCtxInterface) TwoWayImportWithError(ctx_ _bindings.Context, payload testprotocollayoutsimported.ImportTablePayload) (MainProtocolTwoWayImportWithErrorResult, error) {
	req_ := &payload
	resp_ := &mainProtocolWithCtxTwoWayImportWithErrorResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(MainProtocolTwoWayImportWithErrorOrdinal, req_, resp_)
	return (*resp_).Result, err_
}

func (p *MainProtocolWithCtxInterface) ExpectOnImport(ctx_ _bindings.Context) (testprotocollayoutsimported.ImportUnionPayload, error) {
	resp_ := &testprotocollayoutsimported.ImportUnionPayload{}
	err_ := ((*_bindings.ChannelProxy)(p)).Recv(MainProtocolOnImportOrdinal, resp_)
	return (*resp_), err_
}

func (p *MainProtocolWithCtxInterface) ExpectOnImportWithError(ctx_ _bindings.Context) (MainProtocolOnImportWithErrorResult, error) {
	resp_ := &mainProtocolWithCtxOnImportWithErrorResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Recv(MainProtocolOnImportWithErrorOrdinal, resp_)
	return (*resp_).Result, err_
}

func (p *MainProtocolWithCtxInterface) OneWayLocal(ctx_ _bindings.Context, payload LocalTablePayload) error {
	req_ := &payload
	err_ := ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOneWayLocalOrdinal, req_)
	return err_
}

func (p *MainProtocolWithCtxInterface) TwoWayLocal(ctx_ _bindings.Context, payload LocalUnionPayload) (LocalTablePayload, error) {
	req_ := &payload
	resp_ := &LocalTablePayload{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(MainProtocolTwoWayLocalOrdinal, req_, resp_)
	return (*resp_), err_
}

func (p *MainProtocolWithCtxInterface) TwoWayLocalWithError(ctx_ _bindings.Context, payload LocalTablePayload) (MainProtocolTwoWayLocalWithErrorResult, error) {
	req_ := &payload
	resp_ := &mainProtocolWithCtxTwoWayLocalWithErrorResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(MainProtocolTwoWayLocalWithErrorOrdinal, req_, resp_)
	return (*resp_).Result, err_
}

func (p *MainProtocolWithCtxInterface) ExpectOnLocal(ctx_ _bindings.Context) (LocalUnionPayload, error) {
	resp_ := &LocalUnionPayload{}
	err_ := ((*_bindings.ChannelProxy)(p)).Recv(MainProtocolOnLocalOrdinal, resp_)
	return (*resp_), err_
}

func (p *MainProtocolWithCtxInterface) ExpectOnLocalWithError(ctx_ _bindings.Context) (MainProtocolOnLocalWithErrorResult, error) {
	resp_ := &mainProtocolWithCtxOnLocalWithErrorResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Recv(MainProtocolOnLocalWithErrorOrdinal, resp_)
	return (*resp_).Result, err_
}

func (p *MainProtocolWithCtxInterface) OneWayAnon(ctx_ _bindings.Context, payload MainProtocolOneWayAnonRequest) error {
	req_ := &payload
	err_ := ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOneWayAnonOrdinal, req_)
	return err_
}

func (p *MainProtocolWithCtxInterface) TwoWayAnon(ctx_ _bindings.Context, payload MainProtocolTwoWayAnonRequest) (MainProtocolTwoWayAnonResponse, error) {
	req_ := &payload
	resp_ := &MainProtocolTwoWayAnonResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(MainProtocolTwoWayAnonOrdinal, req_, resp_)
	return (*resp_), err_
}

func (p *MainProtocolWithCtxInterface) TwoWayAnonWithError(ctx_ _bindings.Context, payload MainProtocolTwoWayAnonWithErrorRequest) (MainProtocolTwoWayAnonWithErrorResult, error) {
	req_ := &payload
	resp_ := &mainProtocolWithCtxTwoWayAnonWithErrorResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(MainProtocolTwoWayAnonWithErrorOrdinal, req_, resp_)
	return (*resp_).Result, err_
}

func (p *MainProtocolWithCtxInterface) ExpectOnAnon(ctx_ _bindings.Context) (MainProtocolOnAnonResponse, error) {
	resp_ := &MainProtocolOnAnonResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Recv(MainProtocolOnAnonOrdinal, resp_)
	return (*resp_), err_
}

func (p *MainProtocolWithCtxInterface) ExpectOnAnonWithError(ctx_ _bindings.Context) (MainProtocolOnAnonWithErrorResult, error) {
	resp_ := &mainProtocolWithCtxOnAnonWithErrorResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Recv(MainProtocolOnAnonWithErrorOrdinal, resp_)
	return (*resp_).Result, err_
}

type MainProtocolWithCtx interface {
	OneWayAnonComposed(ctx_ _bindings.Context, payload testprotocollayoutsimported.ComposedProtocolOneWayAnonComposedRequest) error
	TwoWayAnonComposed(ctx_ _bindings.Context, payload testprotocollayoutsimported.ComposedProtocolTwoWayAnonComposedRequest) (testprotocollayoutsimported.ComposedProtocolTwoWayAnonComposedTopResponse, error)
	TwoWayAnonComposedWithError(ctx_ _bindings.Context, payload testprotocollayoutsimported.ComposedProtocolTwoWayAnonComposedWithErrorRequest) (testprotocollayoutsimported.ComposedProtocolTwoWayAnonComposedWithErrorResult, error)
	OneWayNamedComposed(ctx_ _bindings.Context, payload testprotocollayoutsimported.ImportTablePayload) error
	TwoWayNamedComposed(ctx_ _bindings.Context, payload testprotocollayoutsimported.ImportUnionPayload) (testprotocollayoutsimported.ImportTablePayload, error)
	TwoWayNamedComposedWithError(ctx_ _bindings.Context, payload testprotocollayoutsimported.ImportTablePayload) (testprotocollayoutsimported.ComposedProtocolTwoWayNamedComposedWithErrorResult, error)
	OneWayImport(ctx_ _bindings.Context, payload testprotocollayoutsimported.ImportTablePayload) error
	TwoWayImport(ctx_ _bindings.Context, payload testprotocollayoutsimported.ImportUnionPayload) (testprotocollayoutsimported.ImportTablePayload, error)
	TwoWayImportWithError(ctx_ _bindings.Context, payload testprotocollayoutsimported.ImportTablePayload) (MainProtocolTwoWayImportWithErrorResult, error)
	OneWayLocal(ctx_ _bindings.Context, payload LocalTablePayload) error
	TwoWayLocal(ctx_ _bindings.Context, payload LocalUnionPayload) (LocalTablePayload, error)
	TwoWayLocalWithError(ctx_ _bindings.Context, payload LocalTablePayload) (MainProtocolTwoWayLocalWithErrorResult, error)
	OneWayAnon(ctx_ _bindings.Context, payload MainProtocolOneWayAnonRequest) error
	TwoWayAnon(ctx_ _bindings.Context, payload MainProtocolTwoWayAnonRequest) (MainProtocolTwoWayAnonResponse, error)
	TwoWayAnonWithError(ctx_ _bindings.Context, payload MainProtocolTwoWayAnonWithErrorRequest) (MainProtocolTwoWayAnonWithErrorResult, error)
}

type MainProtocolWithCtxTransitionalBase struct{}

type MainProtocolWithCtxInterfaceRequest _bindings.InterfaceRequest

func NewMainProtocolWithCtxInterfaceRequest() (MainProtocolWithCtxInterfaceRequest, *MainProtocolWithCtxInterface, error) {
	req, cli, err := _bindings.NewInterfaceRequest()
	return MainProtocolWithCtxInterfaceRequest(req), (*MainProtocolWithCtxInterface)(cli), err
}

type MainProtocolWithCtxStub struct {
	Impl MainProtocolWithCtx
}

func (s_ *MainProtocolWithCtxStub) Dispatch(args_ _bindings.DispatchArgs) (_bindings.Message, bool, error) {
	switch args_.Ordinal {
	case MainProtocolOneWayAnonComposedOrdinal:
		in_ := &testprotocollayoutsimported.ComposedProtocolOneWayAnonComposedRequest{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		err_ := s_.Impl.OneWayAnonComposed(args_.Ctx, (*in_))
		return nil, false, err_
	case MainProtocolTwoWayAnonComposedOrdinal:
		in_ := &testprotocollayoutsimported.ComposedProtocolTwoWayAnonComposedRequest{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		payload, err_ := s_.Impl.TwoWayAnonComposed(args_.Ctx, (*in_))
		out_ := &payload
		return out_, true, err_
	case MainProtocolTwoWayAnonComposedWithErrorOrdinal:
		in_ := &testprotocollayoutsimported.ComposedProtocolTwoWayAnonComposedWithErrorRequest{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		result, err_ := s_.Impl.TwoWayAnonComposedWithError(args_.Ctx, (*in_))
		out_ := &mainProtocolWithCtxTwoWayAnonComposedWithErrorResponse{Result: result}
		return out_, true, err_
	case MainProtocolOneWayNamedComposedOrdinal:
		in_ := &testprotocollayoutsimported.ImportTablePayload{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		err_ := s_.Impl.OneWayNamedComposed(args_.Ctx, (*in_))
		return nil, false, err_
	case MainProtocolTwoWayNamedComposedOrdinal:
		in_ := &testprotocollayoutsimported.ImportUnionPayload{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		payload, err_ := s_.Impl.TwoWayNamedComposed(args_.Ctx, (*in_))
		out_ := &payload
		return out_, true, err_
	case MainProtocolTwoWayNamedComposedWithErrorOrdinal:
		in_ := &testprotocollayoutsimported.ImportTablePayload{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		result, err_ := s_.Impl.TwoWayNamedComposedWithError(args_.Ctx, (*in_))
		out_ := &mainProtocolWithCtxTwoWayNamedComposedWithErrorResponse{Result: result}
		return out_, true, err_
	case MainProtocolOneWayImportOrdinal:
		in_ := &testprotocollayoutsimported.ImportTablePayload{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		err_ := s_.Impl.OneWayImport(args_.Ctx, (*in_))
		return nil, false, err_
	case MainProtocolTwoWayImportOrdinal:
		in_ := &testprotocollayoutsimported.ImportUnionPayload{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		payload, err_ := s_.Impl.TwoWayImport(args_.Ctx, (*in_))
		out_ := &payload
		return out_, true, err_
	case MainProtocolTwoWayImportWithErrorOrdinal:
		in_ := &testprotocollayoutsimported.ImportTablePayload{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		result, err_ := s_.Impl.TwoWayImportWithError(args_.Ctx, (*in_))
		out_ := &mainProtocolWithCtxTwoWayImportWithErrorResponse{Result: result}
		return out_, true, err_
	case MainProtocolOneWayLocalOrdinal:
		in_ := &LocalTablePayload{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		err_ := s_.Impl.OneWayLocal(args_.Ctx, (*in_))
		return nil, false, err_
	case MainProtocolTwoWayLocalOrdinal:
		in_ := &LocalUnionPayload{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		payload, err_ := s_.Impl.TwoWayLocal(args_.Ctx, (*in_))
		out_ := &payload
		return out_, true, err_
	case MainProtocolTwoWayLocalWithErrorOrdinal:
		in_ := &LocalTablePayload{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		result, err_ := s_.Impl.TwoWayLocalWithError(args_.Ctx, (*in_))
		out_ := &mainProtocolWithCtxTwoWayLocalWithErrorResponse{Result: result}
		return out_, true, err_
	case MainProtocolOneWayAnonOrdinal:
		in_ := &MainProtocolOneWayAnonRequest{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		err_ := s_.Impl.OneWayAnon(args_.Ctx, (*in_))
		return nil, false, err_
	case MainProtocolTwoWayAnonOrdinal:
		in_ := &MainProtocolTwoWayAnonRequest{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		payload, err_ := s_.Impl.TwoWayAnon(args_.Ctx, (*in_))
		out_ := &payload
		return out_, true, err_
	case MainProtocolTwoWayAnonWithErrorOrdinal:
		in_ := &MainProtocolTwoWayAnonWithErrorRequest{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if err_ := _bindings.Unmarshal(marshalerCtx, args_.Bytes, args_.HandleInfos, in_); err_ != nil {
			return nil, false, err_
		}
		result, err_ := s_.Impl.TwoWayAnonWithError(args_.Ctx, (*in_))
		out_ := &mainProtocolWithCtxTwoWayAnonWithErrorResponse{Result: result}
		return out_, true, err_
	}
	return nil, false, _bindings.ErrUnknownOrdinal
}

type MainProtocolEventProxy _bindings.ChannelProxy

func (p *MainProtocolEventProxy) OnAnonComposed(payload testprotocollayoutsimported.ComposedProtocolOnAnonComposedRequest) error {
	event_ := &payload
	return ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOnAnonComposedOrdinal, event_)
}
func (p *MainProtocolEventProxy) OnAnonComposedWithError(result testprotocollayoutsimported.ComposedProtocolOnAnonComposedWithErrorResult) error {
	event_ := &mainProtocolWithCtxOnAnonComposedWithErrorResponse{Result: result}
	return ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOnAnonComposedWithErrorOrdinal, event_)
}
func (p *MainProtocolEventProxy) OnNamedComposed(payload testprotocollayoutsimported.ImportUnionPayload) error {
	event_ := &payload
	return ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOnNamedComposedOrdinal, event_)
}
func (p *MainProtocolEventProxy) OnNamedComposedWithError(result testprotocollayoutsimported.ComposedProtocolOnNamedComposedWithErrorResult) error {
	event_ := &mainProtocolWithCtxOnNamedComposedWithErrorResponse{Result: result}
	return ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOnNamedComposedWithErrorOrdinal, event_)
}
func (p *MainProtocolEventProxy) OnImport(payload testprotocollayoutsimported.ImportUnionPayload) error {
	event_ := &payload
	return ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOnImportOrdinal, event_)
}
func (p *MainProtocolEventProxy) OnImportWithError(result MainProtocolOnImportWithErrorResult) error {
	event_ := &mainProtocolWithCtxOnImportWithErrorResponse{Result: result}
	return ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOnImportWithErrorOrdinal, event_)
}
func (p *MainProtocolEventProxy) OnLocal(payload LocalUnionPayload) error {
	event_ := &payload
	return ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOnLocalOrdinal, event_)
}
func (p *MainProtocolEventProxy) OnLocalWithError(result MainProtocolOnLocalWithErrorResult) error {
	event_ := &mainProtocolWithCtxOnLocalWithErrorResponse{Result: result}
	return ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOnLocalWithErrorOrdinal, event_)
}
func (p *MainProtocolEventProxy) OnAnon(payload MainProtocolOnAnonResponse) error {
	event_ := &payload
	return ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOnAnonOrdinal, event_)
}
func (p *MainProtocolEventProxy) OnAnonWithError(result MainProtocolOnAnonWithErrorResult) error {
	event_ := &mainProtocolWithCtxOnAnonWithErrorResponse{Result: result}
	return ((*_bindings.ChannelProxy)(p)).Send(MainProtocolOnAnonWithErrorOrdinal, event_)
}
