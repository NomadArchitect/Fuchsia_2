# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

include <fidl/test/drivertwoway/c/fidl.h>


fidl_test_drivertwoway_TwoWayAddRequest {
       hdr fidl_message_header[7312196191678030330]
       addend1 int16
       addend2 int16
} [packed]
fidl_test_drivertwoway_TwoWayAddRequestHandles {
       void void
} [packed]
fidl_test_drivertwoway_TwoWayAddResponse {
       hdr fidl_message_header[7312196191678030330]
       sum int16
} [packed]
fidl_test_drivertwoway_TwoWayAddResponseHandles {
       void void
} [packed]

resource zx_chan_fidl_test_drivertwoway_TwoWay_client[zx_chan]
resource zx_chan_fidl_test_drivertwoway_TwoWay_server[zx_chan]

zx_channel_create$fidl_test_drivertwoway_TwoWay(options const[0], out0 ptr[out, zx_chan_fidl_test_drivertwoway_TwoWay_client], out1 ptr[out, zx_chan_fidl_test_drivertwoway_TwoWay_server])
fdio_service_connect$fidl_test_drivertwoway_TwoWay(path ptr[in, string["/svc/"]], handle zx_chan_fidl_test_drivertwoway_TwoWay_server)
zx_channel_call$fidl_test_drivertwoway_TwoWayAdd(handle zx_chan_fidl_test_drivertwoway_TwoWay_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fidl_test_drivertwoway_TwoWayAddRequest, fidl_test_drivertwoway_TwoWayAddRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fidl_test_drivertwoway_TwoWayAddResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])

