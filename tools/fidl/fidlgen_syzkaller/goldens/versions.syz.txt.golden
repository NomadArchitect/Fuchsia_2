# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

include <fidl/test/versions/c/fidl.h>
fidl_test_versions_Enum = fidl_test_versions_Enum_A, fidl_test_versions_Enum__UNKNOWN
fidl_test_versions_Bits = fidl_test_versions_Bits_A
fidl_test_versions_StructInLine {
       x int32
} [packed]
fidl_test_versions_StructOutOfLine {
       void void
} [packed]
fidl_test_versions_StructHandles {
       void void
} [packed]
fidl_test_versions_UnionInLine [
       x fidl_union_member[1, int32]
]
fidl_test_versions_UnionOutOfLine [
       void void
][varlen]
fidl_test_versions_UnionHandles [
       void void
][varlen]



resource zx_chan_fidl_test_versions_OtherProtocol_client[zx_chan]
resource zx_chan_fidl_test_versions_OtherProtocol_server[zx_chan]

zx_channel_create$fidl_test_versions_OtherProtocol(options const[0], out0 ptr[out, zx_chan_fidl_test_versions_OtherProtocol_client], out1 ptr[out, zx_chan_fidl_test_versions_OtherProtocol_server])
fdio_service_connect$fidl_test_versions_OtherProtocol(path ptr[in, string["/svc/"]], handle zx_chan_fidl_test_versions_OtherProtocol_server)


fidl_test_versions_ProtocolFooRequest {
       hdr fidl_message_header[7892886356712658659]
} [packed]
fidl_test_versions_ProtocolFooRequestHandles {
       void void
} [packed]

resource zx_chan_fidl_test_versions_Protocol_client[zx_chan]
resource zx_chan_fidl_test_versions_Protocol_server[zx_chan]

zx_channel_create$fidl_test_versions_Protocol(options const[0], out0 ptr[out, zx_chan_fidl_test_versions_Protocol_client], out1 ptr[out, zx_chan_fidl_test_versions_Protocol_server])
fdio_service_connect$fidl_test_versions_Protocol(path ptr[in, string["/svc/"]], handle zx_chan_fidl_test_versions_Protocol_server)
zx_channel_write$fidl_test_versions_ProtocolFoo(handle zx_chan_fidl_test_versions_Protocol_client, options const[0], bytes ptr[in, fidl_test_versions_ProtocolFooRequest], num_bytes bytesize[bytes], handles ptr[in, fidl_test_versions_ProtocolFooRequestHandles], num_handles bytesize[handles])

