// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.emptystruct/cpp/natural_types.h>

#ifdef __Fuchsia__

void ::test_emptystruct::Empty::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::test_emptystruct::Empty, ::fidl::Encoder>(
          &encoder));
  ::fidl::CodingTraits<::test_emptystruct::Empty>::Encode(&encoder, this,
                                                          offset);
}

::test_emptystruct::Empty::Empty(::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<uint8_t>(&decoder, 0)}) {}
#endif  // __Fuchsia__

::test_emptystruct::Empty::Storage test_emptystruct::Empty::CloneStorage()
    const {
  return Storage{::fidl::internal::NaturalClone(storage_.__reserved)};
}
#ifdef __Fuchsia__

void ::test_emptystruct::EmptyProtocolSendRequest::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::test_emptystruct::EmptyProtocolSendRequest,
                                 ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::test_emptystruct::EmptyProtocolSendRequest>::Encode(
      &encoder, this, offset);
}

::test_emptystruct::EmptyProtocolSendRequest::EmptyProtocolSendRequest(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::test_emptystruct::Empty>(&decoder, 0)}) {}
#endif  // __Fuchsia__

::test_emptystruct::EmptyProtocolSendRequest::Storage
test_emptystruct::EmptyProtocolSendRequest::CloneStorage() const {
  return Storage{::fidl::internal::NaturalClone(storage_.e)};
}
#ifdef __Fuchsia__

void ::test_emptystruct::EmptyProtocolSendAndReceiveTopResponse::
    EncodeWithoutValidating(::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(::fidl::EncodingInlineSize<
                ::test_emptystruct::EmptyProtocolSendAndReceiveTopResponse,
                ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<
      ::test_emptystruct::EmptyProtocolSendAndReceiveTopResponse>::
      Encode(&encoder, this, offset);
}

::test_emptystruct::EmptyProtocolSendAndReceiveTopResponse::
    EmptyProtocolSendAndReceiveTopResponse(::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::test_emptystruct::Empty>(&decoder, 0)}) {}
#endif  // __Fuchsia__

::test_emptystruct::EmptyProtocolSendAndReceiveTopResponse::Storage
test_emptystruct::EmptyProtocolSendAndReceiveTopResponse::CloneStorage() const {
  return Storage{::fidl::internal::NaturalClone(storage_.e)};
}
#ifdef __Fuchsia__

void ::test_emptystruct::EmptyProtocolSendAndReceiveRequest::
    EncodeWithoutValidating(::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(::fidl::EncodingInlineSize<
                ::test_emptystruct::EmptyProtocolSendAndReceiveRequest,
                ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<
      ::test_emptystruct::EmptyProtocolSendAndReceiveRequest>::Encode(&encoder,
                                                                      this,
                                                                      offset);
}

::test_emptystruct::EmptyProtocolSendAndReceiveRequest::
    EmptyProtocolSendAndReceiveRequest(::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::test_emptystruct::Empty>(&decoder, 0)}) {}
#endif  // __Fuchsia__

::test_emptystruct::EmptyProtocolSendAndReceiveRequest::Storage
test_emptystruct::EmptyProtocolSendAndReceiveRequest::CloneStorage() const {
  return Storage{::fidl::internal::NaturalClone(storage_.e)};
}
#ifdef __Fuchsia__

void ::test_emptystruct::EmptyProtocolReceiveRequest::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<
          ::test_emptystruct::EmptyProtocolReceiveRequest, ::fidl::Encoder>(
          &encoder));
  ::fidl::CodingTraits<::test_emptystruct::EmptyProtocolReceiveRequest>::Encode(
      &encoder, this, offset);
}

::test_emptystruct::EmptyProtocolReceiveRequest::EmptyProtocolReceiveRequest(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::test_emptystruct::Empty>(&decoder, 0)}) {}
#endif  // __Fuchsia__

::test_emptystruct::EmptyProtocolReceiveRequest::Storage
test_emptystruct::EmptyProtocolReceiveRequest::CloneStorage() const {
  return Storage{::fidl::internal::NaturalClone(storage_.e)};
}
