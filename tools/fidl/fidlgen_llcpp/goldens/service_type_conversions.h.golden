// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.service/cpp/markers.h>
#include <fidl/test.service/cpp/natural_types.h>
#include <fidl/test.service/cpp/wire_types.h>
#ifdef __Fuchsia__
#include <fidl/test.service/cpp/natural_messaging.h>
#include <fidl/test.service/cpp/wire_messaging.h>
#endif  // __Fuchsia__
#include <lib/fidl/cpp/wire_natural_conversions.h>

namespace fidl {
namespace internal {

#ifdef __Fuchsia__

template <>
struct WireNaturalConversionTraits<::fidl::WireRequest<::test_service::SecondProtocol::MethodOnSecond>, ::fidl::Request<::test_service::SecondProtocol::MethodOnSecond>> {
  static ::fidl::Request<::test_service::SecondProtocol::MethodOnSecond> ToNatural(::fidl::WireRequest<::test_service::SecondProtocol::MethodOnSecond> src);
  static ::fidl::WireRequest<::test_service::SecondProtocol::MethodOnSecond> ToWire(fidl::AnyArena& arena, ::fidl::Request<::test_service::SecondProtocol::MethodOnSecond> src);
};

template <>
struct NaturalTypeForWireType<::fidl::WireRequest<::test_service::SecondProtocol::MethodOnSecond>> {
  using type = ::fidl::Request<::test_service::SecondProtocol::MethodOnSecond>;
};
template <>
struct WireTypeForNaturalType<::fidl::Request<::test_service::SecondProtocol::MethodOnSecond>> {
  using type = ::fidl::WireRequest<::test_service::SecondProtocol::MethodOnSecond>;
};

template <>
struct WireNaturalConversionTraits<::fidl::WireRequest<::test_service::FirstProtocol::MethodOnFirst>, ::fidl::Request<::test_service::FirstProtocol::MethodOnFirst>> {
  static ::fidl::Request<::test_service::FirstProtocol::MethodOnFirst> ToNatural(::fidl::WireRequest<::test_service::FirstProtocol::MethodOnFirst> src);
  static ::fidl::WireRequest<::test_service::FirstProtocol::MethodOnFirst> ToWire(fidl::AnyArena& arena, ::fidl::Request<::test_service::FirstProtocol::MethodOnFirst> src);
};

template <>
struct NaturalTypeForWireType<::fidl::WireRequest<::test_service::FirstProtocol::MethodOnFirst>> {
  using type = ::fidl::Request<::test_service::FirstProtocol::MethodOnFirst>;
};
template <>
struct WireTypeForNaturalType<::fidl::Request<::test_service::FirstProtocol::MethodOnFirst>> {
  using type = ::fidl::WireRequest<::test_service::FirstProtocol::MethodOnFirst>;
};
#endif  // __Fuchsia__
}  // namespace internal
}  // namespace fidl
