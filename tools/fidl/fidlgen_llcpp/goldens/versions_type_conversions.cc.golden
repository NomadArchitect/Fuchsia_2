// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.versions/cpp/type_conversions.h>

namespace fidl {
namespace internal {

::test_versions::Struct WireNaturalConversionTraits<
    ::test_versions::wire::Struct,
    ::test_versions::Struct>::ToNatural(::test_versions::wire::Struct src) {
  return ::test_versions::Struct(
      WireNaturalConversionTraits<uint32_t, uint32_t>::ToNatural(
          std::move(src.x)));
}

::test_versions::Table WireNaturalConversionTraits<
    ::test_versions::wire::Table,
    ::test_versions::Table>::ToNatural(::test_versions::wire::Table src) {
  ::test_versions::Table dst;
  if (src.has_x()) {
    dst.x() = WireNaturalConversionTraits<uint32_t, uint32_t>::ToNatural(
        std::move(src.x()));
  }

  return dst;
}

::test_versions::Union WireNaturalConversionTraits<
    ::test_versions::wire::Union,
    ::test_versions::Union>::ToNatural(::test_versions::wire::Union src) {
  switch (src.Which()) {
    case ::test_versions::wire::Union::Tag::kX:
      return ::test_versions::Union::WithX(
          WireNaturalConversionTraits<uint32_t, uint32_t>::ToNatural(
              std::move(src.x())));
    default:
      return ::test_versions::Union();
  }
}

std::unique_ptr<::test_versions::Union> WireNaturalConversionTraits<
    ::test_versions::wire::Union, std::unique_ptr<::test_versions::Union>>::
    ToNatural(::test_versions::wire::Union src) {
  if (src.has_invalid_tag()) {
    return nullptr;
  }
  return std::make_unique<::test_versions::Union>(
      WireNaturalConversionTraits<
          ::test_versions::wire::Union,
          ::test_versions::Union>::ToNatural(std::move(src)));
}

#ifdef __Fuchsia__

::fidl::Request<::test_versions::Protocol::Foo>
WireNaturalConversionTraits<::fidl::WireRequest<::test_versions::Protocol::Foo>,
                            ::fidl::Request<::test_versions::Protocol::Foo>>::
    ToNatural(::fidl::WireRequest<::test_versions::Protocol::Foo> src) {
  return ::fidl::Request<::test_versions::Protocol::Foo>();
}
#endif  // __Fuchsia__
}  // namespace internal
}  // namespace fidl
