// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.arrays/cpp/markers.h>
#include <fidl/test.arrays/cpp/natural_types.h>
#include <fidl/test.arrays/cpp/wire_types.h>
#ifdef __Fuchsia__
#include <fidl/test.arrays/cpp/natural_messaging.h>
#include <fidl/test.arrays/cpp/wire_messaging.h>
#endif  // __Fuchsia__
#include <lib/fidl/cpp/wire_natural_conversions.h>

namespace fidl {
namespace internal {

template <>
struct WireNaturalConversionTraits<::test_arrays::wire::StructSmallArray,
                                   ::test_arrays::StructSmallArray> {
  static ::test_arrays::StructSmallArray ToNatural(
      ::test_arrays::wire::StructSmallArray src);
};

template <>
struct NaturalTypeForWireType<::test_arrays::wire::StructSmallArray> {
  using type = ::test_arrays::StructSmallArray;
};

template <>
struct WireNaturalConversionTraits<::test_arrays::wire::StructLargeArray,
                                   ::test_arrays::StructLargeArray> {
  static ::test_arrays::StructLargeArray ToNatural(
      ::test_arrays::wire::StructLargeArray src);
};

template <>
struct NaturalTypeForWireType<::test_arrays::wire::StructLargeArray> {
  using type = ::test_arrays::StructLargeArray;
};

template <>
struct WireNaturalConversionTraits<::test_arrays::wire::TableSmallArray,
                                   ::test_arrays::TableSmallArray> {
  static ::test_arrays::TableSmallArray ToNatural(
      ::test_arrays::wire::TableSmallArray src);
};

template <>
struct NaturalTypeForWireType<::test_arrays::wire::TableSmallArray> {
  using type = ::test_arrays::TableSmallArray;
};

template <>
struct WireNaturalConversionTraits<::test_arrays::wire::TableLargeArray,
                                   ::test_arrays::TableLargeArray> {
  static ::test_arrays::TableLargeArray ToNatural(
      ::test_arrays::wire::TableLargeArray src);
};

template <>
struct NaturalTypeForWireType<::test_arrays::wire::TableLargeArray> {
  using type = ::test_arrays::TableLargeArray;
};

template <>
struct WireNaturalConversionTraits<::test_arrays::wire::UnionSmallArray,
                                   ::test_arrays::UnionSmallArray> {
  static ::test_arrays::UnionSmallArray ToNatural(
      ::test_arrays::wire::UnionSmallArray src);
};

template <>
struct WireNaturalConversionTraits<
    ::test_arrays::wire::UnionSmallArray,
    std::unique_ptr<::test_arrays::UnionSmallArray>> {
  static std::unique_ptr<::test_arrays::UnionSmallArray> ToNatural(
      ::test_arrays::wire::UnionSmallArray src);
};

template <>
struct NaturalTypeForWireType<::test_arrays::wire::UnionSmallArray> {
  using type = std::unique_ptr<::test_arrays::UnionSmallArray>;
};

template <>
struct WireNaturalConversionTraits<::test_arrays::wire::UnionLargeArray,
                                   ::test_arrays::UnionLargeArray> {
  static ::test_arrays::UnionLargeArray ToNatural(
      ::test_arrays::wire::UnionLargeArray src);
};

template <>
struct WireNaturalConversionTraits<
    ::test_arrays::wire::UnionLargeArray,
    std::unique_ptr<::test_arrays::UnionLargeArray>> {
  static std::unique_ptr<::test_arrays::UnionLargeArray> ToNatural(
      ::test_arrays::wire::UnionLargeArray src);
};

template <>
struct NaturalTypeForWireType<::test_arrays::wire::UnionLargeArray> {
  using type = std::unique_ptr<::test_arrays::UnionLargeArray>;
};

#ifdef __Fuchsia__

#endif  // __Fuchsia__
}  // namespace internal
}  // namespace fidl
