// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <lib/fidl/llcpp/array.h>
#include <lib/fidl/llcpp/coding.h>
#include <lib/fidl/llcpp/envelope.h>
#include <lib/fidl/llcpp/message.h>
#include <lib/fidl/llcpp/message_storage.h>
#include <lib/fidl/llcpp/object_view.h>
#include <lib/fidl/llcpp/string_view.h>
#include <lib/fidl/llcpp/traits.h>
#include <lib/fidl/llcpp/wire_types.h>
#include <lib/stdcompat/optional.h>

#include <cinttypes>
#ifdef __Fuchsia__

#endif  // __Fuchsia__

#include <fidl/fidl.test.escaping/cpp/markers.h>

namespace fidl_test_escaping {
namespace wire {
struct DocCommentWithQuotes;

extern "C" const fidl_type_t fidl_test_escaping_DocCommentWithQuotesTable;

/// "pleaseescapethisdocommentproperly"
struct DocCommentWithQuotes {
  static constexpr const fidl_type_t* Type =
      &fidl_test_escaping_DocCommentWithQuotesTable;
  static constexpr uint32_t MaxNumHandles = 0;
  static constexpr uint32_t PrimarySize = 1;
  static constexpr uint32_t PrimarySizeV1 = 1;
  [[maybe_unused]] static constexpr uint32_t MaxOutOfLine = 0;
  static constexpr uint32_t MaxOutOfLineV1 = 0;
  static constexpr bool HasPointer = false;

  uint8_t __reserved = {};

  class UnownedEncodedMessage;
  class OwnedEncodedMessage;
  class DecodedMessage;
};

}  // namespace wire
}  // namespace fidl_test_escaping
namespace fidl {

template <>
struct IsFidlType<::fidl_test_escaping::wire::DocCommentWithQuotes>
    : public std::true_type {};
template <>
struct IsStruct<::fidl_test_escaping::wire::DocCommentWithQuotes>
    : public std::true_type {};
static_assert(std::is_standard_layout_v<
              ::fidl_test_escaping::wire::DocCommentWithQuotes>);
static_assert(offsetof(::fidl_test_escaping::wire::DocCommentWithQuotes,
                       __reserved) == 0);
static_assert(sizeof(::fidl_test_escaping::wire::DocCommentWithQuotes) ==
              ::fidl_test_escaping::wire::DocCommentWithQuotes::PrimarySize);

}  // namespace fidl
