// WARNING: This file is machine generated by fidlgen.

#include <fidl/test/inheritancewithrecursivedecl/llcpp/fidl.h>

#include <memory>

namespace fidl_test_inheritancewithrecursivedecl {
[[maybe_unused]] constexpr uint64_t kParent_First_Ordinal =
    3051519745671742363lu;

extern "C" const fidl_type_t
    fidl_test_inheritancewithrecursivedecl_ParentFirstRequestTable;

extern "C" const fidl_type_t
    fidl_test_inheritancewithrecursivedecl_ParentFirstResponseTable;
#ifdef __Fuchsia__
}  // namespace fidl_test_inheritancewithrecursivedecl
::fidl::WireResult<::fidl_test_inheritancewithrecursivedecl::Parent::First>::
    WireResult(
        ::fidl::UnownedClientEnd<
            ::fidl_test_inheritancewithrecursivedecl::Parent>
            _client,
        ::fidl::ServerEnd<::fidl_test_inheritancewithrecursivedecl::Parent>&&
            request) {
  ::fidl::OwnedEncodedMessage<::fidl::WireRequest<
      ::fidl_test_inheritancewithrecursivedecl::Parent::First>>
      _request(::fidl::internal::AllowUnownedInputRef{}, zx_txid_t(0),
               std::move(request));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Write(_client);
  SetResult(_outgoing);
}
namespace fidl_test_inheritancewithrecursivedecl {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_inheritancewithrecursivedecl
::fidl::WireUnownedResult<
    ::fidl_test_inheritancewithrecursivedecl::Parent::First>::
    WireUnownedResult(
        ::fidl::UnownedClientEnd<
            ::fidl_test_inheritancewithrecursivedecl::Parent>
            _client,
        uint8_t* _request_bytes, uint32_t _request_byte_capacity,
        ::fidl::ServerEnd<::fidl_test_inheritancewithrecursivedecl::Parent>&&
            request) {
  ::fidl::UnownedEncodedMessage<::fidl::WireRequest<
      ::fidl_test_inheritancewithrecursivedecl::Parent::First>>
      _request(_request_bytes, _request_byte_capacity, zx_txid_t(0),
               std::move(request));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Write(_client);
  ::fidl::Result::operator=(_outgoing);
}
namespace fidl_test_inheritancewithrecursivedecl {
#endif  // __Fuchsia__

}  // namespace fidl_test_inheritancewithrecursivedecl
#ifdef __Fuchsia__
::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_inheritancewithrecursivedecl::Parent>::First(
        ::fidl::ServerEnd<::fidl_test_inheritancewithrecursivedecl::Parent>&&
            request) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    auto _res = ::fidl::WireResult<
        ::fidl_test_inheritancewithrecursivedecl::Parent::First>(
        ::fidl::UnownedClientEnd<
            ::fidl_test_inheritancewithrecursivedecl::Parent>(
            _channel->handle()),
        std::move(request));
    return _res;
  }
  return ::fidl::Result::Unbound();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_inheritancewithrecursivedecl::Parent>::First(
        ::fidl::BufferSpan _request_buffer,
        ::fidl::ServerEnd<::fidl_test_inheritancewithrecursivedecl::Parent>&&
            request) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    auto _res = ::fidl::WireUnownedResult<
        ::fidl_test_inheritancewithrecursivedecl::Parent::First>(
        ::fidl::UnownedClientEnd<
            ::fidl_test_inheritancewithrecursivedecl::Parent>(
            _channel->handle()),
        _request_buffer.data, _request_buffer.capacity, std::move(request));
    return _res;
  }
  return ::fidl::Result::Unbound();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
std::optional<::fidl::UnbindInfo> fidl::internal::WireClientImpl<
    ::fidl_test_inheritancewithrecursivedecl::Parent>::
    DispatchEvent(fidl::IncomingMessage& msg,
                  ::fidl::internal::AsyncEventHandler* maybe_event_handler) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::DispatchResult fidl::internal::WireServerDispatcher<
    ::fidl_test_inheritancewithrecursivedecl::Parent>::
    TryDispatch(::fidl::WireServer<
                    ::fidl_test_inheritancewithrecursivedecl::Parent>* impl,
                ::fidl::IncomingMessage& msg, ::fidl::Transaction* txn) {
  static const ::fidl::internal::MethodEntry entries[] = {
      {
          ::fidl_test_inheritancewithrecursivedecl::kParent_First_Ordinal,
          [](void* interface, ::fidl::IncomingMessage&& msg,
             ::fidl::Transaction* txn) {
            ::fidl::DecodedMessage<::fidl::WireRequest<
                ::fidl_test_inheritancewithrecursivedecl::Parent::First>>
                decoded{std::move(msg)};
            if (unlikely(!decoded.ok())) {
              return decoded.status();
            }
            auto* primary = decoded.PrimaryObject();
            ::fidl::WireServer<::fidl_test_inheritancewithrecursivedecl::
                                   Parent>::FirstCompleter::Sync completer(txn);
            reinterpret_cast<::fidl::WireServer<
                ::fidl_test_inheritancewithrecursivedecl::Parent>*>(interface)
                ->First(primary, completer);
            return ZX_OK;
          },
      },
  };
  return ::fidl::internal::TryDispatch(
      impl, msg, txn, entries,
      entries + sizeof(entries) / sizeof(::fidl::internal::MethodEntry));
}

::fidl::DispatchResult fidl::internal::WireServerDispatcher<
    ::fidl_test_inheritancewithrecursivedecl::Parent>::
    Dispatch(::fidl::WireServer<
                 ::fidl_test_inheritancewithrecursivedecl::Parent>* impl,
             ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  ::fidl::DispatchResult dispatch_result = TryDispatch(impl, msg, txn);
  if (unlikely(dispatch_result == ::fidl::DispatchResult::kNotFound)) {
    std::move(msg).CloseHandles();
    txn->InternalError(::fidl::UnbindInfo::UnknownOrdinal());
  }
  return dispatch_result;
}
::fidl::DispatchResult
fidl::WireServer<::fidl_test_inheritancewithrecursivedecl::Parent>::
    dispatch_message(fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  return ::fidl::internal::WireServerDispatcher<
      ::fidl_test_inheritancewithrecursivedecl::Parent>::Dispatch(this,
                                                                  std::move(
                                                                      msg),
                                                                  txn);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl::WireRequest<::fidl_test_inheritancewithrecursivedecl::Parent::
                             First>::_InitHeader(zx_txid_t _txid) {
  fidl_init_txn_header(
      &_hdr, _txid,
      ::fidl_test_inheritancewithrecursivedecl::kParent_First_Ordinal);
}

void ::fidl::WireRequest<
    ::fidl_test_inheritancewithrecursivedecl::Parent::First>::_CloseHandles() {
  request.reset();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

namespace fidl_test_inheritancewithrecursivedecl {
[[maybe_unused]] constexpr uint64_t kChild_First_Ordinal =
    3051519745671742363lu;

extern "C" const fidl_type_t
    fidl_test_inheritancewithrecursivedecl_ChildFirstRequestTable;

extern "C" const fidl_type_t
    fidl_test_inheritancewithrecursivedecl_ChildFirstResponseTable;

[[maybe_unused]] constexpr uint64_t kChild_Second_Ordinal =
    489667253787160198lu;

extern "C" const fidl_type_t
    fidl_test_inheritancewithrecursivedecl_ChildSecondRequestTable;

extern "C" const fidl_type_t
    fidl_test_inheritancewithrecursivedecl_ChildSecondResponseTable;
#ifdef __Fuchsia__
}  // namespace fidl_test_inheritancewithrecursivedecl
::fidl::WireResult<::fidl_test_inheritancewithrecursivedecl::Child::First>::
    WireResult(
        ::fidl::UnownedClientEnd<
            ::fidl_test_inheritancewithrecursivedecl::Child>
            _client,
        ::fidl::ServerEnd<::fidl_test_inheritancewithrecursivedecl::Parent>&&
            request) {
  ::fidl::OwnedEncodedMessage<::fidl::WireRequest<
      ::fidl_test_inheritancewithrecursivedecl::Child::First>>
      _request(::fidl::internal::AllowUnownedInputRef{}, zx_txid_t(0),
               std::move(request));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Write(_client);
  SetResult(_outgoing);
}
namespace fidl_test_inheritancewithrecursivedecl {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_inheritancewithrecursivedecl
::fidl::WireUnownedResult<
    ::fidl_test_inheritancewithrecursivedecl::Child::First>::
    WireUnownedResult(
        ::fidl::UnownedClientEnd<
            ::fidl_test_inheritancewithrecursivedecl::Child>
            _client,
        uint8_t* _request_bytes, uint32_t _request_byte_capacity,
        ::fidl::ServerEnd<::fidl_test_inheritancewithrecursivedecl::Parent>&&
            request) {
  ::fidl::UnownedEncodedMessage<::fidl::WireRequest<
      ::fidl_test_inheritancewithrecursivedecl::Child::First>>
      _request(_request_bytes, _request_byte_capacity, zx_txid_t(0),
               std::move(request));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Write(_client);
  ::fidl::Result::operator=(_outgoing);
}
namespace fidl_test_inheritancewithrecursivedecl {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_inheritancewithrecursivedecl
::fidl::WireResult<::fidl_test_inheritancewithrecursivedecl::Child::Second>::
    WireResult(
        ::fidl::UnownedClientEnd<
            ::fidl_test_inheritancewithrecursivedecl::Child>
            _client,
        ::fidl::ServerEnd<::fidl_test_inheritancewithrecursivedecl::Parent>&&
            request) {
  ::fidl::OwnedEncodedMessage<::fidl::WireRequest<
      ::fidl_test_inheritancewithrecursivedecl::Child::Second>>
      _request(::fidl::internal::AllowUnownedInputRef{}, zx_txid_t(0),
               std::move(request));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Write(_client);
  SetResult(_outgoing);
}
namespace fidl_test_inheritancewithrecursivedecl {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_inheritancewithrecursivedecl
::fidl::WireUnownedResult<
    ::fidl_test_inheritancewithrecursivedecl::Child::Second>::
    WireUnownedResult(
        ::fidl::UnownedClientEnd<
            ::fidl_test_inheritancewithrecursivedecl::Child>
            _client,
        uint8_t* _request_bytes, uint32_t _request_byte_capacity,
        ::fidl::ServerEnd<::fidl_test_inheritancewithrecursivedecl::Parent>&&
            request) {
  ::fidl::UnownedEncodedMessage<::fidl::WireRequest<
      ::fidl_test_inheritancewithrecursivedecl::Child::Second>>
      _request(_request_bytes, _request_byte_capacity, zx_txid_t(0),
               std::move(request));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Write(_client);
  ::fidl::Result::operator=(_outgoing);
}
namespace fidl_test_inheritancewithrecursivedecl {
#endif  // __Fuchsia__

}  // namespace fidl_test_inheritancewithrecursivedecl
#ifdef __Fuchsia__
::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_inheritancewithrecursivedecl::Child>::First(
        ::fidl::ServerEnd<::fidl_test_inheritancewithrecursivedecl::Parent>&&
            request) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    auto _res = ::fidl::WireResult<
        ::fidl_test_inheritancewithrecursivedecl::Child::First>(
        ::fidl::UnownedClientEnd<
            ::fidl_test_inheritancewithrecursivedecl::Child>(
            _channel->handle()),
        std::move(request));
    return _res;
  }
  return ::fidl::Result::Unbound();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_inheritancewithrecursivedecl::Child>::First(
        ::fidl::BufferSpan _request_buffer,
        ::fidl::ServerEnd<::fidl_test_inheritancewithrecursivedecl::Parent>&&
            request) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    auto _res = ::fidl::WireUnownedResult<
        ::fidl_test_inheritancewithrecursivedecl::Child::First>(
        ::fidl::UnownedClientEnd<
            ::fidl_test_inheritancewithrecursivedecl::Child>(
            _channel->handle()),
        _request_buffer.data, _request_buffer.capacity, std::move(request));
    return _res;
  }
  return ::fidl::Result::Unbound();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_inheritancewithrecursivedecl::Child>::Second(
        ::fidl::ServerEnd<::fidl_test_inheritancewithrecursivedecl::Parent>&&
            request) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    auto _res = ::fidl::WireResult<
        ::fidl_test_inheritancewithrecursivedecl::Child::Second>(
        ::fidl::UnownedClientEnd<
            ::fidl_test_inheritancewithrecursivedecl::Child>(
            _channel->handle()),
        std::move(request));
    return _res;
  }
  return ::fidl::Result::Unbound();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_inheritancewithrecursivedecl::Child>::Second(
        ::fidl::BufferSpan _request_buffer,
        ::fidl::ServerEnd<::fidl_test_inheritancewithrecursivedecl::Parent>&&
            request) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    auto _res = ::fidl::WireUnownedResult<
        ::fidl_test_inheritancewithrecursivedecl::Child::Second>(
        ::fidl::UnownedClientEnd<
            ::fidl_test_inheritancewithrecursivedecl::Child>(
            _channel->handle()),
        _request_buffer.data, _request_buffer.capacity, std::move(request));
    return _res;
  }
  return ::fidl::Result::Unbound();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
std::optional<::fidl::UnbindInfo> fidl::internal::WireClientImpl<
    ::fidl_test_inheritancewithrecursivedecl::Child>::
    DispatchEvent(fidl::IncomingMessage& msg,
                  ::fidl::internal::AsyncEventHandler* maybe_event_handler) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::DispatchResult fidl::internal::WireServerDispatcher<
    ::fidl_test_inheritancewithrecursivedecl::Child>::
    TryDispatch(::fidl::WireServer<
                    ::fidl_test_inheritancewithrecursivedecl::Child>* impl,
                ::fidl::IncomingMessage& msg, ::fidl::Transaction* txn) {
  static const ::fidl::internal::MethodEntry entries[] = {
      {
          ::fidl_test_inheritancewithrecursivedecl::kChild_First_Ordinal,
          [](void* interface, ::fidl::IncomingMessage&& msg,
             ::fidl::Transaction* txn) {
            ::fidl::DecodedMessage<::fidl::WireRequest<
                ::fidl_test_inheritancewithrecursivedecl::Child::First>>
                decoded{std::move(msg)};
            if (unlikely(!decoded.ok())) {
              return decoded.status();
            }
            auto* primary = decoded.PrimaryObject();
            ::fidl::WireServer<::fidl_test_inheritancewithrecursivedecl::
                                   Child>::FirstCompleter::Sync completer(txn);
            reinterpret_cast<::fidl::WireServer<
                ::fidl_test_inheritancewithrecursivedecl::Child>*>(interface)
                ->First(primary, completer);
            return ZX_OK;
          },
      },
      {
          ::fidl_test_inheritancewithrecursivedecl::kChild_Second_Ordinal,
          [](void* interface, ::fidl::IncomingMessage&& msg,
             ::fidl::Transaction* txn) {
            ::fidl::DecodedMessage<::fidl::WireRequest<
                ::fidl_test_inheritancewithrecursivedecl::Child::Second>>
                decoded{std::move(msg)};
            if (unlikely(!decoded.ok())) {
              return decoded.status();
            }
            auto* primary = decoded.PrimaryObject();
            ::fidl::WireServer<::fidl_test_inheritancewithrecursivedecl::
                                   Child>::SecondCompleter::Sync completer(txn);
            reinterpret_cast<::fidl::WireServer<
                ::fidl_test_inheritancewithrecursivedecl::Child>*>(interface)
                ->Second(primary, completer);
            return ZX_OK;
          },
      },
  };
  return ::fidl::internal::TryDispatch(
      impl, msg, txn, entries,
      entries + sizeof(entries) / sizeof(::fidl::internal::MethodEntry));
}

::fidl::DispatchResult fidl::internal::WireServerDispatcher<
    ::fidl_test_inheritancewithrecursivedecl::Child>::
    Dispatch(::fidl::WireServer<
                 ::fidl_test_inheritancewithrecursivedecl::Child>* impl,
             ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  ::fidl::DispatchResult dispatch_result = TryDispatch(impl, msg, txn);
  if (unlikely(dispatch_result == ::fidl::DispatchResult::kNotFound)) {
    std::move(msg).CloseHandles();
    txn->InternalError(::fidl::UnbindInfo::UnknownOrdinal());
  }
  return dispatch_result;
}
::fidl::DispatchResult
fidl::WireServer<::fidl_test_inheritancewithrecursivedecl::Child>::
    dispatch_message(fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  return ::fidl::internal::WireServerDispatcher<
      ::fidl_test_inheritancewithrecursivedecl::Child>::Dispatch(this,
                                                                 std::move(msg),
                                                                 txn);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl::WireRequest<::fidl_test_inheritancewithrecursivedecl::Child::
                             First>::_InitHeader(zx_txid_t _txid) {
  fidl_init_txn_header(
      &_hdr, _txid,
      ::fidl_test_inheritancewithrecursivedecl::kChild_First_Ordinal);
}

void ::fidl::WireRequest<
    ::fidl_test_inheritancewithrecursivedecl::Child::First>::_CloseHandles() {
  request.reset();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl::WireRequest<::fidl_test_inheritancewithrecursivedecl::Child::
                             Second>::_InitHeader(zx_txid_t _txid) {
  fidl_init_txn_header(
      &_hdr, _txid,
      ::fidl_test_inheritancewithrecursivedecl::kChild_Second_Ordinal);
}

void ::fidl::WireRequest<
    ::fidl_test_inheritancewithrecursivedecl::Child::Second>::_CloseHandles() {
  request.reset();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__
