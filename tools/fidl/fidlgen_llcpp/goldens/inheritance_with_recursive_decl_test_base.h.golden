// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.inheritancewithrecursivedecl/cpp/wire.h>
namespace test_inheritancewithrecursivedecl {
namespace testing {

class Parent_TestBase
    : public ::fidl::WireServer<::test_inheritancewithrecursivedecl::Parent> {
 public:
  virtual ~Parent_TestBase() {}
  virtual void NotImplemented_(const std::string& name,
                               ::fidl::CompleterBase& completer) = 0;
  virtual void First(FirstRequestView request,
                     FirstCompleter::Sync& _completer) override {
    NotImplemented_("First", _completer);
  }
};

class Child_TestBase
    : public ::fidl::WireServer<::test_inheritancewithrecursivedecl::Child> {
 public:
  virtual ~Child_TestBase() {}
  virtual void NotImplemented_(const std::string& name,
                               ::fidl::CompleterBase& completer) = 0;
  virtual void First(FirstRequestView request,
                     FirstCompleter::Sync& _completer) override {
    NotImplemented_("First", _completer);
  }
  virtual void Second(SecondRequestView request,
                      SecondCompleter::Sync& _completer) override {
    NotImplemented_("Second", _completer);
  }
};
}  // namespace testing
}  // namespace test_inheritancewithrecursivedecl
