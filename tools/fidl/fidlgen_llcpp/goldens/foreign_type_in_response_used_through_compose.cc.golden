// WARNING: This file is machine generated by fidlgen.

#include <fidl/test/foreigntypeinresponseusedthroughcompose/llcpp/fidl.h>

#include <memory>

namespace fidl_test_foreigntypeinresponseusedthroughcompose {
namespace {

[[maybe_unused]] constexpr uint64_t kTop_GetFoo_Ordinal = 7703637629648977298lu;

extern "C" const fidl_type_t
    fidl_test_foreigntypeinresponseusedthroughcompose_TopGetFooRequestTable;

extern "C" const fidl_type_t
    fidl_test_foreigntypeinresponseusedthroughcompose_TopGetFooResponseTable;

}  // namespace
#ifdef __Fuchsia__
::fidl_test_foreigntypeinresponseusedthroughcompose::Top::ResultOf::GetFoo::
    GetFoo(::fidl::UnownedClientEnd<
           ::fidl_test_foreigntypeinresponseusedthroughcompose::Top>
               _client) {
  ::fidl::OwnedEncodedMessage<GetFooRequest> _request(zx_txid_t(0));
  _request.GetOutgoingMessage().Call<GetFooResponse>(_client, bytes_.data(),
                                                     bytes_.size());
  status_ = _request.status();
  error_ = _request.error();
}

::fidl_test_foreigntypeinresponseusedthroughcompose::Top::ResultOf::GetFoo::
    GetFoo(::fidl::UnownedClientEnd<
               ::fidl_test_foreigntypeinresponseusedthroughcompose::Top>
               _client,
           zx_time_t _deadline) {
  ::fidl::OwnedEncodedMessage<GetFooRequest> _request(zx_txid_t(0));
  _request.GetOutgoingMessage().Call<GetFooResponse>(_client, bytes_.data(),
                                                     bytes_.size(), _deadline);
  status_ = _request.status();
  error_ = _request.error();
}
#endif

#ifdef __Fuchsia__
::fidl_test_foreigntypeinresponseusedthroughcompose::Top::UnownedResultOf::
    GetFoo::GetFoo(::fidl::UnownedClientEnd<
                       ::fidl_test_foreigntypeinresponseusedthroughcompose::Top>
                       _client,
                   uint8_t* _response_bytes, uint32_t _response_byte_capacity)
    : bytes_(_response_bytes) {
  ::fidl::OwnedEncodedMessage<GetFooRequest> _request(zx_txid_t(0));
  _request.GetOutgoingMessage().Call<GetFooResponse>(_client, _response_bytes,
                                                     _response_byte_capacity);
  status_ = _request.status();
  error_ = _request.error();
}
#endif

#ifdef __Fuchsia__
::fidl_test_foreigntypeinresponseusedthroughcompose::Top::ResultOf::GetFoo
Top::ClientImpl::GetFoo_Sync() {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    return ResultOf::GetFoo(
        ::fidl::UnownedClientEnd<
            ::fidl_test_foreigntypeinresponseusedthroughcompose::Top>(
            _channel->handle()));
  }
  return ::fidl_test_foreigntypeinresponseusedthroughcompose::Top::ResultOf::
      GetFoo(::fidl::Result(ZX_ERR_CANCELED, ::fidl::kErrorChannelUnbound));
}
#endif

#ifdef __Fuchsia__
::fidl_test_foreigntypeinresponseusedthroughcompose::Top::UnownedResultOf::
    GetFoo
    Top::ClientImpl::GetFoo_Sync(::fidl::BufferSpan _response_buffer) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    return UnownedResultOf::GetFoo(
        ::fidl::UnownedClientEnd<
            ::fidl_test_foreigntypeinresponseusedthroughcompose::Top>(
            _channel->handle()),
        _response_buffer.data, _response_buffer.capacity);
  }
  return ::fidl_test_foreigntypeinresponseusedthroughcompose::Top::
      UnownedResultOf::GetFoo(
          ::fidl::Result(ZX_ERR_CANCELED, ::fidl::kErrorChannelUnbound));
}
#endif

#ifdef __Fuchsia__
::fidl_test_foreigntypeinresponseusedthroughcompose::Top::
    GetFooResponseContext::GetFooResponseContext()
    : ::fidl::internal::ResponseContext(GetFooResponse::Type,
                                        kTop_GetFoo_Ordinal) {}

void ::fidl_test_foreigntypeinresponseusedthroughcompose::Top::
    GetFooResponseContext::OnReply(uint8_t* reply) {
  OnReply(reinterpret_cast<GetFooResponse*>(reply));
}

::fidl::Result Top::ClientImpl::GetFoo(
    ::fit::callback<void(GetFooResponse* response)> _cb) {
  class ResponseContext final : public GetFooResponseContext {
   public:
    ResponseContext(::fit::callback<void(GetFooResponse* response)> cb)
        : cb_(std::move(cb)) {}

    void OnReply(GetFooResponse* response) override {
      cb_(response);

      delete this;
    }

    void OnError() override { delete this; }

   private:
    ::fit::callback<void(GetFooResponse* response)> cb_;
  };

  auto* _context = new ResponseContext(std::move(_cb));
  ::fidl::internal::ClientBase::PrepareAsyncTxn(_context);
  GetFooRequest::OwnedEncodedMessage _request(_context->Txid());
  return _request.GetOutgoingMessage().Write(this, _context);
}

::fidl::Result Top::ClientImpl::GetFoo(GetFooResponseContext* _context) {
  ::fidl::internal::ClientBase::PrepareAsyncTxn(_context);

  GetFooRequest::OwnedEncodedMessage _request(_context->Txid());
  return _request.GetOutgoingMessage().Write(this, _context);
}
#endif

#ifdef __Fuchsia__
std::optional<::fidl::UnbindInfo> Top::ClientImpl::DispatchEvent(
    fidl_incoming_msg_t* msg) {
  FidlHandleInfoCloseMany(msg->handles, msg->num_handles);
  return ::fidl::UnbindInfo{::fidl::UnbindInfo::kUnexpectedMessage,
                            ZX_ERR_NOT_SUPPORTED};
}
#endif

#ifdef __Fuchsia__
namespace methods {

void TopDispatchGetFoo(void* interface, void* bytes, ::fidl::Transaction* txn) {
  ::fidl_test_foreigntypeinresponseusedthroughcompose::Top::Interface::
      GetFooCompleter::Sync completer(txn);
  reinterpret_cast<
      ::fidl_test_foreigntypeinresponseusedthroughcompose::Top::Interface*>(
      interface)
      ->GetFoo(completer);
}

}  // namespace methods

namespace entries {

::fidl::internal::MethodEntry Top[] = {
    {kTop_GetFoo_Ordinal,
     ::fidl_test_foreigntypeinresponseusedthroughcompose::Top::GetFooRequest::
         Type,
     methods::TopDispatchGetFoo},
};

}  // namespace entries

::fidl::DispatchResult Top::TryDispatch(Interface* impl,
                                        fidl_incoming_msg_t* msg,
                                        ::fidl::Transaction* txn) {
  return ::fidl::internal::TryDispatch(
      impl, msg, txn, entries::Top,
      entries::Top +
          sizeof(entries::Top) / sizeof(::fidl::internal::MethodEntry));
}
#endif

#ifdef __Fuchsia__
::fidl::DispatchResult Top::Dispatch(Interface* impl, fidl_incoming_msg_t* msg,
                                     ::fidl::Transaction* txn) {
  ::fidl::DispatchResult dispatch_result = TryDispatch(impl, msg, txn);
  if (dispatch_result == ::fidl::DispatchResult::kNotFound) {
    FidlHandleInfoCloseMany(msg->handles, msg->num_handles);
    txn->InternalError(
        {::fidl::UnbindInfo::kUnexpectedMessage, ZX_ERR_NOT_SUPPORTED});
  }
  return dispatch_result;
}

::fidl::DispatchResult Top::Interface::dispatch_message(
    fidl_incoming_msg_t* msg, ::fidl::Transaction* txn) {
  return Top::Dispatch(this, msg, txn);
}
#endif

#ifdef __Fuchsia__
::fidl::Result Top::Interface::GetFooCompleterBase::Reply(
    ::bottom::wire::Foo foo) {
  ::fidl::OwnedEncodedMessage<GetFooResponse> _response{foo};
  return CompleterBase::SendReply(&_response.GetOutgoingMessage());
}
#endif

#ifdef __Fuchsia__
::fidl::Result Top::Interface::GetFooCompleterBase::Reply(
    ::fidl::BufferSpan _buffer, ::bottom::wire::Foo foo) {
  GetFooResponse::UnownedEncodedMessage _response(_buffer.data,
                                                  _buffer.capacity, foo);
  return CompleterBase::SendReply(&_response.GetOutgoingMessage());
}
#endif

void ::fidl_test_foreigntypeinresponseusedthroughcompose::Top::GetFooRequest::
    _InitHeader(zx_txid_t _txid) {
  fidl_init_txn_header(&_hdr, _txid, kTop_GetFoo_Ordinal);
}

void ::fidl_test_foreigntypeinresponseusedthroughcompose::Top::GetFooResponse::
    _InitHeader() {
  fidl_init_txn_header(&_hdr, 0, kTop_GetFoo_Ordinal);
}

#ifdef __Fuchsia__
#endif

}  // namespace fidl_test_foreigntypeinresponseusedthroughcompose
