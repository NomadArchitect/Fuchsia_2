// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.errorsyntax/cpp/type_conversions.h>

namespace fidl {
namespace internal {

::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResponse
WireNaturalConversionTraits<
    ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResponse,
    ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResponse>::
    ToNatural(::test_errorsyntax::wire::
                  ExampleUseOfErrorSyntaxCallWhichMayFailResponse src) {
  return ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResponse(
      WireNaturalConversionTraits<int64_t, int64_t>::ToNatural(
          std::move(src.value)));
}

::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse
WireNaturalConversionTraits<
    ::test_errorsyntax::wire::
        ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse,
    ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse>::
    ToNatural(::test_errorsyntax::wire::
                  ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse src) {
  return ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse(
      WireNaturalConversionTraits<
          ::test_errorsyntax::wire::
              ExampleUseOfErrorSyntaxCallWhichMayFailResult,
          ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult>::
          ToNatural(std::move(src.result)));
}

::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailRequest
WireNaturalConversionTraits<
    ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailRequest,
    ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailRequest>::
    ToNatural(
        ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailRequest
            src) {
  return ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailRequest(
      WireNaturalConversionTraits<::fidl::StringView, ::std::string>::ToNatural(
          std::move(src.s)));
}

::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult
WireNaturalConversionTraits<
    ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult,
    ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult>::
    ToNatural(
        ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult
            src) {
  switch (src.Which()) {
    case ::test_errorsyntax::wire::
        ExampleUseOfErrorSyntaxCallWhichMayFailResult::Tag::kResponse:
      return ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult::
          WithResponse(WireNaturalConversionTraits<
                       ::test_errorsyntax::wire::
                           ExampleUseOfErrorSyntaxCallWhichMayFailResponse,
                       ::test_errorsyntax::
                           ExampleUseOfErrorSyntaxCallWhichMayFailResponse>::
                           ToNatural(std::move(src.response())));
    case ::test_errorsyntax::wire::
        ExampleUseOfErrorSyntaxCallWhichMayFailResult::Tag::kErr:
      return ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult::
          WithErr(WireNaturalConversionTraits<uint32_t, uint32_t>::ToNatural(
              std::move(src.err())));
    default:
      ZX_PANIC("unknown union tag in strict union");
  }
}

std::unique_ptr<
    ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult>
WireNaturalConversionTraits<
    ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult,
    std::unique_ptr<
        ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult>>::
    ToNatural(
        ::test_errorsyntax::wire::ExampleUseOfErrorSyntaxCallWhichMayFailResult
            src) {
  if (src.has_invalid_tag()) {
    return nullptr;
  }
  return std::make_unique<
      ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult>(
      WireNaturalConversionTraits<
          ::test_errorsyntax::wire::
              ExampleUseOfErrorSyntaxCallWhichMayFailResult,
          ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailResult>::
          ToNatural(std::move(src)));
}

#ifdef __Fuchsia__

::fidl::Request<
    ::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail>
WireNaturalConversionTraits<
    ::fidl::WireRequest<
        ::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail>,
    ::fidl::Request<::test_errorsyntax::ExampleUseOfErrorSyntax::
                        ComposedCallWhichMayFail>>::
    ToNatural(::fidl::WireRequest<::test_errorsyntax::ExampleUseOfErrorSyntax::
                                      ComposedCallWhichMayFail>
                  src) {
  return ::fidl::Request<
      ::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail>(
      WireNaturalConversionTraits<
          ::test_errorsyntax_parent::wire::
              ParentUsesErrorSyntaxComposedCallWhichMayFailRequest,
          ::test_errorsyntax_parent::
              ParentUsesErrorSyntaxComposedCallWhichMayFailRequest>::
          ToNatural(std::move(src)));
}

::fidl::Request<::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>
WireNaturalConversionTraits<
    ::fidl::WireRequest<
        ::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>,
    ::fidl::Request<
        ::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>>::
    ToNatural(::fidl::WireRequest<
              ::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>
                  src) {
  return ::fidl::Request<
      ::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>(
      WireNaturalConversionTraits<
          ::test_errorsyntax::wire::
              ExampleUseOfErrorSyntaxCallWhichMayFailRequest,
          ::test_errorsyntax::ExampleUseOfErrorSyntaxCallWhichMayFailRequest>::
          ToNatural(std::move(src)));
}

::fidl::Response<
    ::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail>
WireNaturalConversionTraits<
    ::fidl::WireResponse<
        ::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail>,
    ::fidl::Response<::test_errorsyntax::ExampleUseOfErrorSyntax::
                         ComposedCallWhichMayFail>>::
    ToNatural(::fidl::WireResponse<::test_errorsyntax::ExampleUseOfErrorSyntax::
                                       ComposedCallWhichMayFail>
                  src) {
  return ::fidl::Response<
      ::test_errorsyntax::ExampleUseOfErrorSyntax::ComposedCallWhichMayFail>(
      WireNaturalConversionTraits<
          ::test_errorsyntax_parent::wire::
              ParentUsesErrorSyntaxComposedCallWhichMayFailTopResponse,
          ::fitx::result<
              uint32_t,
              ::test_errorsyntax_parent::
                  ParentUsesErrorSyntaxComposedCallWhichMayFailResponse>>::
          ToNatural(std::move(src)));
}

::fidl::Response<::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>
WireNaturalConversionTraits<
    ::fidl::WireResponse<
        ::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>,
    ::fidl::Response<
        ::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>>::
    ToNatural(::fidl::WireResponse<
              ::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>
                  src) {
  return ::fidl::Response<
      ::test_errorsyntax::ExampleUseOfErrorSyntax::CallWhichMayFail>(
      WireNaturalConversionTraits<
          ::test_errorsyntax::wire::
              ExampleUseOfErrorSyntaxCallWhichMayFailTopResponse,
          ::fitx::result<uint32_t,
                         ::test_errorsyntax::
                             ExampleUseOfErrorSyntaxCallWhichMayFailResponse>>::
          ToNatural(std::move(src)));
}
#endif  // __Fuchsia__
}  // namespace internal
}  // namespace fidl
