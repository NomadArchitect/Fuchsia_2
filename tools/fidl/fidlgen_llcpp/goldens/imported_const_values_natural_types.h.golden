// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.importedconstvalues/cpp/common_types.h>
#include <fidl/test.importedconstvalues/cpp/markers.h>
#include <lib/fidl/cpp/coding_traits.h>
#include <lib/fidl/cpp/unified_messaging.h>

#include <cinttypes>
#include <string>

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#include <fidl/test.dependent/cpp/natural_types.h>

namespace test_importedconstvalues {
class MyStruct;

extern "C" const fidl_type_t test_importedconstvalues_MyStructTable;

class MyStruct final {
 private:
  struct Storage_;

 public:
  MyStruct(Storage_ storage) noexcept : storage_(std::move(storage)) {}
  MyStruct(uint8_t __reserved) noexcept
      : storage_({.__reserved = std::move(__reserved)}) {}
  MyStruct() : MyStruct(Storage_{}) {}

  MyStruct(MyStruct&&) noexcept = default;
  MyStruct& operator=(MyStruct&&) noexcept = default;
  MyStruct(const MyStruct& other) noexcept : MyStruct(other.CloneStorage_()) {}
  MyStruct& operator=(const MyStruct& other) noexcept {
    storage_ = other.CloneStorage_();
    return *this;
  }

  uint8_t __reserved() const { return storage_.__reserved; }

  uint8_t& __reserved() { return storage_.__reserved; }

 private:
  struct Storage_ final {
    uint8_t __reserved = 0u;
  };

  Storage_ storage_;
  Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<
      ::test_importedconstvalues::MyStruct, 1, 1>;
  static constexpr auto kMembers =
      std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t>{
          &Storage_::__reserved, 0, 0});
};

}  // namespace test_importedconstvalues
namespace fidl {

#ifdef __Fuchsia__
extern "C" const fidl_type_t test_importedconstvalues_MyStructTable;

template <>
struct IsFidlType<::test_importedconstvalues::MyStruct>
    : public std::true_type {};

template <>
struct ::fidl::internal::TypeTraits<::test_importedconstvalues::MyStruct>
    final {
 public:
  static constexpr const fidl_type_t* kCodingTable =
      &test_importedconstvalues_MyStructTable;
};

template <>
struct CodingTraits<::test_importedconstvalues::MyStruct> final
    : public ::fidl::internal::NaturalStructCodingTraits<
          ::test_importedconstvalues::MyStruct, 1, 1> {};
#endif  // __Fuchsia__

}  // namespace fidl
