// WARNING: This file is machine generated by fidlgen.

#include <fidl/fidl.test.requestflexibleenvelope/cpp/wire_types.h>

void ::fidl_test_requestflexibleenvelope::wire::StrictFoo::
    SizeAndOffsetAssertionHelper() {
  static_assert(sizeof(StrictFoo) == sizeof(fidl_xunion_v2_t));
  static_assert(offsetof(StrictFoo, ordinal_) ==
                offsetof(fidl_xunion_v2_t, tag));
  static_assert(offsetof(StrictFoo, envelope_) ==
                offsetof(fidl_xunion_v2_t, envelope));
}
auto ::fidl_test_requestflexibleenvelope::wire::FlexibleFoo::which() const
    -> ::fidl_test_requestflexibleenvelope::wire::FlexibleFoo::Tag {
  ZX_ASSERT(!has_invalid_tag());
  switch (ordinal_) {
    case ::fidl_test_requestflexibleenvelope::wire::FlexibleFoo::Ordinal::kS:
    case ::fidl_test_requestflexibleenvelope::wire::FlexibleFoo::Ordinal::kI:
      return static_cast<
          ::fidl_test_requestflexibleenvelope::wire::FlexibleFoo::Tag>(
          ordinal_);
    default:
      return ::fidl_test_requestflexibleenvelope::wire::FlexibleFoo::Tag::
          kUnknown;
  }
}

void ::fidl_test_requestflexibleenvelope::wire::FlexibleFoo::
    SizeAndOffsetAssertionHelper() {
  static_assert(sizeof(FlexibleFoo) == sizeof(fidl_xunion_v2_t));
  static_assert(offsetof(FlexibleFoo, ordinal_) ==
                offsetof(fidl_xunion_v2_t, tag));
  static_assert(offsetof(FlexibleFoo, envelope_) ==
                offsetof(fidl_xunion_v2_t, envelope));
}
