// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.bits/cpp/common_types.h>
#include <fidl/test.bits/cpp/markers.h>
#include <lib/fidl/cpp/coding_traits.h>
#include <lib/fidl/cpp/internal/codable_base.h>
#include <lib/fidl/cpp/unified_messaging.h>

#include <cinttypes>
#include <string>

#ifdef __Fuchsia__

#endif  // __Fuchsia__

namespace fidl {

template <>
struct CodingTraits<::test_bits::StrictBits> {
  static constexpr size_t inline_size_v1_no_ee = sizeof(uint64_t);
  static constexpr size_t inline_size_v2 = sizeof(uint64_t);

  template <class EncoderImpl>
  static void Encode(
      EncoderImpl* encoder, ::test_bits::StrictBits* value, size_t offset,
      cpp17::optional<HandleInformation> maybe_handle_info = cpp17::nullopt) {
    // TODO: encode
  }
  template <typename DecoderImpl>
  static void Decode(DecoderImpl* decoder, ::test_bits::StrictBits* value,
                     size_t offset) {
    // TODO: decode
  }
};
template <>
struct CodingTraits<::test_bits::MyBits> {
  static constexpr size_t inline_size_v1_no_ee = sizeof(uint32_t);
  static constexpr size_t inline_size_v2 = sizeof(uint32_t);

  template <class EncoderImpl>
  static void Encode(
      EncoderImpl* encoder, ::test_bits::MyBits* value, size_t offset,
      cpp17::optional<HandleInformation> maybe_handle_info = cpp17::nullopt) {
    // TODO: encode
  }
  template <typename DecoderImpl>
  static void Decode(DecoderImpl* decoder, ::test_bits::MyBits* value,
                     size_t offset) {
    // TODO: decode
  }
};
template <>
struct CodingTraits<::test_bits::FlexibleBits> {
  static constexpr size_t inline_size_v1_no_ee = sizeof(uint64_t);
  static constexpr size_t inline_size_v2 = sizeof(uint64_t);

  template <class EncoderImpl>
  static void Encode(
      EncoderImpl* encoder, ::test_bits::FlexibleBits* value, size_t offset,
      cpp17::optional<HandleInformation> maybe_handle_info = cpp17::nullopt) {
    // TODO: encode
  }
  template <typename DecoderImpl>
  static void Decode(DecoderImpl* decoder, ::test_bits::FlexibleBits* value,
                     size_t offset) {
    // TODO: decode
  }
};

}  // namespace fidl
