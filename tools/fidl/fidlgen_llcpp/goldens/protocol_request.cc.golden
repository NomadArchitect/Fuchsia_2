// WARNING: This file is machine generated by fidlgen.

#include <fidl/test/protocolrequest/llcpp/fidl.h>

#include <memory>

namespace fidl_test_protocolrequest {
[[maybe_unused]] constexpr uint64_t kParent_GetChild_Ordinal =
    7929845654914578302lu;

extern "C" const fidl_type_t
    fidl_test_protocolrequest_ParentGetChildRequestTable;

extern "C" const fidl_type_t
    fidl_test_protocolrequest_ParentGetChildResponseTable;

[[maybe_unused]] constexpr uint64_t kParent_GetChildRequest_Ordinal =
    1819029190665166744lu;

extern "C" const fidl_type_t
    fidl_test_protocolrequest_ParentGetChildRequestRequestTable;

extern "C" const fidl_type_t
    fidl_test_protocolrequest_ParentGetChildRequestResponseTable;

[[maybe_unused]] constexpr uint64_t kParent_TakeChild_Ordinal =
    374110854839013230lu;

extern "C" const fidl_type_t
    fidl_test_protocolrequest_ParentTakeChildRequestTable;

extern "C" const fidl_type_t
    fidl_test_protocolrequest_ParentTakeChildResponseTable;

[[maybe_unused]] constexpr uint64_t kParent_TakeChildRequest_Ordinal =
    1574820689302890956lu;

extern "C" const fidl_type_t
    fidl_test_protocolrequest_ParentTakeChildRequestRequestTable;

extern "C" const fidl_type_t
    fidl_test_protocolrequest_ParentTakeChildRequestResponseTable;
#ifdef __Fuchsia__
}  // namespace fidl_test_protocolrequest
::fidl::WireResult<::fidl_test_protocolrequest::Parent::GetChild>::WireResult(
    ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent> _client) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::GetChild>>
      _request(::fidl::internal::AllowUnownedInputRef{}, zx_txid_t(0));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<
      ::fidl::WireResponse<::fidl_test_protocolrequest::Parent::GetChild>>(
      _client, bytes_.data(), bytes_.size());
  SetResult(_outgoing);
}

::fidl::WireResult<::fidl_test_protocolrequest::Parent::GetChild>::WireResult(
    ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent> _client,
    zx_time_t _deadline) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::GetChild>>
      _request(::fidl::internal::AllowUnownedInputRef{}, zx_txid_t(0));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<
      ::fidl::WireResponse<::fidl_test_protocolrequest::Parent::GetChild>>(
      _client, bytes_.data(), bytes_.size(), _deadline);
  SetResult(_outgoing);
}
namespace fidl_test_protocolrequest {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_protocolrequest
::fidl::WireUnownedResult<::fidl_test_protocolrequest::Parent::GetChild>::
    WireUnownedResult(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent> _client,
        uint8_t* _response_bytes, uint32_t _response_byte_capacity)
    : bytes_(_response_bytes) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::GetChild>>
      _request(::fidl::internal::AllowUnownedInputRef{}, zx_txid_t(0));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<
      ::fidl::WireResponse<::fidl_test_protocolrequest::Parent::GetChild>>(
      _client, _response_bytes, _response_byte_capacity);
  ::fidl::Result::operator=(_outgoing);
}
namespace fidl_test_protocolrequest {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_protocolrequest
::fidl::WireResult<::fidl_test_protocolrequest::Parent::GetChildRequest>::
    WireResult(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent> _client) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::GetChildRequest>>
      _request(::fidl::internal::AllowUnownedInputRef{}, zx_txid_t(0));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<::fidl::WireResponse<
      ::fidl_test_protocolrequest::Parent::GetChildRequest>>(
      _client, bytes_.data(), bytes_.size());
  SetResult(_outgoing);
}

::fidl::WireResult<::fidl_test_protocolrequest::Parent::GetChildRequest>::
    WireResult(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent> _client,
        zx_time_t _deadline) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::GetChildRequest>>
      _request(::fidl::internal::AllowUnownedInputRef{}, zx_txid_t(0));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<::fidl::WireResponse<
      ::fidl_test_protocolrequest::Parent::GetChildRequest>>(
      _client, bytes_.data(), bytes_.size(), _deadline);
  SetResult(_outgoing);
}
namespace fidl_test_protocolrequest {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_protocolrequest
::fidl::WireUnownedResult<
    ::fidl_test_protocolrequest::Parent::GetChildRequest>::
    WireUnownedResult(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent> _client,
        uint8_t* _response_bytes, uint32_t _response_byte_capacity)
    : bytes_(_response_bytes) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::GetChildRequest>>
      _request(::fidl::internal::AllowUnownedInputRef{}, zx_txid_t(0));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<::fidl::WireResponse<
      ::fidl_test_protocolrequest::Parent::GetChildRequest>>(
      _client, _response_bytes, _response_byte_capacity);
  ::fidl::Result::operator=(_outgoing);
}
namespace fidl_test_protocolrequest {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_protocolrequest
::fidl::WireResult<::fidl_test_protocolrequest::Parent::TakeChild>::WireResult(
    ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent> _client,
    ::fidl::ClientEnd<::fidl_test_protocolrequest::Child>&& c) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::TakeChild>>
      _request(::fidl::internal::AllowUnownedInputRef{}, zx_txid_t(0),
               std::move(c));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Write(_client);
  SetResult(_outgoing);
}
namespace fidl_test_protocolrequest {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_protocolrequest
::fidl::WireUnownedResult<::fidl_test_protocolrequest::Parent::TakeChild>::
    WireUnownedResult(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent> _client,
        uint8_t* _request_bytes, uint32_t _request_byte_capacity,
        ::fidl::ClientEnd<::fidl_test_protocolrequest::Child>&& c) {
  ::fidl::UnownedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::TakeChild>>
      _request(_request_bytes, _request_byte_capacity, zx_txid_t(0),
               std::move(c));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Write(_client);
  ::fidl::Result::operator=(_outgoing);
}
namespace fidl_test_protocolrequest {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_protocolrequest
::fidl::WireResult<::fidl_test_protocolrequest::Parent::TakeChildRequest>::
    WireResult(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent> _client,
        ::fidl::ServerEnd<::fidl_test_protocolrequest::Child>&& r) {
  ::fidl::OwnedEncodedMessage<::fidl::WireRequest<
      ::fidl_test_protocolrequest::Parent::TakeChildRequest>>
      _request(::fidl::internal::AllowUnownedInputRef{}, zx_txid_t(0),
               std::move(r));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Write(_client);
  SetResult(_outgoing);
}
namespace fidl_test_protocolrequest {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_protocolrequest
::fidl::WireUnownedResult<
    ::fidl_test_protocolrequest::Parent::TakeChildRequest>::
    WireUnownedResult(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent> _client,
        uint8_t* _request_bytes, uint32_t _request_byte_capacity,
        ::fidl::ServerEnd<::fidl_test_protocolrequest::Child>&& r) {
  ::fidl::UnownedEncodedMessage<::fidl::WireRequest<
      ::fidl_test_protocolrequest::Parent::TakeChildRequest>>
      _request(_request_bytes, _request_byte_capacity, zx_txid_t(0),
               std::move(r));
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Write(_client);
  ::fidl::Result::operator=(_outgoing);
}
namespace fidl_test_protocolrequest {
#endif  // __Fuchsia__

}  // namespace fidl_test_protocolrequest
#ifdef __Fuchsia__
::fidl::WireResult<::fidl_test_protocolrequest::Parent::GetChild>
fidl::internal::WireClientImpl<
    ::fidl_test_protocolrequest::Parent>::GetChild_Sync() {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    return ::fidl::WireResult<::fidl_test_protocolrequest::Parent::GetChild>(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent>(
            _channel->handle()));
  }
  return ::fidl::WireResult<::fidl_test_protocolrequest::Parent::GetChild>(
      ::fidl::Result::Unbound());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::WireUnownedResult<::fidl_test_protocolrequest::Parent::GetChild>
fidl::internal::WireClientImpl<::fidl_test_protocolrequest::Parent>::
    GetChild_Sync(::fidl::BufferSpan _response_buffer) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    return ::fidl::WireUnownedResult<
        ::fidl_test_protocolrequest::Parent::GetChild>(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent>(
            _channel->handle()),
        _response_buffer.data, _response_buffer.capacity);
  }
  return ::fidl::WireUnownedResult<
      ::fidl_test_protocolrequest::Parent::GetChild>(::fidl::Result::Unbound());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::WireResponseContext<
    ::fidl_test_protocolrequest::Parent::GetChild>::WireResponseContext()
    : ::fidl::internal::ResponseContext(
          ::fidl_test_protocolrequest::kParent_GetChild_Ordinal) {}

zx_status_t
fidl::WireResponseContext<::fidl_test_protocolrequest::Parent::GetChild>::
    OnRawReply(::fidl::IncomingMessage&& msg) {
  ::fidl::DecodedMessage<
      ::fidl::WireResponse<::fidl_test_protocolrequest::Parent::GetChild>>
      decoded{std::move(msg)};
  if (unlikely(!decoded.ok())) {
    return decoded.status();
  }
  OnReply(decoded.PrimaryObject());
  return ZX_OK;
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_protocolrequest::Parent>::GetChild(
    ::fit::callback<void(
        ::fidl::WireResponse<::fidl_test_protocolrequest::Parent::GetChild>*
            response)>
        _cb) {
  class ResponseContext final
      : public ::fidl::WireResponseContext<
            ::fidl_test_protocolrequest::Parent::GetChild> {
   public:
    ResponseContext(
        ::fit::callback<void(
            ::fidl::WireResponse<::fidl_test_protocolrequest::Parent::GetChild>*
                response)>
            cb)
        : cb_(std::move(cb)) {}

    void OnReply(
        ::fidl::WireResponse<::fidl_test_protocolrequest::Parent::GetChild>*
            response) override {
      cb_(response);
      delete this;
    }

    void OnError() override { delete this; }

   private:
    ::fit::callback<void(
        ::fidl::WireResponse<::fidl_test_protocolrequest::Parent::GetChild>*
            response)>
        cb_;
  };

  auto* _context = new ResponseContext(std::move(_cb));
  ::fidl::internal::ClientBase::PrepareAsyncTxn(_context);
  ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::GetChild>::
      OwnedEncodedMessage _request(::fidl::internal::AllowUnownedInputRef{},
                                   _context->Txid());
  return _request.GetOutgoingMessage().Write(this, _context);
}

::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_protocolrequest::Parent>::GetChild(
    ::fidl::WireResponseContext<::fidl_test_protocolrequest::Parent::GetChild>*
        _context) {
  ::fidl::internal::ClientBase::PrepareAsyncTxn(_context);

  ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::GetChild>::
      OwnedEncodedMessage _request(::fidl::internal::AllowUnownedInputRef{},
                                   _context->Txid());
  return _request.GetOutgoingMessage().Write(this, _context);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::WireResult<::fidl_test_protocolrequest::Parent::GetChildRequest>
fidl::internal::WireClientImpl<
    ::fidl_test_protocolrequest::Parent>::GetChildRequest_Sync() {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    return ::fidl::WireResult<
        ::fidl_test_protocolrequest::Parent::GetChildRequest>(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent>(
            _channel->handle()));
  }
  return ::fidl::WireResult<
      ::fidl_test_protocolrequest::Parent::GetChildRequest>(
      ::fidl::Result::Unbound());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::WireUnownedResult<::fidl_test_protocolrequest::Parent::GetChildRequest>
fidl::internal::WireClientImpl<::fidl_test_protocolrequest::Parent>::
    GetChildRequest_Sync(::fidl::BufferSpan _response_buffer) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    return ::fidl::WireUnownedResult<
        ::fidl_test_protocolrequest::Parent::GetChildRequest>(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent>(
            _channel->handle()),
        _response_buffer.data, _response_buffer.capacity);
  }
  return ::fidl::WireUnownedResult<
      ::fidl_test_protocolrequest::Parent::GetChildRequest>(
      ::fidl::Result::Unbound());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::WireResponseContext<
    ::fidl_test_protocolrequest::Parent::GetChildRequest>::WireResponseContext()
    : ::fidl::internal::ResponseContext(
          ::fidl_test_protocolrequest::kParent_GetChildRequest_Ordinal) {}

zx_status_t fidl::WireResponseContext<
    ::fidl_test_protocolrequest::Parent::GetChildRequest>::
    OnRawReply(::fidl::IncomingMessage&& msg) {
  ::fidl::DecodedMessage<::fidl::WireResponse<
      ::fidl_test_protocolrequest::Parent::GetChildRequest>>
      decoded{std::move(msg)};
  if (unlikely(!decoded.ok())) {
    return decoded.status();
  }
  OnReply(decoded.PrimaryObject());
  return ZX_OK;
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_protocolrequest::Parent>::GetChildRequest(
        ::fit::callback<
            void(::fidl::WireResponse<::fidl_test_protocolrequest::Parent::
                                          GetChildRequest>* response)>
            _cb) {
  class ResponseContext final
      : public ::fidl::WireResponseContext<
            ::fidl_test_protocolrequest::Parent::GetChildRequest> {
   public:
    ResponseContext(::fit::callback<
                    void(::fidl::WireResponse<
                         ::fidl_test_protocolrequest::Parent::GetChildRequest>*
                             response)>
                        cb)
        : cb_(std::move(cb)) {}

    void OnReply(::fidl::WireResponse<
                 ::fidl_test_protocolrequest::Parent::GetChildRequest>*
                     response) override {
      cb_(response);
      delete this;
    }

    void OnError() override { delete this; }

   private:
    ::fit::callback<void(
        ::fidl::WireResponse<
            ::fidl_test_protocolrequest::Parent::GetChildRequest>* response)>
        cb_;
  };

  auto* _context = new ResponseContext(std::move(_cb));
  ::fidl::internal::ClientBase::PrepareAsyncTxn(_context);
  ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::GetChildRequest>::
      OwnedEncodedMessage _request(::fidl::internal::AllowUnownedInputRef{},
                                   _context->Txid());
  return _request.GetOutgoingMessage().Write(this, _context);
}

::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_protocolrequest::Parent>::GetChildRequest(
        ::fidl::WireResponseContext<
            ::fidl_test_protocolrequest::Parent::GetChildRequest>* _context) {
  ::fidl::internal::ClientBase::PrepareAsyncTxn(_context);

  ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::GetChildRequest>::
      OwnedEncodedMessage _request(::fidl::internal::AllowUnownedInputRef{},
                                   _context->Txid());
  return _request.GetOutgoingMessage().Write(this, _context);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_protocolrequest::Parent>::TakeChild(
    ::fidl::ClientEnd<::fidl_test_protocolrequest::Child>&& c) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    auto _res =
        ::fidl::WireResult<::fidl_test_protocolrequest::Parent::TakeChild>(
            ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent>(
                _channel->handle()),
            std::move(c));
    return _res;
  }
  return ::fidl::Result::Unbound();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_protocolrequest::Parent>::TakeChild(
    ::fidl::BufferSpan _request_buffer,
    ::fidl::ClientEnd<::fidl_test_protocolrequest::Child>&& c) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    auto _res = ::fidl::WireUnownedResult<
        ::fidl_test_protocolrequest::Parent::TakeChild>(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent>(
            _channel->handle()),
        _request_buffer.data, _request_buffer.capacity, std::move(c));
    return _res;
  }
  return ::fidl::Result::Unbound();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_protocolrequest::Parent>::TakeChildRequest(
        ::fidl::ServerEnd<::fidl_test_protocolrequest::Child>&& r) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    auto _res = ::fidl::WireResult<
        ::fidl_test_protocolrequest::Parent::TakeChildRequest>(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent>(
            _channel->handle()),
        std::move(r));
    return _res;
  }
  return ::fidl::Result::Unbound();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_protocolrequest::Parent>::TakeChildRequest(
        ::fidl::BufferSpan _request_buffer,
        ::fidl::ServerEnd<::fidl_test_protocolrequest::Child>&& r) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    auto _res = ::fidl::WireUnownedResult<
        ::fidl_test_protocolrequest::Parent::TakeChildRequest>(
        ::fidl::UnownedClientEnd<::fidl_test_protocolrequest::Parent>(
            _channel->handle()),
        _request_buffer.data, _request_buffer.capacity, std::move(r));
    return _res;
  }
  return ::fidl::Result::Unbound();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
std::optional<::fidl::UnbindInfo> fidl::internal::
    WireClientImpl<::fidl_test_protocolrequest::Parent>::DispatchEvent(
        fidl::IncomingMessage& msg,
        ::fidl::internal::AsyncEventHandler* maybe_event_handler) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::DispatchResult fidl::internal::
    WireServerDispatcher<::fidl_test_protocolrequest::Parent>::TryDispatch(
        ::fidl::WireServer<::fidl_test_protocolrequest::Parent>* impl,
        ::fidl::IncomingMessage& msg, ::fidl::Transaction* txn) {
  static const ::fidl::internal::MethodEntry entries[] = {
      {
          ::fidl_test_protocolrequest::kParent_GetChild_Ordinal,
          [](void* interface, ::fidl::IncomingMessage&& msg,
             ::fidl::Transaction* txn) {
            auto* primary = reinterpret_cast<::fidl::WireRequest<
                ::fidl_test_protocolrequest::Parent::GetChild>*>(msg.bytes());
            ::fidl::internal::WireCompleter<
                ::fidl_test_protocolrequest::Parent::GetChild>::Sync
                completer(txn);
            reinterpret_cast<
                ::fidl::WireServer<::fidl_test_protocolrequest::Parent>*>(
                interface)
                ->GetChild(primary, completer);
            return ZX_OK;
          },
      },
      {
          ::fidl_test_protocolrequest::kParent_GetChildRequest_Ordinal,
          [](void* interface, ::fidl::IncomingMessage&& msg,
             ::fidl::Transaction* txn) {
            auto* primary = reinterpret_cast<::fidl::WireRequest<
                ::fidl_test_protocolrequest::Parent::GetChildRequest>*>(
                msg.bytes());
            ::fidl::internal::WireCompleter<
                ::fidl_test_protocolrequest::Parent::GetChildRequest>::Sync
                completer(txn);
            reinterpret_cast<
                ::fidl::WireServer<::fidl_test_protocolrequest::Parent>*>(
                interface)
                ->GetChildRequest(primary, completer);
            return ZX_OK;
          },
      },
      {
          ::fidl_test_protocolrequest::kParent_TakeChild_Ordinal,
          [](void* interface, ::fidl::IncomingMessage&& msg,
             ::fidl::Transaction* txn) {
            ::fidl::DecodedMessage<::fidl::WireRequest<
                ::fidl_test_protocolrequest::Parent::TakeChild>>
                decoded{std::move(msg)};
            if (unlikely(!decoded.ok())) {
              return decoded.status();
            }
            auto* primary = decoded.PrimaryObject();
            ::fidl::internal::WireCompleter<
                ::fidl_test_protocolrequest::Parent::TakeChild>::Sync
                completer(txn);
            reinterpret_cast<
                ::fidl::WireServer<::fidl_test_protocolrequest::Parent>*>(
                interface)
                ->TakeChild(primary, completer);
            return ZX_OK;
          },
      },
      {
          ::fidl_test_protocolrequest::kParent_TakeChildRequest_Ordinal,
          [](void* interface, ::fidl::IncomingMessage&& msg,
             ::fidl::Transaction* txn) {
            ::fidl::DecodedMessage<::fidl::WireRequest<
                ::fidl_test_protocolrequest::Parent::TakeChildRequest>>
                decoded{std::move(msg)};
            if (unlikely(!decoded.ok())) {
              return decoded.status();
            }
            auto* primary = decoded.PrimaryObject();
            ::fidl::internal::WireCompleter<
                ::fidl_test_protocolrequest::Parent::TakeChildRequest>::Sync
                completer(txn);
            reinterpret_cast<
                ::fidl::WireServer<::fidl_test_protocolrequest::Parent>*>(
                interface)
                ->TakeChildRequest(primary, completer);
            return ZX_OK;
          },
      },
  };
  return ::fidl::internal::TryDispatch(
      impl, msg, txn, entries,
      entries + sizeof(entries) / sizeof(::fidl::internal::MethodEntry));
}

::fidl::DispatchResult fidl::internal::
    WireServerDispatcher<::fidl_test_protocolrequest::Parent>::Dispatch(
        ::fidl::WireServer<::fidl_test_protocolrequest::Parent>* impl,
        ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  ::fidl::DispatchResult dispatch_result = TryDispatch(impl, msg, txn);
  if (unlikely(dispatch_result == ::fidl::DispatchResult::kNotFound)) {
    std::move(msg).CloseHandles();
    txn->InternalError(::fidl::UnbindInfo::UnknownOrdinal());
  }
  return dispatch_result;
}
::fidl::DispatchResult
fidl::WireServer<::fidl_test_protocolrequest::Parent>::dispatch_message(
    fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  return ::fidl::internal::WireServerDispatcher<
      ::fidl_test_protocolrequest::Parent>::Dispatch(this, std::move(msg), txn);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::
    WireCompleterBase<::fidl_test_protocolrequest::Parent::GetChild>::Reply(
        ::fidl::ClientEnd<::fidl_test_protocolrequest::Child>&& c) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireResponse<::fidl_test_protocolrequest::Parent::GetChild>>
      _response{::fidl::internal::AllowUnownedInputRef{}, std::move(c)};
  return ::fidl::internal::WireCompleterBase<
      ::fidl_test_protocolrequest::Parent::GetChild>::
      SendReply(&_response.GetOutgoingMessage());
}

::fidl::Result fidl::internal::
    WireCompleterBase<::fidl_test_protocolrequest::Parent::GetChild>::Reply(
        ::fidl::BufferSpan _buffer,
        ::fidl::ClientEnd<::fidl_test_protocolrequest::Child>&& c) {
  ::fidl::WireResponse<::fidl_test_protocolrequest::Parent::GetChild>::
      UnownedEncodedMessage _response(_buffer.data, _buffer.capacity,
                                      std::move(c));
  return CompleterBase::SendReply(&_response.GetOutgoingMessage());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::WireCompleterBase<
    ::fidl_test_protocolrequest::Parent::GetChildRequest>::
    Reply(::fidl::ServerEnd<::fidl_test_protocolrequest::Child>&& r) {
  ::fidl::OwnedEncodedMessage<::fidl::WireResponse<
      ::fidl_test_protocolrequest::Parent::GetChildRequest>>
      _response{::fidl::internal::AllowUnownedInputRef{}, std::move(r)};
  return ::fidl::internal::WireCompleterBase<
      ::fidl_test_protocolrequest::Parent::GetChildRequest>::
      SendReply(&_response.GetOutgoingMessage());
}

::fidl::Result fidl::internal::WireCompleterBase<
    ::fidl_test_protocolrequest::Parent::GetChildRequest>::
    Reply(::fidl::BufferSpan _buffer,
          ::fidl::ServerEnd<::fidl_test_protocolrequest::Child>&& r) {
  ::fidl::WireResponse<::fidl_test_protocolrequest::Parent::GetChildRequest>::
      UnownedEncodedMessage _response(_buffer.data, _buffer.capacity,
                                      std::move(r));
  return CompleterBase::SendReply(&_response.GetOutgoingMessage());
}
#endif  // __Fuchsia__

void ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::GetChild>::
    _InitHeader(zx_txid_t _txid) {
  fidl_init_txn_header(&_hdr, _txid,
                       ::fidl_test_protocolrequest::kParent_GetChild_Ordinal);
}

#ifdef __Fuchsia__

void ::fidl::WireResponse<
    ::fidl_test_protocolrequest::Parent::GetChild>::_InitHeader() {
  fidl_init_txn_header(&_hdr, 0,
                       ::fidl_test_protocolrequest::kParent_GetChild_Ordinal);
}

void ::fidl::WireResponse<
    ::fidl_test_protocolrequest::Parent::GetChild>::_CloseHandles() {
  c.reset();
}
#endif  // __Fuchsia__

void ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::GetChildRequest>::
    _InitHeader(zx_txid_t _txid) {
  fidl_init_txn_header(
      &_hdr, _txid,
      ::fidl_test_protocolrequest::kParent_GetChildRequest_Ordinal);
}

#ifdef __Fuchsia__

void ::fidl::WireResponse<
    ::fidl_test_protocolrequest::Parent::GetChildRequest>::_InitHeader() {
  fidl_init_txn_header(
      &_hdr, 0, ::fidl_test_protocolrequest::kParent_GetChildRequest_Ordinal);
}

void ::fidl::WireResponse<
    ::fidl_test_protocolrequest::Parent::GetChildRequest>::_CloseHandles() {
  r.reset();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::TakeChild>::
    _InitHeader(zx_txid_t _txid) {
  fidl_init_txn_header(&_hdr, _txid,
                       ::fidl_test_protocolrequest::kParent_TakeChild_Ordinal);
}

void ::fidl::WireRequest<
    ::fidl_test_protocolrequest::Parent::TakeChild>::_CloseHandles() {
  c.reset();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl::WireRequest<::fidl_test_protocolrequest::Parent::
                             TakeChildRequest>::_InitHeader(zx_txid_t _txid) {
  fidl_init_txn_header(
      &_hdr, _txid,
      ::fidl_test_protocolrequest::kParent_TakeChildRequest_Ordinal);
}

void ::fidl::WireRequest<
    ::fidl_test_protocolrequest::Parent::TakeChildRequest>::_CloseHandles() {
  r.reset();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__
std::optional<::fidl::UnbindInfo> fidl::internal::
    WireClientImpl<::fidl_test_protocolrequest::Child>::DispatchEvent(
        fidl::IncomingMessage& msg,
        ::fidl::internal::AsyncEventHandler* maybe_event_handler) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::DispatchResult fidl::internal::
    WireServerDispatcher<::fidl_test_protocolrequest::Child>::TryDispatch(
        ::fidl::WireServer<::fidl_test_protocolrequest::Child>* impl,
        ::fidl::IncomingMessage& msg, ::fidl::Transaction* txn) {
  return ::fidl::DispatchResult::kNotFound;
}

::fidl::DispatchResult fidl::internal::
    WireServerDispatcher<::fidl_test_protocolrequest::Child>::Dispatch(
        ::fidl::WireServer<::fidl_test_protocolrequest::Child>* impl,
        ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  std::move(msg).CloseHandles();
  txn->InternalError(::fidl::UnbindInfo::UnknownOrdinal());
  return ::fidl::DispatchResult::kNotFound;
}
::fidl::DispatchResult
fidl::WireServer<::fidl_test_protocolrequest::Child>::dispatch_message(
    fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  return ::fidl::internal::WireServerDispatcher<
      ::fidl_test_protocolrequest::Child>::Dispatch(this, std::move(msg), txn);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__
