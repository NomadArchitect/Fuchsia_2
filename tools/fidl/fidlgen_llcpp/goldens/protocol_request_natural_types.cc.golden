// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.protocolrequest/cpp/natural_types.h>

#ifdef __Fuchsia__

void ::test_protocolrequest::ParentTakeChildRequestRequest::
    EncodeWithoutValidating(::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(::fidl::EncodingInlineSize<
                ::test_protocolrequest::ParentTakeChildRequestRequest,
                ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<
      ::test_protocolrequest::ParentTakeChildRequestRequest>::Encode(&encoder,
                                                                     this,
                                                                     offset);
}

::test_protocolrequest::ParentTakeChildRequestRequest::
    ParentTakeChildRequestRequest(::fidl::Decoder& decoder)
    : storage_(
          {::fidl::DecodeAs<::fidl::ServerEnd<::test_protocolrequest::Child>>(
              &decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::test_protocolrequest::ParentTakeChildRequest::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::test_protocolrequest::ParentTakeChildRequest,
                                 ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::test_protocolrequest::ParentTakeChildRequest>::Encode(
      &encoder, this, offset);
}

::test_protocolrequest::ParentTakeChildRequest::ParentTakeChildRequest(
    ::fidl::Decoder& decoder)
    : storage_(
          {::fidl::DecodeAs<::fidl::ClientEnd<::test_protocolrequest::Child>>(
              &decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::test_protocolrequest::ParentGetChildTopResponse::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<
          ::test_protocolrequest::ParentGetChildTopResponse, ::fidl::Encoder>(
          &encoder));
  ::fidl::CodingTraits<
      ::test_protocolrequest::ParentGetChildTopResponse>::Encode(&encoder, this,
                                                                 offset);
}

::test_protocolrequest::ParentGetChildTopResponse::ParentGetChildTopResponse(
    ::fidl::Decoder& decoder)
    : storage_(
          {::fidl::DecodeAs<::fidl::ClientEnd<::test_protocolrequest::Child>>(
              &decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::test_protocolrequest::ParentGetChildRequestTopResponse::
    EncodeWithoutValidating(::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(::fidl::EncodingInlineSize<
                ::test_protocolrequest::ParentGetChildRequestTopResponse,
                ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::test_protocolrequest::
                           ParentGetChildRequestTopResponse>::Encode(&encoder,
                                                                     this,
                                                                     offset);
}

::test_protocolrequest::ParentGetChildRequestTopResponse::
    ParentGetChildRequestTopResponse(::fidl::Decoder& decoder)
    : storage_(
          {::fidl::DecodeAs<::fidl::ServerEnd<::test_protocolrequest::Child>>(
              &decoder, 0)}) {}
#endif  // __Fuchsia__
