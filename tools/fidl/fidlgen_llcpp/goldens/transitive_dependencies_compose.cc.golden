// WARNING: This file is machine generated by fidlgen.

#include <fidl/test/transitivedependenciescompose/llcpp/fidl.h>

#include <memory>

namespace fidl_test_transitivedependenciescompose {
[[maybe_unused]] constexpr uint64_t kTop_GetFoo_Ordinal = 3210163844600846111lu;

extern "C" const fidl_type_t
    fidl_test_transitivedependenciescompose_TopGetFooRequestTable;

extern "C" const fidl_type_t
    fidl_test_transitivedependenciescompose_TopGetFooResponseTable;
#ifdef __Fuchsia__
}  // namespace fidl_test_transitivedependenciescompose
::fidl::WireResult<::fidl_test_transitivedependenciescompose::Top::GetFoo>::
    WireResult(
        ::fidl::UnownedClientEnd<::fidl_test_transitivedependenciescompose::Top>
            _client) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<::fidl::WireRequest<
      ::fidl_test_transitivedependenciescompose::Top::GetFoo>>
      _request(::fidl::internal::AllowUnownedInputRef{});
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<::fidl::WireResponse<
      ::fidl_test_transitivedependenciescompose::Top::GetFoo>>(
      _client, bytes_.data(), static_cast<uint32_t>(bytes_.size()));
  SetResult(_outgoing);
}

::fidl::WireResult<::fidl_test_transitivedependenciescompose::Top::GetFoo>::
    WireResult(
        ::fidl::UnownedClientEnd<::fidl_test_transitivedependenciescompose::Top>
            _client,
        zx_time_t _deadline) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<::fidl::WireRequest<
      ::fidl_test_transitivedependenciescompose::Top::GetFoo>>
      _request(::fidl::internal::AllowUnownedInputRef{});
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<::fidl::WireResponse<
      ::fidl_test_transitivedependenciescompose::Top::GetFoo>>(
      _client, bytes_.data(), static_cast<uint32_t>(bytes_.size()), _deadline);
  SetResult(_outgoing);
}
namespace fidl_test_transitivedependenciescompose {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_transitivedependenciescompose
::fidl::WireUnownedResult<
    ::fidl_test_transitivedependenciescompose::Top::GetFoo>::
    WireUnownedResult(
        ::fidl::UnownedClientEnd<::fidl_test_transitivedependenciescompose::Top>
            _client,
        uint8_t* _response_bytes, uint32_t _response_byte_capacity)
    : bytes_(_response_bytes) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<::fidl::WireRequest<
      ::fidl_test_transitivedependenciescompose::Top::GetFoo>>
      _request(::fidl::internal::AllowUnownedInputRef{});
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<::fidl::WireResponse<
      ::fidl_test_transitivedependenciescompose::Top::GetFoo>>(
      _client, _response_bytes, _response_byte_capacity);
  ::fidl::Result::operator=(_outgoing);
}
namespace fidl_test_transitivedependenciescompose {
#endif  // __Fuchsia__

}  // namespace fidl_test_transitivedependenciescompose
#ifdef __Fuchsia__
::fidl::WireResult<::fidl_test_transitivedependenciescompose::Top::GetFoo>
fidl::internal::WireClientImpl<
    ::fidl_test_transitivedependenciescompose::Top>::GetFoo_Sync() {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannelForSyncCall()) {
    return ::fidl::WireResult<
        ::fidl_test_transitivedependenciescompose::Top::GetFoo>(
        ::fidl::UnownedClientEnd<
            ::fidl_test_transitivedependenciescompose::Top>(
            _channel->handle()));
  }
  return ::fidl::WireResult<
      ::fidl_test_transitivedependenciescompose::Top::GetFoo>(
      ::fidl::Result::Unbound());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::WireUnownedResult<
    ::fidl_test_transitivedependenciescompose::Top::GetFoo>
fidl::internal::WireClientImpl<::fidl_test_transitivedependenciescompose::Top>::
    GetFoo_Sync(::fidl::BufferSpan _response_buffer) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannelForSyncCall()) {
    return ::fidl::WireUnownedResult<
        ::fidl_test_transitivedependenciescompose::Top::GetFoo>(
        ::fidl::UnownedClientEnd<
            ::fidl_test_transitivedependenciescompose::Top>(_channel->handle()),
        _response_buffer.data, _response_buffer.capacity);
  }
  return ::fidl::WireUnownedResult<
      ::fidl_test_transitivedependenciescompose::Top::GetFoo>(
      ::fidl::Result::Unbound());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::WireResponseContext<::fidl_test_transitivedependenciescompose::Top::
                                GetFoo>::WireResponseContext()
    : ::fidl::internal::ResponseContext(
          ::fidl_test_transitivedependenciescompose::kTop_GetFoo_Ordinal) {}

::cpp17::optional<::fidl::UnbindInfo> fidl::WireResponseContext<
    ::fidl_test_transitivedependenciescompose::Top::GetFoo>::
    OnRawResult(::fidl::IncomingMessage&& msg) {
  if (unlikely(!msg.ok())) {
    OnResult(::fidl::WireUnownedResult<
             ::fidl_test_transitivedependenciescompose::Top::GetFoo>(
        msg.error()));
    return cpp17::nullopt;
  }
  ::fidl::DecodedMessage<::fidl::WireResponse<
      ::fidl_test_transitivedependenciescompose::Top::GetFoo>>
      decoded{std::move(msg)};
  ::fidl::Result maybe_error = decoded;
  OnResult(::fidl::WireUnownedResult<
           ::fidl_test_transitivedependenciescompose::Top::GetFoo>(
      std::move(decoded)));
  if (unlikely(!maybe_error.ok())) {
    return ::fidl::UnbindInfo(maybe_error);
  }
  return cpp17::nullopt;
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_transitivedependenciescompose::Top>::GetFoo(
        ::fidl::WireClientCallback<
            ::fidl_test_transitivedependenciescompose::Top::GetFoo>
            _cb) {
  using Callback = decltype(_cb);
  class ResponseContext final
      : public ::fidl::WireResponseContext<
            ::fidl_test_transitivedependenciescompose::Top::GetFoo> {
   public:
    ResponseContext(Callback cb) : cb_(std::move(cb)) {}

    void OnResult(::fidl::WireUnownedResult<
                  ::fidl_test_transitivedependenciescompose::Top::GetFoo>&&
                      result) override {
      cb_(std::move(result));
      delete this;
    }

   private:
    Callback cb_;
  };

  auto* _context = new ResponseContext(std::move(_cb));
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::WireRequest<::fidl_test_transitivedependenciescompose::Top::GetFoo>::
      OwnedEncodedMessage _request(::fidl::internal::AllowUnownedInputRef{});
  return _request.GetOutgoingMessage().Write(this, _context);
}

::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_transitivedependenciescompose::Top>::GetFoo(
        ::fit::callback<void(
            ::fidl::WireResponse<::fidl_test_transitivedependenciescompose::
                                     Top::GetFoo>* response)>
            _cb) {
  using Callback = decltype(_cb);
  class ResponseContext final
      : public ::fidl::WireResponseContext<
            ::fidl_test_transitivedependenciescompose::Top::GetFoo> {
   public:
    ResponseContext(Callback cb) : cb_(std::move(cb)) {}

    void OnResult(::fidl::WireUnownedResult<
                  ::fidl_test_transitivedependenciescompose::Top::GetFoo>&&
                      result) override {
      if (result.ok()) {
        ::fidl::WireResponse<
            ::fidl_test_transitivedependenciescompose::Top::GetFoo>* response =
            result.Unwrap();
        cb_(std::move(response));
      }
      delete this;
    }

   private:
    Callback cb_;
  };

  auto* _context = new ResponseContext(std::move(_cb));
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::WireRequest<::fidl_test_transitivedependenciescompose::Top::GetFoo>::
      OwnedEncodedMessage _request(::fidl::internal::AllowUnownedInputRef{});
  return _request.GetOutgoingMessage().Write(this, _context);
}

::fidl::Result fidl::internal::
    WireClientImpl<::fidl_test_transitivedependenciescompose::Top>::GetFoo(
        ::fidl::WireResponseContext<
            ::fidl_test_transitivedependenciescompose::Top::GetFoo>* _context) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::WireRequest<::fidl_test_transitivedependenciescompose::Top::GetFoo>::
      OwnedEncodedMessage _request(::fidl::internal::AllowUnownedInputRef{});
  return _request.GetOutgoingMessage().Write(this, _context);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
std::optional<::fidl::UnbindInfo>
fidl::internal::WireClientImpl<::fidl_test_transitivedependenciescompose::Top>::
    DispatchEvent(fidl::IncomingMessage& msg,
                  ::fidl::internal::AsyncEventHandler* maybe_event_handler) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::DispatchResult fidl::internal::WireServerDispatcher<
    ::fidl_test_transitivedependenciescompose::Top>::
    TryDispatch(::fidl::WireServer<
                    ::fidl_test_transitivedependenciescompose::Top>* impl,
                ::fidl::IncomingMessage& msg, ::fidl::Transaction* txn) {
  static const ::fidl::internal::MethodEntry entries[] = {
      {
          ::fidl_test_transitivedependenciescompose::kTop_GetFoo_Ordinal,
          [](void* interface, ::fidl::IncomingMessage&& msg,
             ::fidl::Transaction* txn) {
            auto* primary = reinterpret_cast<::fidl::WireRequest<
                ::fidl_test_transitivedependenciescompose::Top::GetFoo>*>(
                msg.bytes());
            ::fidl::internal::WireCompleter<
                ::fidl_test_transitivedependenciescompose::Top::GetFoo>::Sync
                completer(txn);
            reinterpret_cast<::fidl::WireServer<
                ::fidl_test_transitivedependenciescompose::Top>*>(interface)
                ->GetFoo(primary, completer);
            return ZX_OK;
          },
      },
  };
  return ::fidl::internal::TryDispatch(
      impl, msg, txn, entries,
      entries + sizeof(entries) / sizeof(::fidl::internal::MethodEntry));
}

::fidl::DispatchResult fidl::internal::WireServerDispatcher<
    ::fidl_test_transitivedependenciescompose::Top>::
    Dispatch(::fidl::WireServer<::fidl_test_transitivedependenciescompose::Top>*
                 impl,
             ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  ::fidl::DispatchResult dispatch_result = TryDispatch(impl, msg, txn);
  if (unlikely(dispatch_result == ::fidl::DispatchResult::kNotFound)) {
    std::move(msg).CloseHandles();
    txn->InternalError(::fidl::UnbindInfo::UnknownOrdinal());
  }
  return dispatch_result;
}
::fidl::DispatchResult
fidl::WireServer<::fidl_test_transitivedependenciescompose::Top>::
    dispatch_message(fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  return ::fidl::internal::WireServerDispatcher<
      ::fidl_test_transitivedependenciescompose::Top>::Dispatch(this,
                                                                std::move(msg),
                                                                txn);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::WireCompleterBase<
    ::fidl_test_transitivedependenciescompose::Top::GetFoo>::
    Reply(const ::bottom::wire::Foo& foo) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<::fidl::WireResponse<
      ::fidl_test_transitivedependenciescompose::Top::GetFoo>>
      _response{::fidl::internal::AllowUnownedInputRef{}, foo};
  return ::fidl::internal::WireCompleterBase<
      ::fidl_test_transitivedependenciescompose::Top::GetFoo>::
      SendReply(&_response.GetOutgoingMessage());
}

::fidl::Result fidl::internal::WireCompleterBase<
    ::fidl_test_transitivedependenciescompose::Top::GetFoo>::
    Reply(::fidl::BufferSpan _buffer, const ::bottom::wire::Foo& foo) {
  ::fidl::WireResponse<::fidl_test_transitivedependenciescompose::Top::GetFoo>::
      UnownedEncodedMessage _response(_buffer.data, _buffer.capacity, foo);
  return CompleterBase::SendReply(&_response.GetOutgoingMessage());
}
#endif  // __Fuchsia__

void ::fidl::WireRequest<
    ::fidl_test_transitivedependenciescompose::Top::GetFoo>::_InitHeader() {
  fidl_init_txn_header(
      &_hdr, 0, ::fidl_test_transitivedependenciescompose::kTop_GetFoo_Ordinal);
}

void ::fidl::WireResponse<
    ::fidl_test_transitivedependenciescompose::Top::GetFoo>::_InitHeader() {
  fidl_init_txn_header(
      &_hdr, 0, ::fidl_test_transitivedependenciescompose::kTop_GetFoo_Ordinal);
}

#ifdef __Fuchsia__

#endif  // __Fuchsia__
