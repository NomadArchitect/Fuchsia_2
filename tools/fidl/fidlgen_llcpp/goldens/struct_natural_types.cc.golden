// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.struct/cpp/natural_types.h>

#ifdef __Fuchsia__

void ::test_struct::Simple::EncodeWithoutValidating(::fidl::Encoder& encoder,
                                                    size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::test_struct::Simple, ::fidl::Encoder>(
          &encoder));
  ::fidl::CodingTraits<::test_struct::Simple>::Encode(&encoder, this, offset);
}

::test_struct::Simple::Simple(::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<uint8_t>(&decoder, 0),
                ::fidl::DecodeAs<bool>(&decoder, 1)}) {}
#endif  // __Fuchsia__

::test_struct::Simple::Storage test_struct::Simple::CloneStorage() const {
  return Storage{::fidl::internal::NaturalClone(storage_.f1),
                 ::fidl::internal::NaturalClone(storage_.f2)};
}
#ifdef __Fuchsia__

void ::test_struct::BasicStruct::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::test_struct::BasicStruct, ::fidl::Encoder>(
          &encoder));
  ::fidl::CodingTraits<::test_struct::BasicStruct>::Encode(&encoder, this,
                                                           offset);
}

::test_struct::BasicStruct::BasicStruct(::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<uint32_t>(&decoder, 0),
                ::fidl::DecodeAs<::std::string>(&decoder, 8)}) {}
#endif  // __Fuchsia__

::test_struct::BasicStruct::Storage test_struct::BasicStruct::CloneStorage()
    const {
  return Storage{::fidl::internal::NaturalClone(storage_.x),
                 ::fidl::internal::NaturalClone(storage_.y)};
}
