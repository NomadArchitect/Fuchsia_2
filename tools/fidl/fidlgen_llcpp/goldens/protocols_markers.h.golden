// WARNING: This file is machine generated by fidlgen.

#pragma once

namespace fidl_test_protocols {

class HandleRightsProtocol final {
  HandleRightsProtocol() = delete;

 public:
  class NoResponseMethod final {
    NoResponseMethod() = delete;
  };
  class ResponseMethod final {
    ResponseMethod() = delete;
  };
  class AnEvent final {
    AnEvent() = delete;
  };
};

class WithAndWithoutRequestResponse final {
  WithAndWithoutRequestResponse() = delete;

 public:
  class NoRequestNoResponse final {
    NoRequestNoResponse() = delete;
  };
  class NoRequestEmptyResponse final {
    NoRequestEmptyResponse() = delete;
  };
  class NoRequestWithResponse final {
    NoRequestWithResponse() = delete;
  };
  class WithRequestNoResponse final {
    WithRequestNoResponse() = delete;
  };
  class WithRequestEmptyResponse final {
    WithRequestEmptyResponse() = delete;
  };
  class WithRequestWithResponse final {
    WithRequestWithResponse() = delete;
  };
  class OnEmptyResponse final {
    OnEmptyResponse() = delete;
  };
  class OnWithResponse final {
    OnWithResponse() = delete;
  };
};

class Transitional final {
  Transitional() = delete;

 public:
  class Request final {
    Request() = delete;
  };
  class OneWay final {
    OneWay() = delete;
  };
  class Event final {
    Event() = delete;
  };
};

class MethodWithUnion final {
  MethodWithUnion() = delete;

 public:
  class UnionMethod final {
    UnionMethod() = delete;
  };
};

class SyscallProtocol final {
  SyscallProtocol() = delete;

 public:
  class MethodC final {
    MethodC() = delete;
  };
};

class WithProtocolEnds final {
  WithProtocolEnds() = delete;

 public:
  class ClientEnds final {
    ClientEnds() = delete;
  };
  class ServerEnds final {
    ServerEnds() = delete;
  };
  class StructContainingEnds final {
    StructContainingEnds() = delete;
  };
};

class ManyParameters final {
  ManyParameters() = delete;

 public:
  class Fifteen final {
    Fifteen() = delete;
  };
};

class WithErrorSyntax final {
  WithErrorSyntax() = delete;

 public:
  class ResponseAsStruct final {
    ResponseAsStruct() = delete;
  };
  class ErrorAsPrimitive final {
    ErrorAsPrimitive() = delete;
  };
  class ErrorAsEnum final {
    ErrorAsEnum() = delete;
  };
  class HandleInResult final {
    HandleInResult() = delete;
  };
};

class DiscoverableProtocol final {
  DiscoverableProtocol() = delete;

 public:
  class Method final {
    Method() = delete;
  };
};

class ChannelProtocol final {
  ChannelProtocol() = delete;

 public:
  class MethodA final {
    MethodA() = delete;
  };
  class EventA final {
    EventA() = delete;
  };
  class MethodB final {
    MethodB() = delete;
  };
  class TakeHandle final {
    TakeHandle() = delete;
  };
  class MutateSocket final {
    MutateSocket() = delete;
  };
};
}  // namespace fidl_test_protocols
