// WARNING: This file is machine generated by fidlgen_llcpp.

#include <fidl/test.versions/cpp/natural_messaging.h>

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo>
fidl::internal::NaturalEventDispatcher<::test_versions::OtherProtocol>::DispatchEvent(
    ::fidl::IncomingMessage& msg,
    ::fidl::internal::MessageStorageViewBase* storage_view) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

constexpr ::fidl::internal::MethodEntry fidl::internal::NaturalServerDispatcher<::test_versions::OtherProtocol>::entries_[] = {};

const ::fidl::internal::MethodEntry* fidl::internal::NaturalServerDispatcher<::test_versions::OtherProtocol>::entries_end_ =
    &entries_[0];

void fidl::internal::NaturalServerDispatcher<::test_versions::OtherProtocol>::Dispatch(::fidl::Server<::test_versions::OtherProtocol>* impl, ::fidl::IncomingMessage&& msg,
                                                                                       internal::MessageStorageViewBase* storage_view, ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, storage_view, txn, entries_, entries_end_);
}
void fidl::Server<::test_versions::OtherProtocol>::dispatch_message(
    ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn,
    ::fidl::internal::MessageStorageViewBase* storage_view) {
  ::fidl::internal::NaturalServerDispatcher<::test_versions::OtherProtocol>::Dispatch(this, std::move(msg), storage_view, txn);
}
#endif  // __Fuchsia__

namespace test_versions {
[[maybe_unused]] constexpr inline uint64_t kProtocol_Foo_Ordinal = 6231434419097198905lu;

[[maybe_unused]] constexpr inline ::fidl::MessageDynamicFlags kProtocol_Foo_DynamicFlags = ::fidl::MessageDynamicFlags::kStrictMethod;

#ifdef __Fuchsia__
}  // namespace test_versions
::fitx::result<::fidl::Error>
fidl::internal::NaturalClientImpl<::test_versions::Protocol>::Foo() const {
  ::fidl::internal::NaturalMessageEncoder _encoder{
      &::fidl::internal::ChannelTransport::VTable, ::test_versions::kProtocol_Foo_Ordinal, ::test_versions::kProtocol_Foo_DynamicFlags};
  ::fidl::OutgoingMessage _encoded_message = _encoder.GetMessage();
  ::fidl::Status status = client_base().SendOneWay(_encoded_message);
  return ::fidl::internal::ToFitxResult(status);
}
namespace test_versions {
#endif  // __Fuchsia__

}  // namespace test_versions
#ifdef __Fuchsia__

::fitx::result<::fidl::Error>
fidl::internal::NaturalSyncClientImpl<::test_versions::Protocol>::Foo() {
  ::fidl::internal::NaturalMessageEncoder encoder{
      &::fidl::internal::ChannelTransport::VTable, ::test_versions::kProtocol_Foo_Ordinal, ::test_versions::kProtocol_Foo_DynamicFlags};
  ::fidl::OutgoingMessage msg = encoder.GetMessage();
  msg.Write(_client_end().handle());
  return ::fidl::internal::ToFitxResult(::fidl::Status{msg});
}

#endif  // __Fuchsia__

#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo>
fidl::internal::NaturalEventDispatcher<::test_versions::Protocol>::DispatchEvent(
    ::fidl::IncomingMessage& msg,
    ::fidl::internal::MessageStorageViewBase* storage_view) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

constexpr ::fidl::internal::MethodEntry fidl::internal::NaturalServerDispatcher<::test_versions::Protocol>::entries_[] = {
    {
        ::test_versions::kProtocol_Foo_Ordinal,
        [](void* interface, ::fidl::IncomingMessage&& msg,
           internal::MessageStorageViewBase* storage_view, ::fidl::Transaction* txn) {
          ::fitx::result decoded = ::fidl::internal::DecodeTransactionalMessage(std::move(msg));
          if (decoded.is_error()) {
            return decoded.error_value();
          }
          ::fidl::Request<::test_versions::Protocol::Foo> request;
          ::fidl::internal::NaturalCompleter<::test_versions::Protocol::Foo>::Sync completer(txn);
          static_cast<::fidl::Server<::test_versions::Protocol>*>(interface)->Foo(
              request, completer);
          return ::fidl::Status::Ok();
        },
    },
};

const ::fidl::internal::MethodEntry* fidl::internal::NaturalServerDispatcher<::test_versions::Protocol>::entries_end_ =
    &entries_[1];

void fidl::internal::NaturalServerDispatcher<::test_versions::Protocol>::Dispatch(::fidl::Server<::test_versions::Protocol>* impl, ::fidl::IncomingMessage&& msg,
                                                                                  internal::MessageStorageViewBase* storage_view, ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, storage_view, txn, entries_, entries_end_);
}
void fidl::Server<::test_versions::Protocol>::dispatch_message(
    ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn,
    ::fidl::internal::MessageStorageViewBase* storage_view) {
  ::fidl::internal::NaturalServerDispatcher<::test_versions::Protocol>::Dispatch(this, std::move(msg), storage_view, txn);
}
#endif  // __Fuchsia__
