// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.handlesintypes/cpp/type_conversions.h>

namespace fidl {
namespace internal {

#ifdef __Fuchsia__

::test_handlesintypes::HandlesInTypes
WireNaturalConversionTraits<::test_handlesintypes::wire::HandlesInTypes,
                            ::test_handlesintypes::HandlesInTypes>::
    ToNatural(::test_handlesintypes::wire::HandlesInTypes src) {
  return ::test_handlesintypes::HandlesInTypes({
      .normal_handle =
          WireNaturalConversionTraits<::zx::vmo, ::zx::vmo>::ToNatural(
              std::move(src.normal_handle)),
      .handle_in_vec = WireNaturalConversionTraits<
          ::fidl::VectorView<::zx::vmo>,
          ::std::vector<::zx::vmo>>::ToNatural(std::move(src.handle_in_vec)),
      .handle_in_array =
          WireNaturalConversionTraits<::fidl::Array<::zx::vmo, 5>,
                                      ::std::array<::zx::vmo, 5>>::
              ToNatural(std::move(src.handle_in_array)),
      .handle_in_mixed_vec_array = WireNaturalConversionTraits<
          ::fidl::VectorView<::fidl::Array<::zx::vmo, 5>>,
          ::std::vector<::std::array<::zx::vmo, 5>>>::
          ToNatural(std::move(src.handle_in_mixed_vec_array)),
      .table_with_handle = WireNaturalConversionTraits<
          ::test_handlesintypes::wire::TableWithHandle,
          ::test_handlesintypes::TableWithHandle>::
          ToNatural(std::move(src.table_with_handle)),
      .union_with_handle = WireNaturalConversionTraits<
          ::test_handlesintypes::wire::UnionWithHandle,
          ::test_handlesintypes::UnionWithHandle>::
          ToNatural(std::move(src.union_with_handle)),
  });
}

#endif  // __Fuchsia__

#ifdef __Fuchsia__

::test_handlesintypes::TableWithHandle
WireNaturalConversionTraits<::test_handlesintypes::wire::TableWithHandle,
                            ::test_handlesintypes::TableWithHandle>::
    ToNatural(::test_handlesintypes::wire::TableWithHandle src) {
  ::test_handlesintypes::TableWithHandle dst;
  if (src.has_h()) {
    dst.h() = WireNaturalConversionTraits<::zx::vmo, ::zx::vmo>::ToNatural(
        std::move(src.h()));
  }

  return dst;
}

#endif  // __Fuchsia__

#ifdef __Fuchsia__

::test_handlesintypes::UnionWithHandle
WireNaturalConversionTraits<::test_handlesintypes::wire::UnionWithHandle,
                            ::test_handlesintypes::UnionWithHandle>::
    ToNatural(::test_handlesintypes::wire::UnionWithHandle src) {
  switch (src.Which()) {
    case ::test_handlesintypes::wire::UnionWithHandle::Tag::kH:
      return ::test_handlesintypes::UnionWithHandle::WithH(
          WireNaturalConversionTraits<::zx::vmo, ::zx::vmo>::ToNatural(
              std::move(src.h())));
    default:
      return ::test_handlesintypes::UnionWithHandle();
  }
}

std::unique_ptr<::test_handlesintypes::UnionWithHandle>
WireNaturalConversionTraits<
    ::test_handlesintypes::wire::UnionWithHandle,
    std::unique_ptr<::test_handlesintypes::UnionWithHandle>>::
    ToNatural(::test_handlesintypes::wire::UnionWithHandle src) {
  if (src.has_invalid_tag()) {
    return nullptr;
  }
  return std::make_unique<::test_handlesintypes::UnionWithHandle>(
      WireNaturalConversionTraits<
          ::test_handlesintypes::wire::UnionWithHandle,
          ::test_handlesintypes::UnionWithHandle>::ToNatural(std::move(src)));
}

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__
}  // namespace internal
}  // namespace fidl
