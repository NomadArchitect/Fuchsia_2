// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.placementofattributes/cpp/type_conversions.h>

namespace fidl {
namespace internal {

::test_placementofattributes::ExampleStruct
WireNaturalConversionTraits<::test_placementofattributes::wire::ExampleStruct,
                            ::test_placementofattributes::ExampleStruct>::
    ToNatural(::test_placementofattributes::wire::ExampleStruct src) {
  return ::test_placementofattributes::ExampleStruct(
      WireNaturalConversionTraits<uint32_t, uint32_t>::ToNatural(
          std::move(src.member)));
}

::test_placementofattributes::ExampleProtocolMethodRequest
WireNaturalConversionTraits<
    ::test_placementofattributes::wire::ExampleProtocolMethodRequest,
    ::test_placementofattributes::ExampleProtocolMethodRequest>::
    ToNatural(
        ::test_placementofattributes::wire::ExampleProtocolMethodRequest src) {
  return ::test_placementofattributes::ExampleProtocolMethodRequest(
      WireNaturalConversionTraits<
          ::test_exampleusing::wire::Empty,
          ::test_exampleusing::Empty>::ToNatural(std::move(src.arg)));
}

::test_placementofattributes::ExampleTable
WireNaturalConversionTraits<::test_placementofattributes::wire::ExampleTable,
                            ::test_placementofattributes::ExampleTable>::
    ToNatural(::test_placementofattributes::wire::ExampleTable src) {
  ::test_placementofattributes::ExampleTable dst;
  if (src.has_member()) {
    dst.member() = WireNaturalConversionTraits<uint32_t, uint32_t>::ToNatural(
        std::move(src.member()));
  }

  return dst;
}

::test_placementofattributes::ExampleXUnion
WireNaturalConversionTraits<::test_placementofattributes::wire::ExampleXUnion,
                            ::test_placementofattributes::ExampleXUnion>::
    ToNatural(::test_placementofattributes::wire::ExampleXUnion src) {
  switch (src.Which()) {
    case ::test_placementofattributes::wire::ExampleXUnion::Tag::kVariant:
      return ::test_placementofattributes::ExampleXUnion::WithVariant(
          WireNaturalConversionTraits<uint32_t, uint32_t>::ToNatural(
              std::move(src.variant())));
    default:
      return ::test_placementofattributes::ExampleXUnion();
  }
}

std::unique_ptr<::test_placementofattributes::ExampleXUnion>
WireNaturalConversionTraits<
    ::test_placementofattributes::wire::ExampleXUnion,
    std::unique_ptr<::test_placementofattributes::ExampleXUnion>>::
    ToNatural(::test_placementofattributes::wire::ExampleXUnion src) {
  if (src.has_invalid_tag()) {
    return nullptr;
  }
  return std::make_unique<::test_placementofattributes::ExampleXUnion>(
      WireNaturalConversionTraits<
          ::test_placementofattributes::wire::ExampleXUnion,
          ::test_placementofattributes::ExampleXUnion>::
          ToNatural(std::move(src)));
}

::test_placementofattributes::ExampleUnion
WireNaturalConversionTraits<::test_placementofattributes::wire::ExampleUnion,
                            ::test_placementofattributes::ExampleUnion>::
    ToNatural(::test_placementofattributes::wire::ExampleUnion src) {
  switch (src.Which()) {
    case ::test_placementofattributes::wire::ExampleUnion::Tag::kVariant:
      return ::test_placementofattributes::ExampleUnion::WithVariant(
          WireNaturalConversionTraits<uint32_t, uint32_t>::ToNatural(
              std::move(src.variant())));
    default:
      ZX_PANIC("unknown union tag in strict union");
  }
}

std::unique_ptr<::test_placementofattributes::ExampleUnion>
WireNaturalConversionTraits<
    ::test_placementofattributes::wire::ExampleUnion,
    std::unique_ptr<::test_placementofattributes::ExampleUnion>>::
    ToNatural(::test_placementofattributes::wire::ExampleUnion src) {
  if (src.has_invalid_tag()) {
    return nullptr;
  }
  return std::make_unique<::test_placementofattributes::ExampleUnion>(
      WireNaturalConversionTraits<
          ::test_placementofattributes::wire::ExampleUnion,
          ::test_placementofattributes::ExampleUnion>::
          ToNatural(std::move(src)));
}

#ifdef __Fuchsia__

::fidl::Request<::test_placementofattributes::ExampleProtocol::Method>
WireNaturalConversionTraits<
    ::fidl::WireRequest<::test_placementofattributes::ExampleProtocol::Method>,
    ::fidl::Request<::test_placementofattributes::ExampleProtocol::Method>>::
    ToNatural(::fidl::WireRequest<
              ::test_placementofattributes::ExampleProtocol::Method>
                  src) {
  return ::fidl::Request<::test_placementofattributes::ExampleProtocol::Method>(
      WireNaturalConversionTraits<
          ::test_placementofattributes::wire::ExampleProtocolMethodRequest,
          ::test_placementofattributes::ExampleProtocolMethodRequest>::
          ToNatural(std::move(src)));
}
#endif  // __Fuchsia__
}  // namespace internal
}  // namespace fidl
