// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.protocollayouts/cpp/natural_types.h>

::test_protocollayouts::MainProtocolTwoWayImportWithErrorTopResponse::Storage_
test_protocollayouts::MainProtocolTwoWayImportWithErrorTopResponse::
    CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}

::test_protocollayouts::MainProtocolTwoWayAnonWithErrorTopResponse::Storage_
test_protocollayouts::MainProtocolTwoWayAnonWithErrorTopResponse::
    CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}

::test_protocollayouts::MainProtocolOnImportWithErrorRequest::Storage_
test_protocollayouts::MainProtocolOnImportWithErrorRequest::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}

::test_protocollayouts::MainProtocolOnAnonWithErrorRequest::Storage_
test_protocollayouts::MainProtocolOnAnonWithErrorRequest::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}

::test_protocollayouts::MainProtocolTwoWayLocalWithErrorTopResponse::Storage_
test_protocollayouts::MainProtocolTwoWayLocalWithErrorTopResponse::
    CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}

::test_protocollayouts::MainProtocolOnLocalWithErrorRequest::Storage_
test_protocollayouts::MainProtocolOnLocalWithErrorRequest::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}

::test_protocollayouts::MainProtocol_OnAnonWithError_Response::Storage_
test_protocollayouts::MainProtocol_OnAnonWithError_Response::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a)};
}

::test_protocollayouts::MainProtocolTwoWayAnonWithErrorRequest::Storage_
test_protocollayouts::MainProtocolTwoWayAnonWithErrorRequest::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a)};
}

::test_protocollayouts::MainProtocolTwoWayAnonResponse::Storage_
test_protocollayouts::MainProtocolTwoWayAnonResponse::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a)};
}

::test_protocollayouts::MainProtocolOneWayAnonRequest::Storage_
test_protocollayouts::MainProtocolOneWayAnonRequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a)};
}

::test_protocollayouts::LocalTablePayload::Storage_
test_protocollayouts::LocalTablePayload::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a)};
}

std::shared_ptr<
    ::test_protocollayouts::MainProtocol_TwoWayImportWithError_Result::Storage_>
test_protocollayouts::MainProtocol_TwoWayImportWithError_Result::CloneStorage_()
    const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<
    ::test_protocollayouts::MainProtocol_TwoWayAnonWithError_Response::Storage_>
test_protocollayouts::MainProtocol_TwoWayAnonWithError_Response::CloneStorage_()
    const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<
    ::test_protocollayouts::MainProtocol_TwoWayAnonWithError_Result::Storage_>
test_protocollayouts::MainProtocol_TwoWayAnonWithError_Result::CloneStorage_()
    const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<
    ::test_protocollayouts::MainProtocol_OnImportWithError_Result::Storage_>
test_protocollayouts::MainProtocol_OnImportWithError_Result::CloneStorage_()
    const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<
    ::test_protocollayouts::MainProtocol_OnAnonWithError_Result::Storage_>
test_protocollayouts::MainProtocol_OnAnonWithError_Result::CloneStorage_()
    const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<::test_protocollayouts::MainProtocolTwoWayAnonRequest::Storage_>
test_protocollayouts::MainProtocolTwoWayAnonRequest::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<::test_protocollayouts::MainProtocolOnAnonRequest::Storage_>
test_protocollayouts::MainProtocolOnAnonRequest::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<::test_protocollayouts::LocalUnionPayload::Storage_>
test_protocollayouts::LocalUnionPayload::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<
    ::test_protocollayouts::MainProtocol_TwoWayLocalWithError_Result::Storage_>
test_protocollayouts::MainProtocol_TwoWayLocalWithError_Result::CloneStorage_()
    const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<
    ::test_protocollayouts::MainProtocol_OnLocalWithError_Result::Storage_>
test_protocollayouts::MainProtocol_OnLocalWithError_Result::CloneStorage_()
    const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
