// WARNING: This file is machine generated by fidlgen.

#include <fidl/fidl.test.doccomments/cpp/wire_types.h>

void ::fidl_test_doccomments::wire::StrictUnion::
    SizeAndOffsetAssertionHelper() {
  static_assert(sizeof(StrictUnion) == sizeof(fidl_xunion_v2_t));
  static_assert(offsetof(StrictUnion, ordinal_) ==
                offsetof(fidl_xunion_v2_t, tag));
  static_assert(offsetof(StrictUnion, envelope_) ==
                offsetof(fidl_xunion_v2_t, envelope));
}
auto ::fidl_test_doccomments::wire::FlexibleUnion::which() const
    -> ::fidl_test_doccomments::wire::FlexibleUnion::Tag {
  ZX_ASSERT(!has_invalid_tag());
  switch (ordinal_) {
    case ::fidl_test_doccomments::wire::FlexibleUnion::Ordinal::kField:
      return static_cast<::fidl_test_doccomments::wire::FlexibleUnion::Tag>(
          ordinal_);
    default:
      return ::fidl_test_doccomments::wire::FlexibleUnion::Tag::kUnknown;
  }
}

void ::fidl_test_doccomments::wire::FlexibleUnion::
    SizeAndOffsetAssertionHelper() {
  static_assert(sizeof(FlexibleUnion) == sizeof(fidl_xunion_v2_t));
  static_assert(offsetof(FlexibleUnion, ordinal_) ==
                offsetof(fidl_xunion_v2_t, tag));
  static_assert(offsetof(FlexibleUnion, envelope_) ==
                offsetof(fidl_xunion_v2_t, envelope));
}
