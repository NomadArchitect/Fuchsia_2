// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.placementofattributes/cpp/natural_types.h>

#ifdef __Fuchsia__

void ::test_placementofattributes::ExampleStruct::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::test_placementofattributes::ExampleStruct,
                                 ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::test_placementofattributes::ExampleStruct>::Encode(
      &encoder, this, offset);
}

::test_placementofattributes::ExampleStruct::ExampleStruct(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<uint32_t>(&decoder, 0)}) {}
#endif  // __Fuchsia__

::test_placementofattributes::ExampleStruct::Storage_
test_placementofattributes::ExampleStruct::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.member)};
}
#ifdef __Fuchsia__

void ::test_placementofattributes::ExampleProtocolMethodRequest::
    EncodeWithoutValidating(::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(::fidl::EncodingInlineSize<
                ::test_placementofattributes::ExampleProtocolMethodRequest,
                ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::test_placementofattributes::
                           ExampleProtocolMethodRequest>::Encode(&encoder, this,
                                                                 offset);
}

::test_placementofattributes::ExampleProtocolMethodRequest::
    ExampleProtocolMethodRequest(::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::test_exampleusing::Empty>(&decoder, 0)}) {}
#endif  // __Fuchsia__

::test_placementofattributes::ExampleProtocolMethodRequest::Storage_
test_placementofattributes::ExampleProtocolMethodRequest::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.arg)};
}

::test_placementofattributes::ExampleTable::Storage
test_placementofattributes::ExampleTable::CloneStorage() const {
  return Storage{::fidl::internal::NaturalClone(storage_.member)};
}

std::shared_ptr<::test_placementofattributes::ExampleXUnion::Storage>
test_placementofattributes::ExampleXUnion::CloneStorage() const {
  const Storage& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage>();
  }
}

std::shared_ptr<::test_placementofattributes::ExampleUnion::Storage>
test_placementofattributes::ExampleUnion::CloneStorage() const {
  const Storage& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage>();
  }
}
