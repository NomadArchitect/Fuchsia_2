// WARNING: This file is machine generated by fidlgen_llcpp.

#include <fidl/test.inheritancewithrecursivedecl/cpp/natural_messaging.h>

namespace test_inheritancewithrecursivedecl {
[[maybe_unused]] constexpr inline uint64_t kParent_First_Ordinal =
    3973163707930985819lu;

#ifdef __Fuchsia__
}  // namespace test_inheritancewithrecursivedecl
::fitx::result<::fidl::Error> fidl::internal::
    NaturalClientImpl<::test_inheritancewithrecursivedecl::Parent>::First(
        ::fidl::Request<::test_inheritancewithrecursivedecl::Parent::First>
            request) const {
  ::fidl::internal::NaturalMessageEncoder _encoder{
      &::fidl::internal::ChannelTransport::VTable,
      ::test_inheritancewithrecursivedecl::kParent_First_Ordinal};
  _encoder.EncodeBody(
      ::fidl::internal::NaturalMessageConverter<
          ::fidl::Request<::test_inheritancewithrecursivedecl::Parent::First>>::
          IntoDomainObject(std::move(request)));

  ::fidl::Status status = messenger().OneWay(_encoder.GetMessage());
  return ::fidl::internal::ToFitxResult(status);
}
namespace test_inheritancewithrecursivedecl {
#endif  // __Fuchsia__

}  // namespace test_inheritancewithrecursivedecl
#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo> fidl::internal::NaturalEventDispatcher<
    ::test_inheritancewithrecursivedecl::Parent>::
    DispatchEvent(
        ::fidl::IncomingMessage& msg,
        ::fidl::internal::IncomingTransportContext transport_context) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

constexpr ::fidl::internal::MethodEntry fidl::internal::NaturalServerDispatcher<
    ::test_inheritancewithrecursivedecl::Parent>::entries_[] = {
    {
        ::test_inheritancewithrecursivedecl::kParent_First_Ordinal,
        [](void* interface, ::fidl::IncomingMessage&& msg,
           internal::IncomingTransportContext transport_context,
           ::fidl::Transaction* txn) {
          ::fitx::result decoded = ::fidl::internal::DecodeTransactionalMessage<
              ::test_inheritancewithrecursivedecl::ParentFirstRequest>(
              std::move(msg));
          if (decoded.is_error()) {
            return decoded.error_value().status();
          }
          ::fidl::Request<::test_inheritancewithrecursivedecl::Parent::First>
              request =
                  ::fidl::internal::NaturalMessageConverter<::fidl::Request<
                      ::test_inheritancewithrecursivedecl::Parent::First>>::
                      FromDomainObject(std::move(decoded.value()));
          ::fidl::internal::NaturalCompleter<
              ::test_inheritancewithrecursivedecl::Parent::First>::Sync
              completer(txn);
          static_cast<
              ::fidl::Server<::test_inheritancewithrecursivedecl::Parent>*>(
              interface)
              ->First(request, completer);
          return ZX_OK;
        },
    },
};

const ::fidl::internal::MethodEntry* fidl::internal::NaturalServerDispatcher<
    ::test_inheritancewithrecursivedecl::Parent>::entries_end_ = &entries_[1];

void fidl::internal::NaturalServerDispatcher<
    ::test_inheritancewithrecursivedecl::Parent>::
    Dispatch(::fidl::Server<::test_inheritancewithrecursivedecl::Parent>* impl,
             ::fidl::IncomingMessage&& msg,
             internal::IncomingTransportContext transport_context,
             ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, std::move(transport_context), txn,
                             entries_, entries_end_);
}
void fidl::Server<::test_inheritancewithrecursivedecl::Parent>::
    dispatch_message(
        ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn,
        ::fidl::internal::IncomingTransportContext transport_context) {
  ::fidl::internal::NaturalServerDispatcher<
      ::test_inheritancewithrecursivedecl::Parent>::
      Dispatch(this, std::move(msg), std::move(transport_context), txn);
}
#endif  // __Fuchsia__

namespace test_inheritancewithrecursivedecl {
[[maybe_unused]] constexpr inline uint64_t kChild_First_Ordinal =
    3973163707930985819lu;

[[maybe_unused]] constexpr inline uint64_t kChild_Second_Ordinal =
    2545123272820824165lu;

#ifdef __Fuchsia__
}  // namespace test_inheritancewithrecursivedecl
::fitx::result<::fidl::Error> fidl::internal::
    NaturalClientImpl<::test_inheritancewithrecursivedecl::Child>::First(
        ::fidl::Request<::test_inheritancewithrecursivedecl::Child::First>
            request) const {
  ::fidl::internal::NaturalMessageEncoder _encoder{
      &::fidl::internal::ChannelTransport::VTable,
      ::test_inheritancewithrecursivedecl::kChild_First_Ordinal};
  _encoder.EncodeBody(
      ::fidl::internal::NaturalMessageConverter<
          ::fidl::Request<::test_inheritancewithrecursivedecl::Child::First>>::
          IntoDomainObject(std::move(request)));

  ::fidl::Status status = messenger().OneWay(_encoder.GetMessage());
  return ::fidl::internal::ToFitxResult(status);
}

::fitx::result<::fidl::Error> fidl::internal::
    NaturalClientImpl<::test_inheritancewithrecursivedecl::Child>::Second(
        ::fidl::Request<::test_inheritancewithrecursivedecl::Child::Second>
            request) const {
  ::fidl::internal::NaturalMessageEncoder _encoder{
      &::fidl::internal::ChannelTransport::VTable,
      ::test_inheritancewithrecursivedecl::kChild_Second_Ordinal};
  _encoder.EncodeBody(
      ::fidl::internal::NaturalMessageConverter<
          ::fidl::Request<::test_inheritancewithrecursivedecl::Child::Second>>::
          IntoDomainObject(std::move(request)));

  ::fidl::Status status = messenger().OneWay(_encoder.GetMessage());
  return ::fidl::internal::ToFitxResult(status);
}
namespace test_inheritancewithrecursivedecl {
#endif  // __Fuchsia__

}  // namespace test_inheritancewithrecursivedecl
#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo> fidl::internal::NaturalEventDispatcher<
    ::test_inheritancewithrecursivedecl::Child>::
    DispatchEvent(
        ::fidl::IncomingMessage& msg,
        ::fidl::internal::IncomingTransportContext transport_context) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

constexpr ::fidl::internal::MethodEntry fidl::internal::NaturalServerDispatcher<
    ::test_inheritancewithrecursivedecl::Child>::entries_[] = {
    {
        ::test_inheritancewithrecursivedecl::kChild_First_Ordinal,
        [](void* interface, ::fidl::IncomingMessage&& msg,
           internal::IncomingTransportContext transport_context,
           ::fidl::Transaction* txn) {
          ::fitx::result decoded = ::fidl::internal::DecodeTransactionalMessage<
              ::test_inheritancewithrecursivedecl::ParentFirstRequest>(
              std::move(msg));
          if (decoded.is_error()) {
            return decoded.error_value().status();
          }
          ::fidl::Request<::test_inheritancewithrecursivedecl::Child::First>
              request =
                  ::fidl::internal::NaturalMessageConverter<::fidl::Request<
                      ::test_inheritancewithrecursivedecl::Child::First>>::
                      FromDomainObject(std::move(decoded.value()));
          ::fidl::internal::NaturalCompleter<
              ::test_inheritancewithrecursivedecl::Child::First>::Sync
              completer(txn);
          static_cast<
              ::fidl::Server<::test_inheritancewithrecursivedecl::Child>*>(
              interface)
              ->First(request, completer);
          return ZX_OK;
        },
    },
    {
        ::test_inheritancewithrecursivedecl::kChild_Second_Ordinal,
        [](void* interface, ::fidl::IncomingMessage&& msg,
           internal::IncomingTransportContext transport_context,
           ::fidl::Transaction* txn) {
          ::fitx::result decoded = ::fidl::internal::DecodeTransactionalMessage<
              ::test_inheritancewithrecursivedecl::ChildSecondRequest>(
              std::move(msg));
          if (decoded.is_error()) {
            return decoded.error_value().status();
          }
          ::fidl::Request<::test_inheritancewithrecursivedecl::Child::Second>
              request =
                  ::fidl::internal::NaturalMessageConverter<::fidl::Request<
                      ::test_inheritancewithrecursivedecl::Child::Second>>::
                      FromDomainObject(std::move(decoded.value()));
          ::fidl::internal::NaturalCompleter<
              ::test_inheritancewithrecursivedecl::Child::Second>::Sync
              completer(txn);
          static_cast<
              ::fidl::Server<::test_inheritancewithrecursivedecl::Child>*>(
              interface)
              ->Second(request, completer);
          return ZX_OK;
        },
    },
};

const ::fidl::internal::MethodEntry* fidl::internal::NaturalServerDispatcher<
    ::test_inheritancewithrecursivedecl::Child>::entries_end_ = &entries_[2];

void fidl::internal::NaturalServerDispatcher<
    ::test_inheritancewithrecursivedecl::Child>::
    Dispatch(::fidl::Server<::test_inheritancewithrecursivedecl::Child>* impl,
             ::fidl::IncomingMessage&& msg,
             internal::IncomingTransportContext transport_context,
             ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, std::move(transport_context), txn,
                             entries_, entries_end_);
}
void fidl::Server<::test_inheritancewithrecursivedecl::Child>::dispatch_message(
    ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn,
    ::fidl::internal::IncomingTransportContext transport_context) {
  ::fidl::internal::NaturalServerDispatcher<
      ::test_inheritancewithrecursivedecl::Child>::
      Dispatch(this, std::move(msg), std::move(transport_context), txn);
}
#endif  // __Fuchsia__
