// WARNING: This file is machine generated by fidlgen.

#include <fidl/fidl.test.service/cpp/driver_messaging.h>

#include <memory>

namespace fidl_test_service {
[[maybe_unused]] constexpr uint64_t kSecondProtocol_MethodOnSecond_Ordinal =
    6118813307380259369lu;

extern "C" const fidl_type_t
    fidl_test_service_SecondProtocolMethodOnSecondRequestTable;

extern "C" const fidl_type_t
    fidl_test_service_SecondProtocolMethodOnSecondResponseTable;
#ifdef __Fuchsia__
}  // namespace fidl_test_service
::fidl::WireResult<::fidl_test_service::SecondProtocol::MethodOnSecond>::
    WireResult(
        ::fidl::UnownedClientEnd<::fidl_test_service::SecondProtocol> _client) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_service::SecondProtocol::MethodOnSecond>>
      _request(::fidl::internal::AllowUnownedInputRef{});
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Write(_client);
  SetResult(_outgoing);
}
namespace fidl_test_service {
#endif  // __Fuchsia__

}  // namespace fidl_test_service
#ifdef __Fuchsia__

::fidl::Result fidl::internal::WireClientImpl<
    ::fidl_test_service::SecondProtocol>::MethodOnSecond() {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_service::SecondProtocol::MethodOnSecond>>
      _request(::fidl::internal::AllowUnownedInputRef{});
  return ::fidl::internal::ClientBase::SendOneWay(
      _request.GetOutgoingMessage());
}

std::optional<::fidl::UnbindInfo> fidl::internal::
    WireClientImpl<::fidl_test_service::SecondProtocol>::DispatchEvent(
        fidl::IncomingMessage& msg,
        ::fidl::internal::AsyncEventHandler* maybe_event_handler) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

constexpr ::fidl::internal::MethodEntry fidl::internal::WireServerDispatcher<
    ::fidl_test_service::SecondProtocol>::entries_[] = {
    {
        ::fidl_test_service::kSecondProtocol_MethodOnSecond_Ordinal,
        [](void* interface, ::fidl::IncomingMessage&& msg,
           ::fidl::Transaction* txn) {
          auto* primary = reinterpret_cast<::fidl::WireRequest<
              ::fidl_test_service::SecondProtocol::MethodOnSecond>*>(
              msg.bytes());
          ::fidl::internal::WireCompleter<
              ::fidl_test_service::SecondProtocol::MethodOnSecond>::Sync
              completer(txn);
          reinterpret_cast<
              ::fidl::WireServer<::fidl_test_service::SecondProtocol>*>(
              interface)
              ->MethodOnSecond(primary, completer);
          return ZX_OK;
        },
    },
};

const ::fidl::internal::MethodEntry* fidl::internal::WireServerDispatcher<
    ::fidl_test_service::SecondProtocol>::entries_end_ = &entries_[1];

::fidl::DispatchResult fidl::internal::
    WireServerDispatcher<::fidl_test_service::SecondProtocol>::TryDispatch(
        ::fidl::WireServer<::fidl_test_service::SecondProtocol>* impl,
        ::fidl::IncomingMessage& msg, ::fidl::Transaction* txn) {
  return ::fidl::internal::TryDispatch(impl, msg, txn, entries_, entries_end_);
}

void fidl::internal::WireServerDispatcher<::fidl_test_service::SecondProtocol>::
    Dispatch(::fidl::WireServer<::fidl_test_service::SecondProtocol>* impl,
             ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, txn, entries_, entries_end_);
}
void fidl::WireServer<::fidl_test_service::SecondProtocol>::dispatch_message(
    fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  ::fidl::internal::WireServerDispatcher<
      ::fidl_test_service::SecondProtocol>::Dispatch(this, std::move(msg), txn);
}
#endif  // __Fuchsia__

void ::fidl::WireRequest<
    ::fidl_test_service::SecondProtocol::MethodOnSecond>::_InitHeader() {
  fidl_init_txn_header(
      &_hdr, 0, ::fidl_test_service::kSecondProtocol_MethodOnSecond_Ordinal);
}

#ifdef __Fuchsia__

#endif  // __Fuchsia__

namespace fidl_test_service {
[[maybe_unused]] constexpr uint64_t kFirstProtocol_MethodOnFirst_Ordinal =
    6590661047173168036lu;

extern "C" const fidl_type_t
    fidl_test_service_FirstProtocolMethodOnFirstRequestTable;

extern "C" const fidl_type_t
    fidl_test_service_FirstProtocolMethodOnFirstResponseTable;
#ifdef __Fuchsia__
}  // namespace fidl_test_service
::fidl::WireResult<::fidl_test_service::FirstProtocol::MethodOnFirst>::
    WireResult(
        ::fidl::UnownedClientEnd<::fidl_test_service::FirstProtocol> _client) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_service::FirstProtocol::MethodOnFirst>>
      _request(::fidl::internal::AllowUnownedInputRef{});
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Write(_client);
  SetResult(_outgoing);
}
namespace fidl_test_service {
#endif  // __Fuchsia__

}  // namespace fidl_test_service
#ifdef __Fuchsia__

::fidl::Result fidl::internal::WireClientImpl<
    ::fidl_test_service::FirstProtocol>::MethodOnFirst() {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_service::FirstProtocol::MethodOnFirst>>
      _request(::fidl::internal::AllowUnownedInputRef{});
  return ::fidl::internal::ClientBase::SendOneWay(
      _request.GetOutgoingMessage());
}

std::optional<::fidl::UnbindInfo> fidl::internal::
    WireClientImpl<::fidl_test_service::FirstProtocol>::DispatchEvent(
        fidl::IncomingMessage& msg,
        ::fidl::internal::AsyncEventHandler* maybe_event_handler) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

constexpr ::fidl::internal::MethodEntry fidl::internal::WireServerDispatcher<
    ::fidl_test_service::FirstProtocol>::entries_[] = {
    {
        ::fidl_test_service::kFirstProtocol_MethodOnFirst_Ordinal,
        [](void* interface, ::fidl::IncomingMessage&& msg,
           ::fidl::Transaction* txn) {
          auto* primary = reinterpret_cast<::fidl::WireRequest<
              ::fidl_test_service::FirstProtocol::MethodOnFirst>*>(msg.bytes());
          ::fidl::internal::WireCompleter<
              ::fidl_test_service::FirstProtocol::MethodOnFirst>::Sync
              completer(txn);
          reinterpret_cast<
              ::fidl::WireServer<::fidl_test_service::FirstProtocol>*>(
              interface)
              ->MethodOnFirst(primary, completer);
          return ZX_OK;
        },
    },
};

const ::fidl::internal::MethodEntry* fidl::internal::WireServerDispatcher<
    ::fidl_test_service::FirstProtocol>::entries_end_ = &entries_[1];

::fidl::DispatchResult fidl::internal::
    WireServerDispatcher<::fidl_test_service::FirstProtocol>::TryDispatch(
        ::fidl::WireServer<::fidl_test_service::FirstProtocol>* impl,
        ::fidl::IncomingMessage& msg, ::fidl::Transaction* txn) {
  return ::fidl::internal::TryDispatch(impl, msg, txn, entries_, entries_end_);
}

void fidl::internal::WireServerDispatcher<::fidl_test_service::FirstProtocol>::
    Dispatch(::fidl::WireServer<::fidl_test_service::FirstProtocol>* impl,
             ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, txn, entries_, entries_end_);
}
void fidl::WireServer<::fidl_test_service::FirstProtocol>::dispatch_message(
    fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  ::fidl::internal::WireServerDispatcher<
      ::fidl_test_service::FirstProtocol>::Dispatch(this, std::move(msg), txn);
}
#endif  // __Fuchsia__

void ::fidl::WireRequest<
    ::fidl_test_service::FirstProtocol::MethodOnFirst>::_InitHeader() {
  fidl_init_txn_header(
      &_hdr, 0, ::fidl_test_service::kFirstProtocol_MethodOnFirst_Ordinal);
}

#ifdef __Fuchsia__

#endif  // __Fuchsia__
