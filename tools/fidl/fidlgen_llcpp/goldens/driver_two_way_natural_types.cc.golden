// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.drivertwoway/cpp/natural_types.h>

#ifdef __Fuchsia__

void ::test_drivertwoway::TwoWayAddTopResponse::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::test_drivertwoway::TwoWayAddTopResponse,
                                 ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::test_drivertwoway::TwoWayAddTopResponse>::Encode(
      &encoder, this, offset);
}

::test_drivertwoway::TwoWayAddTopResponse::TwoWayAddTopResponse(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<uint16_t>(&decoder, 0)}) {}
#endif  // __Fuchsia__

::test_drivertwoway::TwoWayAddTopResponse::Storage_
test_drivertwoway::TwoWayAddTopResponse::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.sum)};
}
#ifdef __Fuchsia__

void ::test_drivertwoway::TwoWayAddRequest::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::test_drivertwoway::TwoWayAddRequest,
                                 ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::test_drivertwoway::TwoWayAddRequest>::Encode(
      &encoder, this, offset);
}

::test_drivertwoway::TwoWayAddRequest::TwoWayAddRequest(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<uint16_t>(&decoder, 0),
                ::fidl::DecodeAs<uint16_t>(&decoder, 2)}) {}
#endif  // __Fuchsia__

::test_drivertwoway::TwoWayAddRequest::Storage_
test_drivertwoway::TwoWayAddRequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.addend1),
                  ::fidl::internal::NaturalClone(storage_.addend2)};
}
