// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.protocollayouts/cpp/wire.h>
namespace fidl {
namespace testing {

template <>
class WireTestBase<::test_protocollayouts::MainProtocol>
    : public ::fidl::WireServer<::test_protocollayouts::MainProtocol> {
 public:
  virtual ~WireTestBase<::test_protocollayouts::MainProtocol>() = default;
  virtual void NotImplemented_(const std::string& name,
                               ::fidl::CompleterBase& completer) = 0;
  virtual void OneWayAnonComposed(
      OneWayAnonComposedRequestView request,
      OneWayAnonComposedCompleter::Sync& _completer) override {
    NotImplemented_("OneWayAnonComposed", _completer);
  }
  virtual void TwoWayAnonComposed(
      TwoWayAnonComposedRequestView request,
      TwoWayAnonComposedCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayAnonComposed", _completer);
  }
  virtual void TwoWayAnonComposedWithError(
      TwoWayAnonComposedWithErrorRequestView request,
      TwoWayAnonComposedWithErrorCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayAnonComposedWithError", _completer);
  }
  virtual void OneWayNamedComposed(
      OneWayNamedComposedRequestView request,
      OneWayNamedComposedCompleter::Sync& _completer) override {
    NotImplemented_("OneWayNamedComposed", _completer);
  }
  virtual void TwoWayNamedComposed(
      TwoWayNamedComposedRequestView request,
      TwoWayNamedComposedCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayNamedComposed", _completer);
  }
  virtual void TwoWayNamedComposedWithError(
      TwoWayNamedComposedWithErrorRequestView request,
      TwoWayNamedComposedWithErrorCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayNamedComposedWithError", _completer);
  }
  virtual void OneWayImport(OneWayImportRequestView request,
                            OneWayImportCompleter::Sync& _completer) override {
    NotImplemented_("OneWayImport", _completer);
  }
  virtual void TwoWayImport(TwoWayImportRequestView request,
                            TwoWayImportCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayImport", _completer);
  }
  virtual void TwoWayImportWithError(
      TwoWayImportWithErrorRequestView request,
      TwoWayImportWithErrorCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayImportWithError", _completer);
  }
  virtual void OneWayLocal(OneWayLocalRequestView request,
                           OneWayLocalCompleter::Sync& _completer) override {
    NotImplemented_("OneWayLocal", _completer);
  }
  virtual void TwoWayLocal(TwoWayLocalRequestView request,
                           TwoWayLocalCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayLocal", _completer);
  }
  virtual void TwoWayLocalWithError(
      TwoWayLocalWithErrorRequestView request,
      TwoWayLocalWithErrorCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayLocalWithError", _completer);
  }
  virtual void OneWayAnon(OneWayAnonRequestView request,
                          OneWayAnonCompleter::Sync& _completer) override {
    NotImplemented_("OneWayAnon", _completer);
  }
  virtual void TwoWayAnon(TwoWayAnonRequestView request,
                          TwoWayAnonCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayAnon", _completer);
  }
  virtual void TwoWayAnonWithError(
      TwoWayAnonWithErrorRequestView request,
      TwoWayAnonWithErrorCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayAnonWithError", _completer);
  }
};

template <>
class ::fidl::testing::WireSyncEventHandlerTestBase<
    ::test_protocollayouts::MainProtocol>
    : public ::fidl::WireSyncEventHandler<
          ::test_protocollayouts::MainProtocol> {
 public:
  virtual ~WireSyncEventHandlerTestBase<
      ::test_protocollayouts::MainProtocol>() = default;
  virtual void NotImplemented_(const std::string& name) = 0;
  virtual void OnAnonComposed(
      ::fidl::WireEvent<::test_protocollayouts::MainProtocol::OnAnonComposed>*
          event) override {
    NotImplemented_("OnAnonComposed");
  }
  virtual void OnAnonComposedWithError(
      ::fidl::WireEvent<
          ::test_protocollayouts::MainProtocol::OnAnonComposedWithError>* event)
      override {
    NotImplemented_("OnAnonComposedWithError");
  }
  virtual void OnNamedComposed(
      ::fidl::WireEvent<::test_protocollayouts::MainProtocol::OnNamedComposed>*
          event) override {
    NotImplemented_("OnNamedComposed");
  }
  virtual void OnNamedComposedWithError(
      ::fidl::WireEvent<
          ::test_protocollayouts::MainProtocol::OnNamedComposedWithError>*
          event) override {
    NotImplemented_("OnNamedComposedWithError");
  }
  virtual void OnImport(
      ::fidl::WireEvent<::test_protocollayouts::MainProtocol::OnImport>* event)
      override {
    NotImplemented_("OnImport");
  }
  virtual void OnImportWithError(
      ::fidl::WireEvent<
          ::test_protocollayouts::MainProtocol::OnImportWithError>* event)
      override {
    NotImplemented_("OnImportWithError");
  }
  virtual void OnLocal(
      ::fidl::WireEvent<::test_protocollayouts::MainProtocol::OnLocal>* event)
      override {
    NotImplemented_("OnLocal");
  }
  virtual void OnLocalWithError(
      ::fidl::WireEvent<::test_protocollayouts::MainProtocol::OnLocalWithError>*
          event) override {
    NotImplemented_("OnLocalWithError");
  }
  virtual void OnAnon(
      ::fidl::WireEvent<::test_protocollayouts::MainProtocol::OnAnon>* event)
      override {
    NotImplemented_("OnAnon");
  }
  virtual void OnAnonWithError(
      ::fidl::WireEvent<::test_protocollayouts::MainProtocol::OnAnonWithError>*
          event) override {
    NotImplemented_("OnAnonWithError");
  }
};
}  // namespace testing
}  // namespace fidl
