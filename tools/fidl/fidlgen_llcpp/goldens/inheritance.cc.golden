// WARNING: This file is machine generated by fidlgen.

#include <fidl/test/inheritance/llcpp/fidl.h>

#include <memory>

namespace fidl_test_inheritance {
[[maybe_unused]] constexpr uint64_t ksuper_foo_Ordinal = 4999045011615110827lu;

extern "C" const fidl_type_t fidl_test_inheritance_superfooRequestTable;

extern "C" const fidl_type_t fidl_test_inheritance_superfooResponseTable;
#ifdef __Fuchsia__
}  // namespace fidl_test_inheritance
::fidl::WireResult<::fidl_test_inheritance::super::foo>::WireResult(
    ::fidl::UnownedClientEnd<::fidl_test_inheritance::super> _client,
    const ::fidl::StringView& s) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_inheritance::super::foo>>
      _request(zx_txid_t(0), s);
  _request.GetOutgoingMessage()
      .Call<::fidl::WireResponse<::fidl_test_inheritance::super::foo>>(
          _client, bytes_.data(), bytes_.size());
  status_ = _request.status();
  error_ = _request.error();
}

::fidl::WireResult<::fidl_test_inheritance::super::foo>::WireResult(
    ::fidl::UnownedClientEnd<::fidl_test_inheritance::super> _client,
    const ::fidl::StringView& s, zx_time_t _deadline) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_inheritance::super::foo>>
      _request(zx_txid_t(0), s);
  _request.GetOutgoingMessage()
      .Call<::fidl::WireResponse<::fidl_test_inheritance::super::foo>>(
          _client, bytes_.data(), bytes_.size(), _deadline);
  status_ = _request.status();
  error_ = _request.error();
}
namespace fidl_test_inheritance {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_inheritance
::fidl::WireUnownedResult<::fidl_test_inheritance::super::foo>::
    WireUnownedResult(
        ::fidl::UnownedClientEnd<::fidl_test_inheritance::super> _client,
        uint8_t* _request_bytes, uint32_t _request_byte_capacity,
        const ::fidl::StringView& s, uint8_t* _response_bytes,
        uint32_t _response_byte_capacity)
    : bytes_(_response_bytes) {
  ::fidl::UnownedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_inheritance::super::foo>>
      _request(_request_bytes, _request_byte_capacity, 0, s);
  _request.GetOutgoingMessage()
      .Call<::fidl::WireResponse<::fidl_test_inheritance::super::foo>>(
          _client, _response_bytes, _response_byte_capacity);
  status_ = _request.status();
  error_ = _request.error();
}
namespace fidl_test_inheritance {
#endif  // __Fuchsia__

}  // namespace fidl_test_inheritance
#ifdef __Fuchsia__
::fidl::WireResult<::fidl_test_inheritance::super::foo>
fidl::internal::WireClientImpl<::fidl_test_inheritance::super>::foo_Sync(
    ::fidl::StringView s) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    return ::fidl::WireResult<::fidl_test_inheritance::super::foo>(
        ::fidl::UnownedClientEnd<::fidl_test_inheritance::super>(
            _channel->handle()),
        s);
  }
  return ::fidl::WireResult<::fidl_test_inheritance::super::foo>(
      ::fidl::Result(ZX_ERR_CANCELED, ::fidl::kErrorChannelUnbound));
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::WireUnownedResult<::fidl_test_inheritance::super::foo>
fidl::internal::WireClientImpl<::fidl_test_inheritance::super>::foo_Sync(
    ::fidl::BufferSpan _request_buffer, ::fidl::StringView s,
    ::fidl::BufferSpan _response_buffer) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    return ::fidl::WireUnownedResult<::fidl_test_inheritance::super::foo>(
        ::fidl::UnownedClientEnd<::fidl_test_inheritance::super>(
            _channel->handle()),
        _request_buffer.data, _request_buffer.capacity, s,
        _response_buffer.data, _response_buffer.capacity);
  }
  return ::fidl::WireUnownedResult<::fidl_test_inheritance::super::foo>(
      ::fidl::Result(ZX_ERR_CANCELED, ::fidl::kErrorChannelUnbound));
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl_test_inheritance::super::fooResponseContext::fooResponseContext()
    : ::fidl::internal::ResponseContext(
          ::fidl::WireResponse<::fidl_test_inheritance::super::foo>::Type,
          ::fidl_test_inheritance::ksuper_foo_Ordinal) {}

void ::fidl_test_inheritance::super::fooResponseContext::OnReply(
    uint8_t* reply) {
  OnReply(reinterpret_cast<
          ::fidl::WireResponse<::fidl_test_inheritance::super::foo>*>(reply));
}

::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_inheritance::super>::foo(
    ::fidl::StringView s,
    ::fit::callback<void(
        ::fidl::WireResponse<::fidl_test_inheritance::super::foo>* response)>
        _cb) {
  class ResponseContext final
      : public ::fidl_test_inheritance::super::fooResponseContext {
   public:
    ResponseContext(
        ::fit::callback<void(::fidl::WireResponse<
                             ::fidl_test_inheritance::super::foo>* response)>
            cb)
        : cb_(std::move(cb)) {}

    void OnReply(::fidl::WireResponse<::fidl_test_inheritance::super::foo>*
                     response) override {
      cb_(response);

      delete this;
    }

    void OnError() override { delete this; }

   private:
    ::fit::callback<void(
        ::fidl::WireResponse<::fidl_test_inheritance::super::foo>* response)>
        cb_;
  };

  auto* _context = new ResponseContext(std::move(_cb));
  ::fidl::internal::ClientBase::PrepareAsyncTxn(_context);
  ::fidl::WireRequest<::fidl_test_inheritance::super::foo>::OwnedEncodedMessage
      _request(_context->Txid(), s);
  return _request.GetOutgoingMessage().Write(this, _context);
}

::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_inheritance::super>::foo(
    ::fidl::BufferSpan _request_buffer, ::fidl::StringView s,
    ::fidl_test_inheritance::super::fooResponseContext* _context) {
  ::fidl::internal::ClientBase::PrepareAsyncTxn(_context);

  ::fidl::WireRequest<::fidl_test_inheritance::super::foo>::
      UnownedEncodedMessage _request(
          _request_buffer.data, _request_buffer.capacity, _context->Txid(), s);
  return _request.GetOutgoingMessage().Write(this, _context);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
std::optional<::fidl::UnbindInfo> fidl::internal::WireClientImpl<
    ::fidl_test_inheritance::super>::DispatchEvent(fidl_incoming_msg_t* msg) {
  FidlHandleInfoCloseMany(msg->handles, msg->num_handles);
  return ::fidl::UnbindInfo{::fidl::UnbindInfo::kUnexpectedMessage,
                            ZX_ERR_NOT_SUPPORTED};
}
#endif  // __Fuchsia__

namespace fidl_test_inheritance {
#ifdef __Fuchsia__
namespace methods {

void superDispatchfoo(void* interface, void* bytes, ::fidl::Transaction* txn) {
  auto message = reinterpret_cast<
      ::fidl::WireRequest<::fidl_test_inheritance::super::foo>*>(bytes);
  ::fidl::WireInterface<::fidl_test_inheritance::super>::fooCompleter::Sync
      completer(txn);
  reinterpret_cast<::fidl_test_inheritance::super::Interface*>(interface)->foo(
      std::move(message->s), completer);
}

}  // namespace methods

namespace entries {

::fidl::internal::MethodEntry super[] = {
    {::fidl_test_inheritance::ksuper_foo_Ordinal,
     ::fidl::WireRequest<::fidl_test_inheritance::super::foo>::Type,
     methods::superDispatchfoo},
};

}  // namespace entries

::fidl::DispatchResult super::TryDispatch(Interface* impl,
                                          fidl_incoming_msg_t* msg,
                                          ::fidl::Transaction* txn) {
  return ::fidl::internal::TryDispatch(
      impl, msg, txn, entries::super,
      entries::super +
          sizeof(entries::super) / sizeof(::fidl::internal::MethodEntry));
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::DispatchResult super::Dispatch(Interface* impl,
                                       fidl_incoming_msg_t* msg,
                                       ::fidl::Transaction* txn) {
  ::fidl::DispatchResult dispatch_result = TryDispatch(impl, msg, txn);
  if (dispatch_result == ::fidl::DispatchResult::kNotFound) {
    FidlHandleInfoCloseMany(msg->handles, msg->num_handles);
    txn->InternalError(
        {::fidl::UnbindInfo::kUnexpectedMessage, ZX_ERR_NOT_SUPPORTED});
  }
  return dispatch_result;
}
}  // namespace fidl_test_inheritance
::fidl::DispatchResult
fidl::WireInterface<::fidl_test_inheritance::super>::dispatch_message(
    fidl_incoming_msg_t* msg, ::fidl::Transaction* txn) {
  return ::fidl_test_inheritance::super::Dispatch(this, msg, txn);
}
namespace fidl_test_inheritance {
#endif  // __Fuchsia__

}  // namespace fidl_test_inheritance
#ifdef __Fuchsia__
::fidl::Result fidl::WireInterface<
    ::fidl_test_inheritance::super>::fooCompleterBase::Reply(int64_t y) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireResponse<::fidl_test_inheritance::super::foo>>
      _response{y};
  return ::fidl::WireInterface<::fidl_test_inheritance::super>::
      fooCompleterBase::SendReply(&_response.GetOutgoingMessage());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result
fidl::WireInterface<::fidl_test_inheritance::super>::fooCompleterBase::Reply(
    ::fidl::BufferSpan _buffer, int64_t y) {
  ::fidl::WireResponse<::fidl_test_inheritance::super::foo>::
      UnownedEncodedMessage _response(_buffer.data, _buffer.capacity, y);
  return CompleterBase::SendReply(&_response.GetOutgoingMessage());
}
#endif  // __Fuchsia__

void ::fidl::WireRequest<::fidl_test_inheritance::super::foo>::_InitHeader(
    zx_txid_t _txid) {
  fidl_init_txn_header(&_hdr, _txid,
                       ::fidl_test_inheritance::ksuper_foo_Ordinal);
}

void ::fidl::WireResponse<::fidl_test_inheritance::super::foo>::_InitHeader() {
  fidl_init_txn_header(&_hdr, 0, ::fidl_test_inheritance::ksuper_foo_Ordinal);
}

#ifdef __Fuchsia__

#endif  // __Fuchsia__

namespace fidl_test_inheritance {
[[maybe_unused]] constexpr uint64_t ksub_foo_Ordinal = 4999045011615110827lu;

extern "C" const fidl_type_t fidl_test_inheritance_subfooRequestTable;

extern "C" const fidl_type_t fidl_test_inheritance_subfooResponseTable;
#ifdef __Fuchsia__
}  // namespace fidl_test_inheritance
::fidl::WireResult<::fidl_test_inheritance::sub::foo>::WireResult(
    ::fidl::UnownedClientEnd<::fidl_test_inheritance::sub> _client,
    const ::fidl::StringView& s) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_inheritance::sub::foo>>
      _request(zx_txid_t(0), s);
  _request.GetOutgoingMessage()
      .Call<::fidl::WireResponse<::fidl_test_inheritance::sub::foo>>(
          _client, bytes_.data(), bytes_.size());
  status_ = _request.status();
  error_ = _request.error();
}

::fidl::WireResult<::fidl_test_inheritance::sub::foo>::WireResult(
    ::fidl::UnownedClientEnd<::fidl_test_inheritance::sub> _client,
    const ::fidl::StringView& s, zx_time_t _deadline) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_inheritance::sub::foo>>
      _request(zx_txid_t(0), s);
  _request.GetOutgoingMessage()
      .Call<::fidl::WireResponse<::fidl_test_inheritance::sub::foo>>(
          _client, bytes_.data(), bytes_.size(), _deadline);
  status_ = _request.status();
  error_ = _request.error();
}
namespace fidl_test_inheritance {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_inheritance
::fidl::WireUnownedResult<::fidl_test_inheritance::sub::foo>::WireUnownedResult(
    ::fidl::UnownedClientEnd<::fidl_test_inheritance::sub> _client,
    uint8_t* _request_bytes, uint32_t _request_byte_capacity,
    const ::fidl::StringView& s, uint8_t* _response_bytes,
    uint32_t _response_byte_capacity)
    : bytes_(_response_bytes) {
  ::fidl::UnownedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_inheritance::sub::foo>>
      _request(_request_bytes, _request_byte_capacity, 0, s);
  _request.GetOutgoingMessage()
      .Call<::fidl::WireResponse<::fidl_test_inheritance::sub::foo>>(
          _client, _response_bytes, _response_byte_capacity);
  status_ = _request.status();
  error_ = _request.error();
}
namespace fidl_test_inheritance {
#endif  // __Fuchsia__

}  // namespace fidl_test_inheritance
#ifdef __Fuchsia__
::fidl::WireResult<::fidl_test_inheritance::sub::foo>
fidl::internal::WireClientImpl<::fidl_test_inheritance::sub>::foo_Sync(
    ::fidl::StringView s) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    return ::fidl::WireResult<::fidl_test_inheritance::sub::foo>(
        ::fidl::UnownedClientEnd<::fidl_test_inheritance::sub>(
            _channel->handle()),
        s);
  }
  return ::fidl::WireResult<::fidl_test_inheritance::sub::foo>(
      ::fidl::Result(ZX_ERR_CANCELED, ::fidl::kErrorChannelUnbound));
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::WireUnownedResult<::fidl_test_inheritance::sub::foo>
fidl::internal::WireClientImpl<::fidl_test_inheritance::sub>::foo_Sync(
    ::fidl::BufferSpan _request_buffer, ::fidl::StringView s,
    ::fidl::BufferSpan _response_buffer) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannel()) {
    return ::fidl::WireUnownedResult<::fidl_test_inheritance::sub::foo>(
        ::fidl::UnownedClientEnd<::fidl_test_inheritance::sub>(
            _channel->handle()),
        _request_buffer.data, _request_buffer.capacity, s,
        _response_buffer.data, _response_buffer.capacity);
  }
  return ::fidl::WireUnownedResult<::fidl_test_inheritance::sub::foo>(
      ::fidl::Result(ZX_ERR_CANCELED, ::fidl::kErrorChannelUnbound));
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl_test_inheritance::sub::fooResponseContext::fooResponseContext()
    : ::fidl::internal::ResponseContext(
          ::fidl::WireResponse<::fidl_test_inheritance::sub::foo>::Type,
          ::fidl_test_inheritance::ksub_foo_Ordinal) {}

void ::fidl_test_inheritance::sub::fooResponseContext::OnReply(uint8_t* reply) {
  OnReply(reinterpret_cast<
          ::fidl::WireResponse<::fidl_test_inheritance::sub::foo>*>(reply));
}

::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_inheritance::sub>::foo(
    ::fidl::StringView s,
    ::fit::callback<
        void(::fidl::WireResponse<::fidl_test_inheritance::sub::foo>* response)>
        _cb) {
  class ResponseContext final
      : public ::fidl_test_inheritance::sub::fooResponseContext {
   public:
    ResponseContext(
        ::fit::callback<void(
            ::fidl::WireResponse<::fidl_test_inheritance::sub::foo>* response)>
            cb)
        : cb_(std::move(cb)) {}

    void OnReply(::fidl::WireResponse<::fidl_test_inheritance::sub::foo>*
                     response) override {
      cb_(response);

      delete this;
    }

    void OnError() override { delete this; }

   private:
    ::fit::callback<void(
        ::fidl::WireResponse<::fidl_test_inheritance::sub::foo>* response)>
        cb_;
  };

  auto* _context = new ResponseContext(std::move(_cb));
  ::fidl::internal::ClientBase::PrepareAsyncTxn(_context);
  ::fidl::WireRequest<::fidl_test_inheritance::sub::foo>::OwnedEncodedMessage
      _request(_context->Txid(), s);
  return _request.GetOutgoingMessage().Write(this, _context);
}

::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_inheritance::sub>::foo(
    ::fidl::BufferSpan _request_buffer, ::fidl::StringView s,
    ::fidl_test_inheritance::sub::fooResponseContext* _context) {
  ::fidl::internal::ClientBase::PrepareAsyncTxn(_context);

  ::fidl::WireRequest<::fidl_test_inheritance::sub::foo>::UnownedEncodedMessage
      _request(_request_buffer.data, _request_buffer.capacity, _context->Txid(),
               s);
  return _request.GetOutgoingMessage().Write(this, _context);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
std::optional<::fidl::UnbindInfo> fidl::internal::WireClientImpl<
    ::fidl_test_inheritance::sub>::DispatchEvent(fidl_incoming_msg_t* msg) {
  FidlHandleInfoCloseMany(msg->handles, msg->num_handles);
  return ::fidl::UnbindInfo{::fidl::UnbindInfo::kUnexpectedMessage,
                            ZX_ERR_NOT_SUPPORTED};
}
#endif  // __Fuchsia__

namespace fidl_test_inheritance {
#ifdef __Fuchsia__
namespace methods {

void subDispatchfoo(void* interface, void* bytes, ::fidl::Transaction* txn) {
  auto message =
      reinterpret_cast<::fidl::WireRequest<::fidl_test_inheritance::sub::foo>*>(
          bytes);
  ::fidl::WireInterface<::fidl_test_inheritance::sub>::fooCompleter::Sync
      completer(txn);
  reinterpret_cast<::fidl_test_inheritance::sub::Interface*>(interface)->foo(
      std::move(message->s), completer);
}

}  // namespace methods

namespace entries {

::fidl::internal::MethodEntry sub[] = {
    {::fidl_test_inheritance::ksub_foo_Ordinal,
     ::fidl::WireRequest<::fidl_test_inheritance::sub::foo>::Type,
     methods::subDispatchfoo},
};

}  // namespace entries

::fidl::DispatchResult sub::TryDispatch(Interface* impl,
                                        fidl_incoming_msg_t* msg,
                                        ::fidl::Transaction* txn) {
  return ::fidl::internal::TryDispatch(
      impl, msg, txn, entries::sub,
      entries::sub +
          sizeof(entries::sub) / sizeof(::fidl::internal::MethodEntry));
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::DispatchResult sub::Dispatch(Interface* impl, fidl_incoming_msg_t* msg,
                                     ::fidl::Transaction* txn) {
  ::fidl::DispatchResult dispatch_result = TryDispatch(impl, msg, txn);
  if (dispatch_result == ::fidl::DispatchResult::kNotFound) {
    FidlHandleInfoCloseMany(msg->handles, msg->num_handles);
    txn->InternalError(
        {::fidl::UnbindInfo::kUnexpectedMessage, ZX_ERR_NOT_SUPPORTED});
  }
  return dispatch_result;
}
}  // namespace fidl_test_inheritance
::fidl::DispatchResult
fidl::WireInterface<::fidl_test_inheritance::sub>::dispatch_message(
    fidl_incoming_msg_t* msg, ::fidl::Transaction* txn) {
  return ::fidl_test_inheritance::sub::Dispatch(this, msg, txn);
}
namespace fidl_test_inheritance {
#endif  // __Fuchsia__

}  // namespace fidl_test_inheritance
#ifdef __Fuchsia__
::fidl::Result fidl::WireInterface<
    ::fidl_test_inheritance::sub>::fooCompleterBase::Reply(int64_t y) {
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireResponse<::fidl_test_inheritance::sub::foo>>
      _response{y};
  return ::fidl::WireInterface<::fidl_test_inheritance::sub>::fooCompleterBase::
      SendReply(&_response.GetOutgoingMessage());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result
fidl::WireInterface<::fidl_test_inheritance::sub>::fooCompleterBase::Reply(
    ::fidl::BufferSpan _buffer, int64_t y) {
  ::fidl::WireResponse<::fidl_test_inheritance::sub::foo>::UnownedEncodedMessage
      _response(_buffer.data, _buffer.capacity, y);
  return CompleterBase::SendReply(&_response.GetOutgoingMessage());
}
#endif  // __Fuchsia__

void ::fidl::WireRequest<::fidl_test_inheritance::sub::foo>::_InitHeader(
    zx_txid_t _txid) {
  fidl_init_txn_header(&_hdr, _txid, ::fidl_test_inheritance::ksub_foo_Ordinal);
}

void ::fidl::WireResponse<::fidl_test_inheritance::sub::foo>::_InitHeader() {
  fidl_init_txn_header(&_hdr, 0, ::fidl_test_inheritance::ksub_foo_Ordinal);
}

#ifdef __Fuchsia__

#endif  // __Fuchsia__
