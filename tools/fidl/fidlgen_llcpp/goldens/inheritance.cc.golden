// WARNING: This file is machine generated by fidlgen.

#include <fidl/test/inheritance/llcpp/fidl.h>

#include <memory>

namespace fidl_test_inheritance {
[[maybe_unused]] constexpr uint64_t ksuper_foo_Ordinal = 4999045011615110827lu;

extern "C" const fidl_type_t fidl_test_inheritance_superfooRequestTable;

extern "C" const fidl_type_t fidl_test_inheritance_superfooResponseTable;
#ifdef __Fuchsia__
}  // namespace fidl_test_inheritance
::fidl::WireResult<::fidl_test_inheritance::Super::Foo>::WireResult(
    ::fidl::UnownedClientEnd<::fidl_test_inheritance::Super> _client,
    ::fidl::StringView s) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_inheritance::Super::Foo>>
      _request(::fidl::internal::AllowUnownedInputRef{}, s);
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<::fidl::WireResponse<::fidl_test_inheritance::Super::Foo>>(
      _client, bytes_.data(), bytes_.size());
  SetResult(_outgoing);
}

::fidl::WireResult<::fidl_test_inheritance::Super::Foo>::WireResult(
    ::fidl::UnownedClientEnd<::fidl_test_inheritance::Super> _client,
    ::fidl::StringView s, zx_time_t _deadline) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_inheritance::Super::Foo>>
      _request(::fidl::internal::AllowUnownedInputRef{}, s);
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<::fidl::WireResponse<::fidl_test_inheritance::Super::Foo>>(
      _client, bytes_.data(), bytes_.size(), _deadline);
  SetResult(_outgoing);
}
namespace fidl_test_inheritance {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_inheritance
::fidl::WireUnownedResult<::fidl_test_inheritance::Super::Foo>::
    WireUnownedResult(
        ::fidl::UnownedClientEnd<::fidl_test_inheritance::Super> _client,
        uint8_t* _request_bytes, uint32_t _request_byte_capacity,
        ::fidl::StringView s, uint8_t* _response_bytes,
        uint32_t _response_byte_capacity)
    : bytes_(_response_bytes) {
  ::fidl::UnownedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_inheritance::Super::Foo>>
      _request(_request_bytes, _request_byte_capacity, s);
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<::fidl::WireResponse<::fidl_test_inheritance::Super::Foo>>(
      _client, _response_bytes, _response_byte_capacity);
  ::fidl::Result::operator=(_outgoing);
}
namespace fidl_test_inheritance {
#endif  // __Fuchsia__

}  // namespace fidl_test_inheritance
#ifdef __Fuchsia__
::fidl::WireResult<::fidl_test_inheritance::Super::Foo>
fidl::internal::WireClientImpl<::fidl_test_inheritance::Super>::Foo_Sync(
    ::fidl::StringView s) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannelForSyncCall()) {
    return ::fidl::WireResult<::fidl_test_inheritance::Super::Foo>(
        ::fidl::UnownedClientEnd<::fidl_test_inheritance::Super>(
            _channel->handle()),
        s);
  }
  return ::fidl::WireResult<::fidl_test_inheritance::Super::Foo>(
      ::fidl::Result::Unbound());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::WireUnownedResult<::fidl_test_inheritance::Super::Foo>
fidl::internal::WireClientImpl<::fidl_test_inheritance::Super>::Foo_Sync(
    ::fidl::BufferSpan _request_buffer, ::fidl::StringView s,
    ::fidl::BufferSpan _response_buffer) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannelForSyncCall()) {
    return ::fidl::WireUnownedResult<::fidl_test_inheritance::Super::Foo>(
        ::fidl::UnownedClientEnd<::fidl_test_inheritance::Super>(
            _channel->handle()),
        _request_buffer.data, _request_buffer.capacity, s,
        _response_buffer.data, _response_buffer.capacity);
  }
  return ::fidl::WireUnownedResult<::fidl_test_inheritance::Super::Foo>(
      ::fidl::Result::Unbound());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::WireResponseContext<
    ::fidl_test_inheritance::Super::Foo>::WireResponseContext()
    : ::fidl::internal::ResponseContext(
          ::fidl_test_inheritance::ksuper_foo_Ordinal) {}

::cpp17::optional<::fidl::UnbindInfo>
fidl::WireResponseContext<::fidl_test_inheritance::Super::Foo>::OnRawResult(
    ::fidl::IncomingMessage&& msg) {
  if (unlikely(!msg.ok())) {
    OnResult(::fidl::WireUnownedResult<::fidl_test_inheritance::Super::Foo>(
        msg.error()));
    return cpp17::nullopt;
  }
  ::fidl::DecodedMessage<
      ::fidl::WireResponse<::fidl_test_inheritance::Super::Foo>>
      decoded{std::move(msg)};
  ::fidl::Result maybe_error = decoded;
  OnResult(::fidl::WireUnownedResult<::fidl_test_inheritance::Super::Foo>(
      std::move(decoded)));
  if (unlikely(!maybe_error.ok())) {
    return ::fidl::UnbindInfo(maybe_error);
  }
  return cpp17::nullopt;
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_inheritance::Super>::Foo(
    ::fidl::StringView s,
    ::fidl::WireClientCallback<::fidl_test_inheritance::Super::Foo> _cb) {
  using Callback = decltype(_cb);
  class ResponseContext final : public ::fidl::WireResponseContext<
                                    ::fidl_test_inheritance::Super::Foo> {
   public:
    ResponseContext(Callback cb) : cb_(std::move(cb)) {}

    void OnResult(
        ::fidl::WireUnownedResult<::fidl_test_inheritance::Super::Foo>&& result)
        override {
      cb_(std::move(result));
      delete this;
    }

   private:
    Callback cb_;
  };

  auto* _context = new ResponseContext(std::move(_cb));
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::WireRequest<::fidl_test_inheritance::Super::Foo>::OwnedEncodedMessage
      _request(::fidl::internal::AllowUnownedInputRef{}, s);
  return _request.GetOutgoingMessage().Write(this, _context);
}

::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_inheritance::Super>::Foo(
    ::fidl::StringView s,
    ::fit::callback<void(
        ::fidl::WireResponse<::fidl_test_inheritance::Super::Foo>* response)>
        _cb) {
  using Callback = decltype(_cb);
  class ResponseContext final : public ::fidl::WireResponseContext<
                                    ::fidl_test_inheritance::Super::Foo> {
   public:
    ResponseContext(Callback cb) : cb_(std::move(cb)) {}

    void OnResult(
        ::fidl::WireUnownedResult<::fidl_test_inheritance::Super::Foo>&& result)
        override {
      if (result.ok()) {
        ::fidl::WireResponse<::fidl_test_inheritance::Super::Foo>* response =
            result.Unwrap();
        cb_(std::move(response));
      }
      delete this;
    }

   private:
    Callback cb_;
  };

  auto* _context = new ResponseContext(std::move(_cb));
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::WireRequest<::fidl_test_inheritance::Super::Foo>::OwnedEncodedMessage
      _request(::fidl::internal::AllowUnownedInputRef{}, s);
  return _request.GetOutgoingMessage().Write(this, _context);
}

::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_inheritance::Super>::Foo(
    ::fidl::BufferSpan _request_buffer, ::fidl::StringView s,
    ::fidl::WireResponseContext<::fidl_test_inheritance::Super::Foo>*
        _context) {
  ::fidl::WireRequest<::fidl_test_inheritance::Super::Foo>::
      UnownedEncodedMessage _request(_request_buffer.data,
                                     _request_buffer.capacity, s);
  return _request.GetOutgoingMessage().Write(this, _context);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
std::optional<::fidl::UnbindInfo>
fidl::internal::WireClientImpl<::fidl_test_inheritance::Super>::DispatchEvent(
    fidl::IncomingMessage& msg,
    ::fidl::internal::AsyncEventHandler* maybe_event_handler) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::DispatchResult fidl::internal::
    WireServerDispatcher<::fidl_test_inheritance::Super>::TryDispatch(
        ::fidl::WireServer<::fidl_test_inheritance::Super>* impl,
        ::fidl::IncomingMessage& msg, ::fidl::Transaction* txn) {
  static const ::fidl::internal::MethodEntry entries[] = {
      {
          ::fidl_test_inheritance::ksuper_foo_Ordinal,
          [](void* interface, ::fidl::IncomingMessage&& msg,
             ::fidl::Transaction* txn) {
            ::fidl::DecodedMessage<
                ::fidl::WireRequest<::fidl_test_inheritance::Super::Foo>>
                decoded{std::move(msg)};
            if (unlikely(!decoded.ok())) {
              return decoded.status();
            }
            auto* primary = decoded.PrimaryObject();
            ::fidl::internal::WireCompleter<
                ::fidl_test_inheritance::Super::Foo>::Sync completer(txn);
            reinterpret_cast<
                ::fidl::WireServer<::fidl_test_inheritance::Super>*>(interface)
                ->Foo(primary, completer);
            return ZX_OK;
          },
      },
  };
  return ::fidl::internal::TryDispatch(
      impl, msg, txn, entries,
      entries + sizeof(entries) / sizeof(::fidl::internal::MethodEntry));
}

::fidl::DispatchResult
fidl::internal::WireServerDispatcher<::fidl_test_inheritance::Super>::Dispatch(
    ::fidl::WireServer<::fidl_test_inheritance::Super>* impl,
    ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  ::fidl::DispatchResult dispatch_result = TryDispatch(impl, msg, txn);
  if (unlikely(dispatch_result == ::fidl::DispatchResult::kNotFound)) {
    std::move(msg).CloseHandles();
    txn->InternalError(::fidl::UnbindInfo::UnknownOrdinal());
  }
  return dispatch_result;
}
::fidl::DispatchResult
fidl::WireServer<::fidl_test_inheritance::Super>::dispatch_message(
    fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  return ::fidl::internal::WireServerDispatcher<
      ::fidl_test_inheritance::Super>::Dispatch(this, std::move(msg), txn);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::WireCompleterBase<
    ::fidl_test_inheritance::Super::Foo>::Reply(int64_t y) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireResponse<::fidl_test_inheritance::Super::Foo>>
      _response{::fidl::internal::AllowUnownedInputRef{}, y};
  return ::fidl::internal::
      WireCompleterBase<::fidl_test_inheritance::Super::Foo>::SendReply(
          &_response.GetOutgoingMessage());
}

::fidl::Result
fidl::internal::WireCompleterBase<::fidl_test_inheritance::Super::Foo>::Reply(
    ::fidl::BufferSpan _buffer, int64_t y) {
  ::fidl::WireResponse<::fidl_test_inheritance::Super::Foo>::
      UnownedEncodedMessage _response(_buffer.data, _buffer.capacity, y);
  return CompleterBase::SendReply(&_response.GetOutgoingMessage());
}
#endif  // __Fuchsia__

void ::fidl::WireRequest<::fidl_test_inheritance::Super::Foo>::_InitHeader() {
  fidl_init_txn_header(&_hdr, 0, ::fidl_test_inheritance::ksuper_foo_Ordinal);
}

void ::fidl::WireResponse<::fidl_test_inheritance::Super::Foo>::_InitHeader() {
  fidl_init_txn_header(&_hdr, 0, ::fidl_test_inheritance::ksuper_foo_Ordinal);
}

#ifdef __Fuchsia__

#endif  // __Fuchsia__

namespace fidl_test_inheritance {
[[maybe_unused]] constexpr uint64_t ksub_foo_Ordinal = 4999045011615110827lu;

extern "C" const fidl_type_t fidl_test_inheritance_subfooRequestTable;

extern "C" const fidl_type_t fidl_test_inheritance_subfooResponseTable;
#ifdef __Fuchsia__
}  // namespace fidl_test_inheritance
::fidl::WireResult<::fidl_test_inheritance::Sub::Foo>::WireResult(
    ::fidl::UnownedClientEnd<::fidl_test_inheritance::Sub> _client,
    ::fidl::StringView s) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_inheritance::Sub::Foo>>
      _request(::fidl::internal::AllowUnownedInputRef{}, s);
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<::fidl::WireResponse<::fidl_test_inheritance::Sub::Foo>>(
      _client, bytes_.data(), bytes_.size());
  SetResult(_outgoing);
}

::fidl::WireResult<::fidl_test_inheritance::Sub::Foo>::WireResult(
    ::fidl::UnownedClientEnd<::fidl_test_inheritance::Sub> _client,
    ::fidl::StringView s, zx_time_t _deadline) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_inheritance::Sub::Foo>>
      _request(::fidl::internal::AllowUnownedInputRef{}, s);
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<::fidl::WireResponse<::fidl_test_inheritance::Sub::Foo>>(
      _client, bytes_.data(), bytes_.size(), _deadline);
  SetResult(_outgoing);
}
namespace fidl_test_inheritance {
#endif  // __Fuchsia__

#ifdef __Fuchsia__
}  // namespace fidl_test_inheritance
::fidl::WireUnownedResult<::fidl_test_inheritance::Sub::Foo>::WireUnownedResult(
    ::fidl::UnownedClientEnd<::fidl_test_inheritance::Sub> _client,
    uint8_t* _request_bytes, uint32_t _request_byte_capacity,
    ::fidl::StringView s, uint8_t* _response_bytes,
    uint32_t _response_byte_capacity)
    : bytes_(_response_bytes) {
  ::fidl::UnownedEncodedMessage<
      ::fidl::WireRequest<::fidl_test_inheritance::Sub::Foo>>
      _request(_request_bytes, _request_byte_capacity, s);
  auto& _outgoing = _request.GetOutgoingMessage();
  _outgoing.Call<::fidl::WireResponse<::fidl_test_inheritance::Sub::Foo>>(
      _client, _response_bytes, _response_byte_capacity);
  ::fidl::Result::operator=(_outgoing);
}
namespace fidl_test_inheritance {
#endif  // __Fuchsia__

}  // namespace fidl_test_inheritance
#ifdef __Fuchsia__
::fidl::WireResult<::fidl_test_inheritance::Sub::Foo>
fidl::internal::WireClientImpl<::fidl_test_inheritance::Sub>::Foo_Sync(
    ::fidl::StringView s) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannelForSyncCall()) {
    return ::fidl::WireResult<::fidl_test_inheritance::Sub::Foo>(
        ::fidl::UnownedClientEnd<::fidl_test_inheritance::Sub>(
            _channel->handle()),
        s);
  }
  return ::fidl::WireResult<::fidl_test_inheritance::Sub::Foo>(
      ::fidl::Result::Unbound());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::WireUnownedResult<::fidl_test_inheritance::Sub::Foo>
fidl::internal::WireClientImpl<::fidl_test_inheritance::Sub>::Foo_Sync(
    ::fidl::BufferSpan _request_buffer, ::fidl::StringView s,
    ::fidl::BufferSpan _response_buffer) {
  if (auto _channel = ::fidl::internal::ClientBase::GetChannelForSyncCall()) {
    return ::fidl::WireUnownedResult<::fidl_test_inheritance::Sub::Foo>(
        ::fidl::UnownedClientEnd<::fidl_test_inheritance::Sub>(
            _channel->handle()),
        _request_buffer.data, _request_buffer.capacity, s,
        _response_buffer.data, _response_buffer.capacity);
  }
  return ::fidl::WireUnownedResult<::fidl_test_inheritance::Sub::Foo>(
      ::fidl::Result::Unbound());
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::WireResponseContext<
    ::fidl_test_inheritance::Sub::Foo>::WireResponseContext()
    : ::fidl::internal::ResponseContext(
          ::fidl_test_inheritance::ksub_foo_Ordinal) {}

::cpp17::optional<::fidl::UnbindInfo>
fidl::WireResponseContext<::fidl_test_inheritance::Sub::Foo>::OnRawResult(
    ::fidl::IncomingMessage&& msg) {
  if (unlikely(!msg.ok())) {
    OnResult(::fidl::WireUnownedResult<::fidl_test_inheritance::Sub::Foo>(
        msg.error()));
    return cpp17::nullopt;
  }
  ::fidl::DecodedMessage<
      ::fidl::WireResponse<::fidl_test_inheritance::Sub::Foo>>
      decoded{std::move(msg)};
  ::fidl::Result maybe_error = decoded;
  OnResult(::fidl::WireUnownedResult<::fidl_test_inheritance::Sub::Foo>(
      std::move(decoded)));
  if (unlikely(!maybe_error.ok())) {
    return ::fidl::UnbindInfo(maybe_error);
  }
  return cpp17::nullopt;
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_inheritance::Sub>::Foo(
    ::fidl::StringView s,
    ::fidl::WireClientCallback<::fidl_test_inheritance::Sub::Foo> _cb) {
  using Callback = decltype(_cb);
  class ResponseContext final
      : public ::fidl::WireResponseContext<::fidl_test_inheritance::Sub::Foo> {
   public:
    ResponseContext(Callback cb) : cb_(std::move(cb)) {}

    void OnResult(::fidl::WireUnownedResult<::fidl_test_inheritance::Sub::Foo>&&
                      result) override {
      cb_(std::move(result));
      delete this;
    }

   private:
    Callback cb_;
  };

  auto* _context = new ResponseContext(std::move(_cb));
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::WireRequest<::fidl_test_inheritance::Sub::Foo>::OwnedEncodedMessage
      _request(::fidl::internal::AllowUnownedInputRef{}, s);
  return _request.GetOutgoingMessage().Write(this, _context);
}

::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_inheritance::Sub>::Foo(
    ::fidl::StringView s,
    ::fit::callback<
        void(::fidl::WireResponse<::fidl_test_inheritance::Sub::Foo>* response)>
        _cb) {
  using Callback = decltype(_cb);
  class ResponseContext final
      : public ::fidl::WireResponseContext<::fidl_test_inheritance::Sub::Foo> {
   public:
    ResponseContext(Callback cb) : cb_(std::move(cb)) {}

    void OnResult(::fidl::WireUnownedResult<::fidl_test_inheritance::Sub::Foo>&&
                      result) override {
      if (result.ok()) {
        ::fidl::WireResponse<::fidl_test_inheritance::Sub::Foo>* response =
            result.Unwrap();
        cb_(std::move(response));
      }
      delete this;
    }

   private:
    Callback cb_;
  };

  auto* _context = new ResponseContext(std::move(_cb));
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::WireRequest<::fidl_test_inheritance::Sub::Foo>::OwnedEncodedMessage
      _request(::fidl::internal::AllowUnownedInputRef{}, s);
  return _request.GetOutgoingMessage().Write(this, _context);
}

::fidl::Result
fidl::internal::WireClientImpl<::fidl_test_inheritance::Sub>::Foo(
    ::fidl::BufferSpan _request_buffer, ::fidl::StringView s,
    ::fidl::WireResponseContext<::fidl_test_inheritance::Sub::Foo>* _context) {
  ::fidl::WireRequest<::fidl_test_inheritance::Sub::Foo>::UnownedEncodedMessage
      _request(_request_buffer.data, _request_buffer.capacity, s);
  return _request.GetOutgoingMessage().Write(this, _context);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
std::optional<::fidl::UnbindInfo>
fidl::internal::WireClientImpl<::fidl_test_inheritance::Sub>::DispatchEvent(
    fidl::IncomingMessage& msg,
    ::fidl::internal::AsyncEventHandler* maybe_event_handler) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::DispatchResult
fidl::internal::WireServerDispatcher<::fidl_test_inheritance::Sub>::TryDispatch(
    ::fidl::WireServer<::fidl_test_inheritance::Sub>* impl,
    ::fidl::IncomingMessage& msg, ::fidl::Transaction* txn) {
  static const ::fidl::internal::MethodEntry entries[] = {
      {
          ::fidl_test_inheritance::ksub_foo_Ordinal,
          [](void* interface, ::fidl::IncomingMessage&& msg,
             ::fidl::Transaction* txn) {
            ::fidl::DecodedMessage<
                ::fidl::WireRequest<::fidl_test_inheritance::Sub::Foo>>
                decoded{std::move(msg)};
            if (unlikely(!decoded.ok())) {
              return decoded.status();
            }
            auto* primary = decoded.PrimaryObject();
            ::fidl::internal::WireCompleter<
                ::fidl_test_inheritance::Sub::Foo>::Sync completer(txn);
            reinterpret_cast<::fidl::WireServer<::fidl_test_inheritance::Sub>*>(
                interface)
                ->Foo(primary, completer);
            return ZX_OK;
          },
      },
  };
  return ::fidl::internal::TryDispatch(
      impl, msg, txn, entries,
      entries + sizeof(entries) / sizeof(::fidl::internal::MethodEntry));
}

::fidl::DispatchResult
fidl::internal::WireServerDispatcher<::fidl_test_inheritance::Sub>::Dispatch(
    ::fidl::WireServer<::fidl_test_inheritance::Sub>* impl,
    ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  ::fidl::DispatchResult dispatch_result = TryDispatch(impl, msg, txn);
  if (unlikely(dispatch_result == ::fidl::DispatchResult::kNotFound)) {
    std::move(msg).CloseHandles();
    txn->InternalError(::fidl::UnbindInfo::UnknownOrdinal());
  }
  return dispatch_result;
}
::fidl::DispatchResult
fidl::WireServer<::fidl_test_inheritance::Sub>::dispatch_message(
    fidl::IncomingMessage&& msg, ::fidl::Transaction* txn) {
  return ::fidl::internal::WireServerDispatcher<
      ::fidl_test_inheritance::Sub>::Dispatch(this, std::move(msg), txn);
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__
::fidl::Result fidl::internal::WireCompleterBase<
    ::fidl_test_inheritance::Sub::Foo>::Reply(int64_t y) {
  FIDL_INTERNAL_DISABLE_AUTO_VAR_INIT
  ::fidl::OwnedEncodedMessage<
      ::fidl::WireResponse<::fidl_test_inheritance::Sub::Foo>>
      _response{::fidl::internal::AllowUnownedInputRef{}, y};
  return ::fidl::internal::WireCompleterBase<
      ::fidl_test_inheritance::Sub::Foo>::SendReply(&_response
                                                         .GetOutgoingMessage());
}

::fidl::Result
fidl::internal::WireCompleterBase<::fidl_test_inheritance::Sub::Foo>::Reply(
    ::fidl::BufferSpan _buffer, int64_t y) {
  ::fidl::WireResponse<::fidl_test_inheritance::Sub::Foo>::UnownedEncodedMessage
      _response(_buffer.data, _buffer.capacity, y);
  return CompleterBase::SendReply(&_response.GetOutgoingMessage());
}
#endif  // __Fuchsia__

void ::fidl::WireRequest<::fidl_test_inheritance::Sub::Foo>::_InitHeader() {
  fidl_init_txn_header(&_hdr, 0, ::fidl_test_inheritance::ksub_foo_Ordinal);
}

void ::fidl::WireResponse<::fidl_test_inheritance::Sub::Foo>::_InitHeader() {
  fidl_init_txn_header(&_hdr, 0, ::fidl_test_inheritance::ksub_foo_Ordinal);
}

#ifdef __Fuchsia__

#endif  // __Fuchsia__
