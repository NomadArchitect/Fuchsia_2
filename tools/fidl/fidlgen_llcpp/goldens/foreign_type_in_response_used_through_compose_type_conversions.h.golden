// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.foreigntypeinresponseusedthroughcompose/cpp/markers.h>
#include <fidl/test.foreigntypeinresponseusedthroughcompose/cpp/natural_types.h>
#include <fidl/test.foreigntypeinresponseusedthroughcompose/cpp/wire_types.h>
#ifdef __Fuchsia__
#include <fidl/test.foreigntypeinresponseusedthroughcompose/cpp/natural_messaging.h>
#include <fidl/test.foreigntypeinresponseusedthroughcompose/cpp/wire_messaging.h>
#endif  // __Fuchsia__
#include <fidl/test.bottom/cpp/type_conversions.h>
#include <fidl/test.middle/cpp/type_conversions.h>
#include <lib/fidl/cpp/wire_natural_conversions.h>
namespace fidl {
namespace internal {

#ifdef __Fuchsia__

template <>
struct WireNaturalConversionTraits<
    ::fidl::WireRequest<
        ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>,
    ::fidl::Request<
        ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>> {
  static ::fidl::Request<
      ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>
  ToNatural(::fidl::WireRequest<
            ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>
                src);
  static ::fidl::WireRequest<
      ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>
  ToWire(fidl::AnyArena& arena,
         ::fidl::Request<
             ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>
             src);
};

template <>
struct NaturalTypeForWireType<::fidl::WireRequest<
    ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>> {
  using type = ::fidl::Request<
      ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>;
};
template <>
struct WireTypeForNaturalType<::fidl::Request<
    ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>> {
  using type = ::fidl::WireRequest<
      ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>;
};

template <>
struct WireNaturalConversionTraits<
    ::fidl::WireResponse<
        ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>,
    ::fidl::Response<
        ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>> {
  static ::fidl::Response<
      ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>
  ToNatural(::fidl::WireResponse<
            ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>
                src);
  static ::fidl::WireResponse<
      ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>
  ToWire(fidl::AnyArena& arena,
         ::fidl::Response<
             ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>
             src);
};

template <>
struct NaturalTypeForWireType<::fidl::WireResponse<
    ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>> {
  using type = ::fidl::Response<
      ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>;
};
template <>
struct WireTypeForNaturalType<::fidl::Response<
    ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>> {
  using type = ::fidl::WireResponse<
      ::test_foreigntypeinresponseusedthroughcompose::Top::GetFoo>;
};
#endif  // __Fuchsia__
}  // namespace internal
}  // namespace fidl
