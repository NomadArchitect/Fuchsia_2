// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.handles/cpp/common_types.h>

namespace test_handles {
extern "C" const fidl_type_t test_handles_obj_typeTable;
}  // namespace test_handles
size_t fidl::internal::DisplayError<::test_handles::obj_type>::Format(
    const ::test_handles::obj_type& value, char* destination, size_t capacity) {
  const char* name = [&]() -> const char* {
    switch (static_cast<uint32_t>(value)) {
      case 0u:
        return "NONE";
      case 1u:
        return "PROCESS";
      case 2u:
        return "THREAD";
      case 3u:
        return "VMO";
      case 4u:
        return "CHANNEL";
      case 5u:
        return "EVENT";
      case 6u:
        return "PORT";
      case 9u:
        return "INTERRUPT";
      case 12u:
        return "LOG";
      case 14u:
        return "SOCKET";
      case 15u:
        return "RESOURCE";
      case 16u:
        return "EVENTPAIR";
      case 17u:
        return "JOB";
      case 18u:
        return "VMAR";
      case 19u:
        return "FIFO";
      case 20u:
        return "GUEST";
      case 21u:
        return "VCPU";
      case 22u:
        return "TIMER";
      case 23u:
        return "IOMMU";
      case 24u:
        return "BTI";
      case 25u:
        return "PROFILE";
      case 26u:
        return "PMT";
      case 27u:
        return "SUSPEND_TOKEN";
      case 28u:
        return "PAGER";
      case 29u:
        return "EXCEPTION";
      case 30u:
        return "CLOCK";
      case 31u:
        return "STREAM";
      case 32u:
        return "MSI";
      default:
        return nullptr;
    }
  }();
  return ::fidl::internal::FormatApplicationError(
      static_cast<uint32_t>(value), name,
      &::test_handles::test_handles_obj_typeTable, destination, capacity);
}
