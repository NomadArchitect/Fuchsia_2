// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test/union/llcpp/fidl.h>

// For ::fidl::fuzzing::DecoderEncoderImpl.
#include <lib/fidl/cpp/fuzzing/decoder_encoder.h>

namespace fuzzing {

inline constexpr ::std::array<::fidl::fuzzing::DecoderEncoderForType, 10>
    fidl_test_union__decoder_encoders = {
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name =
                "::fidl_test_union::wire::StructWithNullableXUnion",
            .has_flexible_envelope = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl_test_union::wire::StructWithNullableXUnion>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::fidl_test_union::wire::Pizza",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl_test_union::wire::Pizza>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::fidl_test_union::wire::Pasta",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl_test_union::wire::Pasta>,
        },

        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name =
                "::fidl::WireRequest<::fidl_test_union::TestProtocol::"
                "StrictXUnionHenceResponseMayBeStackAllocated>",
            .has_flexible_envelope = false,
            .decoder_encoder =
                ::fidl::fuzzing::DecoderEncoderImpl<::fidl::WireRequest<
                    ::fidl_test_union::TestProtocol::
                        StrictXUnionHenceResponseMayBeStackAllocated>>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name =
                "::fidl::WireResponse<::fidl_test_union::TestProtocol::"
                "StrictXUnionHenceResponseMayBeStackAllocated>",
            .has_flexible_envelope = false,
            .decoder_encoder =
                ::fidl::fuzzing::DecoderEncoderImpl<::fidl::WireResponse<
                    ::fidl_test_union::TestProtocol::
                        StrictXUnionHenceResponseMayBeStackAllocated>>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name =
                "::fidl::WireRequest<::fidl_test_union::TestProtocol::"
                "FlexibleXUnionHenceResponseMustBeHeapAllocated>",
            .has_flexible_envelope = false,
            .decoder_encoder =
                ::fidl::fuzzing::DecoderEncoderImpl<::fidl::WireRequest<
                    ::fidl_test_union::TestProtocol::
                        FlexibleXUnionHenceResponseMustBeHeapAllocated>>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name =
                "::fidl::WireResponse<::fidl_test_union::TestProtocol::"
                "FlexibleXUnionHenceResponseMustBeHeapAllocated>",
            .has_flexible_envelope = true,
            .decoder_encoder =
                ::fidl::fuzzing::DecoderEncoderImpl<::fidl::WireResponse<
                    ::fidl_test_union::TestProtocol::
                        FlexibleXUnionHenceResponseMustBeHeapAllocated>>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::fidl_test_union::wire::NullableUnionStruct",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl_test_union::wire::NullableUnionStruct>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::fidl_test_union::wire::UnionSandwich",
            .has_flexible_envelope = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl_test_union::wire::UnionSandwich>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::fidl_test_union::wire::Empty",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl_test_union::wire::Empty>,
        },
};

}  // namespace fuzzing
