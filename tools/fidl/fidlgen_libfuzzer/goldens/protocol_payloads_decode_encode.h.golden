// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.protocolpayloads/cpp/wire.h>

// For ::fidl::fuzzing::DecoderEncoderImpl.
#include <lib/fidl/cpp/fuzzing/decoder_encoder.h>

namespace fuzzing {

inline constexpr ::std::array<::fidl::fuzzing::DecoderEncoderForType, 14>
    test_protocolpayloads_decoder_encoders = {
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::LocalStructPayload",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::LocalStructPayload>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolTwoWayLocalWithErrorTopResponse",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolTwoWayLocalWithErrorTopResponse>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolOnLocalWithErrorRequest",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolOnLocalWithErrorRequest>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolOneWayAnonRequest",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolOneWayAnonRequest>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolTwoWayAnonRequest",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolTwoWayAnonRequest>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolTwoWayAnonTopResponse",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolTwoWayAnonTopResponse>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolTwoWayAnonWithErrorRequest",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolTwoWayAnonWithErrorRequest>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolTwoWayAnonWithErrorResponse",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolTwoWayAnonWithErrorResponse>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolTwoWayAnonWithErrorTopResponse",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolTwoWayAnonWithErrorTopResponse>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolOnAnonRequest",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolOnAnonRequest>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolOnAnonWithErrorResponse",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolOnAnonWithErrorResponse>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolOnAnonWithErrorRequest",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolOnAnonWithErrorRequest>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolTwoWayImportWithErrorTopResponse",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolTwoWayImportWithErrorTopResponse>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolpayloads::wire::MainProtocolOnImportWithErrorRequest",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolpayloads::wire::MainProtocolOnImportWithErrorRequest>,
        },
};

}  // namespace fuzzing
