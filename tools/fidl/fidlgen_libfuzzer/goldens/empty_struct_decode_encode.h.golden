// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test/emptystruct/llcpp/fidl.h>

// For ::fidl::fuzzing::DecoderEncoderImpl.
#include <lib/fidl/cpp/fuzzing/decoder_encoder.h>

namespace fuzzing {

inline constexpr ::std::array<::fidl::fuzzing::DecoderEncoderForType, 5>
    fidl_test_emptystruct_decoder_encoders = {
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::fidl_test_emptystruct::wire::Empty",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl_test_emptystruct::wire::Empty>,
        },

        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::fidl::WireRequest<::fidl_test_emptystruct::"
                              "EmptyProtocol::Send>",
            .has_flexible_envelope = false,
            .decoder_encoder =
                ::fidl::fuzzing::DecoderEncoderImpl<::fidl::WireRequest<
                    ::fidl_test_emptystruct::EmptyProtocol::Send>>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::fidl::WireResponse<::fidl_test_emptystruct::"
                              "EmptyProtocol::Receive>",
            .has_flexible_envelope = false,
            .decoder_encoder =
                ::fidl::fuzzing::DecoderEncoderImpl<::fidl::WireResponse<
                    ::fidl_test_emptystruct::EmptyProtocol::Receive>>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::fidl::WireRequest<::fidl_test_emptystruct::"
                              "EmptyProtocol::SendAndReceive>",
            .has_flexible_envelope = false,
            .decoder_encoder =
                ::fidl::fuzzing::DecoderEncoderImpl<::fidl::WireRequest<
                    ::fidl_test_emptystruct::EmptyProtocol::SendAndReceive>>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::fidl::WireResponse<::fidl_test_emptystruct::"
                              "EmptyProtocol::SendAndReceive>",
            .has_flexible_envelope = false,
            .decoder_encoder =
                ::fidl::fuzzing::DecoderEncoderImpl<::fidl::WireResponse<
                    ::fidl_test_emptystruct::EmptyProtocol::SendAndReceive>>,
        },
};

}  // namespace fuzzing
