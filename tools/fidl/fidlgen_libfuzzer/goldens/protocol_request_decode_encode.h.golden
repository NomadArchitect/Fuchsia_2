// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.protocolrequest/cpp/wire.h>

// For ::fidl::fuzzing::DecoderEncoderImpl.
#include <lib/fidl/cpp/fuzzing/decoder_encoder.h>

namespace fuzzing {

inline constexpr ::std::array<::fidl::fuzzing::DecoderEncoderForType, 8>
    test_protocolrequest_decoder_encoders = {
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolrequest::wire::ParentGetChildTopResponse",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolrequest::wire::ParentGetChildTopResponse, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_protocolrequest::wire::ParentGetChildTopResponse as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolrequest::wire::ParentGetChildTopResponse, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolrequest::wire::ParentGetChildRequestTopResponse",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolrequest::wire::ParentGetChildRequestTopResponse, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_protocolrequest::wire::ParentGetChildRequestTopResponse as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolrequest::wire::ParentGetChildRequestTopResponse, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolrequest::wire::ParentTakeChildRequest",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolrequest::wire::ParentTakeChildRequest, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_protocolrequest::wire::ParentTakeChildRequest as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolrequest::wire::ParentTakeChildRequest, true>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_protocolrequest::wire::ParentTakeChildRequestRequest",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolrequest::wire::ParentTakeChildRequestRequest, false>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "A transactional message using ::test_protocolrequest::wire::ParentTakeChildRequestRequest as the body",
            .has_flexible_envelope = false,
            .treat_bytes_as_transactional_message = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<::test_protocolrequest::wire::ParentTakeChildRequestRequest, true>,
        },
};

}  // namespace fuzzing
