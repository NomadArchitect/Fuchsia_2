// WARNING: This file is machine generated by fidlgen.

#![allow(
	unused_parens, // one-element-tuple-case is not a tuple
	unused_mut, // not all args require mutation, but many do
	nonstandard_style, // auto-caps does its best, but is not always successful
)]
#![recursion_limit = "512"]

#[cfg(target_os = "fuchsia")]
#[allow(unused_imports)]
use fuchsia_zircon as zx;

#[allow(unused_imports)]
use {
    bitflags::bitflags,
    fidl::{
        client::{decode_transaction_body_fut, QueryResponseFut},
        encoding::{Decodable as _, Encodable as _},
        fidl_empty_struct, fidl_flexible_bits, fidl_flexible_enum, fidl_strict_bits,
        fidl_strict_enum, fidl_struct, fidl_struct_copy, fidl_table, fidl_xunion,
        wrap_handle_metadata,
    },
    fuchsia_zircon_status as zx_status,
    futures::future::{self, MaybeDone, TryFutureExt},
};

bitflags! {
    pub struct MyBits: u32 {
        const MyFirstBit = 1;
        const MyOtherBit = 2;
        const Mask = 4;
    }
}
fidl_strict_bits! {
    name: MyBits,
    prim_ty: u32,
}

bitflags! {
    pub struct StrictBits: u64 {
        const Smallest = 1;
        const Biggest = 9223372036854775808;
    }
}
fidl_strict_bits! {
    name: StrictBits,
    prim_ty: u64,
}

bitflags! {
    pub struct FlexibleBits: u64 {
        const Smallest = 1;
        const Biggest = 9223372036854775808;
    }
}
fidl_flexible_bits! {
    name: FlexibleBits,
    prim_ty: u64,
}
