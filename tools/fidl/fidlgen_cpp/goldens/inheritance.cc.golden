// WARNING: This file is machine generated by fidlgen_cpp.

#include <test/inheritance/cpp/fidl_v2.h>

namespace test_inheritance {
[[maybe_unused]] constexpr inline uint64_t ksuper_foo_Ordinal =
    7540745593380780216lu;

#ifdef __Fuchsia__
}  // namespace test_inheritance
void fidl::internal::NaturalClientImpl<::test_inheritance::Super>::foo(
    ::test_inheritance::SuperFooRequest&& payload,
    ::fidl::ClientCallback<::test_inheritance::Super::Foo>&& _callback) const {
  ::fidl::Encoder _encoder{::test_inheritance::ksuper_foo_Ordinal};
  return messenger().TwoWay(
      &::test_inheritance::test_inheritance_superfooRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_inheritance::Super::Foo>,
          ::fidl::ClientCallback<::test_inheritance::Super::Foo>>(
          ::test_inheritance::ksuper_foo_Ordinal, std::move(_callback)));
}
void fidl::internal::NaturalClientImpl<::test_inheritance::Super>::foo(
    ::test_inheritance::SuperFooRequest&& payload,
    ::fidl::ClientResponseCallback<::test_inheritance::Super::Foo>&& _callback)
    const {
  ::fidl::Encoder _encoder{::test_inheritance::ksuper_foo_Ordinal};
  return messenger().TwoWay(
      &::test_inheritance::test_inheritance_superfooRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_inheritance::Super::Foo>,
          ::fidl::ClientResponseCallback<::test_inheritance::Super::Foo>>(
          ::test_inheritance::ksuper_foo_Ordinal, std::move(_callback)));
}
namespace test_inheritance {
#endif  // __Fuchsia__

}  // namespace test_inheritance
#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo> fidl::internal::
    NaturalEventDispatcher<::test_inheritance::Super>::DispatchEvent(
        ::fidl::IncomingMessage& msg,
        ::fidl::internal::IncomingTransportContext transport_context) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

namespace test_inheritance {
[[maybe_unused]] constexpr inline uint64_t ksub_foo_Ordinal =
    7540745593380780216lu;

#ifdef __Fuchsia__
}  // namespace test_inheritance
void fidl::internal::NaturalClientImpl<::test_inheritance::Sub>::foo(
    ::test_inheritance::SuperFooRequest&& payload,
    ::fidl::ClientCallback<::test_inheritance::Sub::Foo>&& _callback) const {
  ::fidl::Encoder _encoder{::test_inheritance::ksub_foo_Ordinal};
  return messenger().TwoWay(
      &::test_inheritance::test_inheritance_subfooRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_inheritance::Sub::Foo>,
          ::fidl::ClientCallback<::test_inheritance::Sub::Foo>>(
          ::test_inheritance::ksub_foo_Ordinal, std::move(_callback)));
}
void fidl::internal::NaturalClientImpl<::test_inheritance::Sub>::foo(
    ::test_inheritance::SuperFooRequest&& payload,
    ::fidl::ClientResponseCallback<::test_inheritance::Sub::Foo>&& _callback)
    const {
  ::fidl::Encoder _encoder{::test_inheritance::ksub_foo_Ordinal};
  return messenger().TwoWay(
      &::test_inheritance::test_inheritance_subfooRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_inheritance::Sub::Foo>,
          ::fidl::ClientResponseCallback<::test_inheritance::Sub::Foo>>(
          ::test_inheritance::ksub_foo_Ordinal, std::move(_callback)));
}
namespace test_inheritance {
#endif  // __Fuchsia__

}  // namespace test_inheritance
#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo>
fidl::internal::NaturalEventDispatcher<::test_inheritance::Sub>::DispatchEvent(
    ::fidl::IncomingMessage& msg,
    ::fidl::internal::IncomingTransportContext transport_context) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__
