// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <lib/fidl/llcpp/internal/transport.h>
#include <lib/fidl/llcpp/unknown_interactions.h>

namespace test_protocollayouts {

class MainProtocol final {
  MainProtocol() = delete;

 public:
  using Transport = ::fidl::internal::ChannelTransport;

  static constexpr ::fidl::internal::Openness kOpenness = ::fidl::internal::Openness::kClosed;
  class OneWayAnonComposed final {
    OneWayAnonComposed() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = false;
  };
  class TwoWayAnonComposed final {
    TwoWayAnonComposed() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = true;
  };
  class TwoWayAnonComposedWithError final {
    TwoWayAnonComposedWithError() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = true;
  };
  class OnAnonComposed final {
    OnAnonComposed() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = false;
    static constexpr bool kHasResponse = true;
  };
  class OnAnonComposedWithError final {
    OnAnonComposedWithError() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = false;
    static constexpr bool kHasResponse = true;
  };
  class OneWayNamedComposed final {
    OneWayNamedComposed() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = false;
  };
  class TwoWayNamedComposed final {
    TwoWayNamedComposed() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = true;
  };
  class TwoWayNamedComposedWithError final {
    TwoWayNamedComposedWithError() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = true;
  };
  class OnNamedComposed final {
    OnNamedComposed() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = false;
    static constexpr bool kHasResponse = true;
  };
  class OnNamedComposedWithError final {
    OnNamedComposedWithError() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = false;
    static constexpr bool kHasResponse = true;
  };
  class OneWayImport final {
    OneWayImport() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = false;
  };
  class TwoWayImport final {
    TwoWayImport() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = true;
  };
  class TwoWayImportWithError final {
    TwoWayImportWithError() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = true;
  };
  class OnImport final {
    OnImport() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = false;
    static constexpr bool kHasResponse = true;
  };
  class OnImportWithError final {
    OnImportWithError() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = false;
    static constexpr bool kHasResponse = true;
  };
  class OneWayLocal final {
    OneWayLocal() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = false;
  };
  class TwoWayLocal final {
    TwoWayLocal() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = true;
  };
  class TwoWayLocalWithError final {
    TwoWayLocalWithError() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = true;
  };
  class OnLocal final {
    OnLocal() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = false;
    static constexpr bool kHasResponse = true;
  };
  class OnLocalWithError final {
    OnLocalWithError() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = false;
    static constexpr bool kHasResponse = true;
  };
  class OneWayAnon final {
    OneWayAnon() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = false;
  };
  class TwoWayAnon final {
    TwoWayAnon() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = true;
  };
  class TwoWayAnonWithError final {
    TwoWayAnonWithError() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = true;
  };
  class OnAnon final {
    OnAnon() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = false;
    static constexpr bool kHasResponse = true;
  };
  class OnAnonWithError final {
    OnAnonWithError() = delete;

   public:
    using Protocol = ::test_protocollayouts::MainProtocol;
    static constexpr bool kHasRequest = false;
    static constexpr bool kHasResponse = true;
  };
};
}  // namespace test_protocollayouts
