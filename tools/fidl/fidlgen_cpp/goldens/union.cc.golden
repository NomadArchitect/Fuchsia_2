// WARNING: This file is machine generated by fidlgen_cpp.

#include <fidl/test/union/cpp/fidl_v2.h>

#ifdef __Fuchsia__

::fidl_test_union::StructWithNullableXUnion::StructWithNullableXUnion(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<
          ::std::unique_ptr<::fidl_test_union::OlderSimpleUnion>>(&decoder,
                                                                  0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl_test_union::
    TestProtocolStrictXUnionHenceResponseMayBeStackAllocatedTopResponse::
        TestProtocolStrictXUnionHenceResponseMayBeStackAllocatedTopResponse(
            ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::fidl_test_union::StrictBoundedXUnion>(
          &decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl_test_union::Pizza::Pizza(::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::std::vector<::std::string>>(&decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl_test_union::Pasta::Pasta(::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::std::string>(&decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl_test_union::
    TestProtocolFlexibleXUnionHenceResponseMustBeHeapAllocatedTopResponse::
        TestProtocolFlexibleXUnionHenceResponseMustBeHeapAllocatedTopResponse(
            ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::fidl_test_union::OlderSimpleUnion>(&decoder,
                                                                      0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl_test_union::NullableUnionStruct::NullableUnionStruct(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::std::unique_ptr<::fidl_test_union::Union>>(
          &decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl_test_union::UnionSandwich::UnionSandwich(::fidl::Decoder& decoder)
    : storage_(
          {::fidl::DecodeAs<uint32_t>(&decoder, 0),
           ::fidl::DecodeAs<::fidl_test_union::ExplicitXUnion>(&decoder, 8),
           ::fidl::DecodeAs<uint32_t>(&decoder, 24)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl_test_union::Empty::Empty(::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<uint8_t>(&decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__
