// WARNING: This file is machine generated by fidlgen_cpp.

#include <test/protocolrequest/cpp/fidl_v2.h>

namespace test_protocolrequest {
[[maybe_unused]] constexpr inline uint64_t kParent_GetChild_Ordinal =
    881818649151440699lu;
[[maybe_unused]] constexpr inline uint64_t kParent_GetChildRequest_Ordinal =
    1096855814967598201lu;
[[maybe_unused]] constexpr inline uint64_t kParent_TakeChild_Ordinal =
    4470101341872267920lu;
[[maybe_unused]] constexpr inline uint64_t kParent_TakeChildRequest_Ordinal =
    2333981071306416007lu;

#ifdef __Fuchsia__
}  // namespace test_protocolrequest
void fidl::internal::NaturalClientImpl<::test_protocolrequest::Parent>::
    GetChild(::fidl::ClientCallback<::test_protocolrequest::Parent::GetChild>&&
                 _callback) const {
  ::fidl::Encoder _encoder{::test_protocolrequest::kParent_GetChild_Ordinal};
  return messenger().TwoWay(
      &::test_protocolrequest::
          test_protocolrequest_ParentGetChildRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(_encoder),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_protocolrequest::Parent::GetChild>,
          ::fidl::ClientCallback<::test_protocolrequest::Parent::GetChild>>(
          ::test_protocolrequest::kParent_GetChild_Ordinal,
          std::move(_callback)));
}
void fidl::internal::NaturalClientImpl<::test_protocolrequest::Parent>::
    GetChild(::fidl::ClientResponseCallback<
             ::test_protocolrequest::Parent::GetChild>&& _callback) const {
  ::fidl::Encoder _encoder{::test_protocolrequest::kParent_GetChild_Ordinal};
  return messenger().TwoWay(
      &::test_protocolrequest::
          test_protocolrequest_ParentGetChildRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(_encoder),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_protocolrequest::Parent::GetChild>,
          ::fidl::ClientResponseCallback<
              ::test_protocolrequest::Parent::GetChild>>(
          ::test_protocolrequest::kParent_GetChild_Ordinal,
          std::move(_callback)));
}

void fidl::internal::NaturalClientImpl<::test_protocolrequest::Parent>::
    GetChildRequest(::fidl::ClientCallback<
                    ::test_protocolrequest::Parent::GetChildRequest>&&
                        _callback) const {
  ::fidl::Encoder _encoder{
      ::test_protocolrequest::kParent_GetChildRequest_Ordinal};
  return messenger().TwoWay(
      &::test_protocolrequest::
          test_protocolrequest_ParentGetChildRequestRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(_encoder),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_protocolrequest::Parent::GetChildRequest>,
          ::fidl::ClientCallback<
              ::test_protocolrequest::Parent::GetChildRequest>>(
          ::test_protocolrequest::kParent_GetChildRequest_Ordinal,
          std::move(_callback)));
}
void fidl::internal::NaturalClientImpl<::test_protocolrequest::Parent>::
    GetChildRequest(::fidl::ClientResponseCallback<
                    ::test_protocolrequest::Parent::GetChildRequest>&&
                        _callback) const {
  ::fidl::Encoder _encoder{
      ::test_protocolrequest::kParent_GetChildRequest_Ordinal};
  return messenger().TwoWay(
      &::test_protocolrequest::
          test_protocolrequest_ParentGetChildRequestRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(_encoder),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_protocolrequest::Parent::GetChildRequest>,
          ::fidl::ClientResponseCallback<
              ::test_protocolrequest::Parent::GetChildRequest>>(
          ::test_protocolrequest::kParent_GetChildRequest_Ordinal,
          std::move(_callback)));
}

::fitx::result<::fidl::Error>
fidl::internal::NaturalClientImpl<::test_protocolrequest::Parent>::TakeChild(
    ::test_protocolrequest::ParentTakeChildRequest&& payload) const {
  ::fidl::Encoder _encoder{::test_protocolrequest::kParent_TakeChild_Ordinal};
  ::fidl::Result result = messenger().OneWay(
      &::test_protocolrequest::
          test_protocolrequest_ParentTakeChildRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)));
  return ::fidl::internal::ToFitxResult(result);
}

::fitx::result<::fidl::Error> fidl::internal::
    NaturalClientImpl<::test_protocolrequest::Parent>::TakeChildRequest(
        ::test_protocolrequest::ParentTakeChildRequestRequest&& payload) const {
  ::fidl::Encoder _encoder{
      ::test_protocolrequest::kParent_TakeChildRequest_Ordinal};
  ::fidl::Result result = messenger().OneWay(
      &::test_protocolrequest::
          test_protocolrequest_ParentTakeChildRequestRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)));
  return ::fidl::internal::ToFitxResult(result);
}
namespace test_protocolrequest {
#endif  // __Fuchsia__

}  // namespace test_protocolrequest
#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo> fidl::internal::
    NaturalEventDispatcher<::test_protocolrequest::Parent>::DispatchEvent(
        ::fidl::IncomingMessage& msg,
        ::fidl::internal::IncomingTransportContext transport_context) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo> fidl::internal::
    NaturalEventDispatcher<::test_protocolrequest::Child>::DispatchEvent(
        ::fidl::IncomingMessage& msg,
        ::fidl::internal::IncomingTransportContext transport_context) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__
