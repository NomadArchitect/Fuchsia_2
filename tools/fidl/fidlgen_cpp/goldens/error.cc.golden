// WARNING: This file is machine generated by fidlgen_cpp.

#include <test/error/cpp/fidl_v2.h>

namespace test_error {
[[maybe_unused]] constexpr inline uint64_t kExample_foo_Ordinal =
    1107623248440401476lu;

#ifdef __Fuchsia__
}  // namespace test_error
void fidl::internal::NaturalClientImpl<::test_error::Example>::foo(
    ::test_error::ExampleFooRequest&& payload,
    ::fidl::ClientCallback<::test_error::Example::Foo>&& _callback) const {
  ::fidl::Encoder _encoder{::test_error::kExample_foo_Ordinal};
  return messenger().TwoWay(
      &::test_error::test_error_ExamplefooRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_error::Example::Foo>,
          ::fidl::ClientCallback<::test_error::Example::Foo>>(
          ::test_error::kExample_foo_Ordinal, std::move(_callback)));
}
void fidl::internal::NaturalClientImpl<::test_error::Example>::foo(
    ::test_error::ExampleFooRequest&& payload,
    ::fidl::ClientResponseCallback<::test_error::Example::Foo>&& _callback)
    const {
  ::fidl::Encoder _encoder{::test_error::kExample_foo_Ordinal};
  return messenger().TwoWay(
      &::test_error::test_error_ExamplefooRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_error::Example::Foo>,
          ::fidl::ClientResponseCallback<::test_error::Example::Foo>>(
          ::test_error::kExample_foo_Ordinal, std::move(_callback)));
}
namespace test_error {
#endif  // __Fuchsia__

}  // namespace test_error
#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo>
fidl::internal::NaturalEventDispatcher<::test_error::Example>::DispatchEvent(
    ::fidl::IncomingMessage& msg,
    ::fidl::internal::IncomingTransportContext transport_context) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__
