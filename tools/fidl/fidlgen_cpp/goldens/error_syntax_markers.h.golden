// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <lib/fidl/cpp/wire/internal/transport.h>
#include <lib/fidl/cpp/wire/unknown_interactions.h>

namespace test_errorsyntax {

class ExampleUseOfErrorSyntax final {
  ExampleUseOfErrorSyntax() = delete;

 public:
  using Transport = ::fidl::internal::ChannelTransport;

  static constexpr ::fidl::internal::Openness kOpenness = ::fidl::internal::Openness::kClosed;
  class ComposedCallWhichMayFail final {
    ComposedCallWhichMayFail() = delete;

   public:
    using Protocol = ::test_errorsyntax::ExampleUseOfErrorSyntax;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = true;

    static constexpr bool kHasNonEmptyPayload = true;
    static constexpr bool kHasApplicationError = true;
    static constexpr bool kHasTransportError = false;
  };
  class CallWhichMayFail final {
    CallWhichMayFail() = delete;

   public:
    using Protocol = ::test_errorsyntax::ExampleUseOfErrorSyntax;
    static constexpr bool kHasRequest = true;
    static constexpr bool kHasResponse = true;

    static constexpr bool kHasNonEmptyPayload = true;
    static constexpr bool kHasApplicationError = true;
    static constexpr bool kHasTransportError = false;
  };
};
}  // namespace test_errorsyntax
