// WARNING: This file is machine generated by fidlgen_cpp.

#include <test/nullable/cpp/fidl_v2.h>

namespace test_nullable {
[[maybe_unused]] constexpr inline uint64_t kSimpleProtocol_Add_Ordinal =
    9142761280038437494lu;

#ifdef __Fuchsia__
}  // namespace test_nullable
void fidl::internal::NaturalClientImpl<::test_nullable::SimpleProtocol>::Add(
    ::test_nullable::SimpleProtocolAddRequest&& payload,
    ::fidl::ClientCallback<::test_nullable::SimpleProtocol::Add>&& _callback)
    const {
  ::fidl::Encoder _encoder{::test_nullable::kSimpleProtocol_Add_Ordinal};
  return messenger().TwoWay(
      &::test_nullable::test_nullable_SimpleProtocolAddRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_nullable::SimpleProtocol::Add>,
          ::fidl::ClientCallback<::test_nullable::SimpleProtocol::Add>>(
          ::test_nullable::kSimpleProtocol_Add_Ordinal, std::move(_callback)));
}
void fidl::internal::NaturalClientImpl<::test_nullable::SimpleProtocol>::Add(
    ::test_nullable::SimpleProtocolAddRequest&& payload,
    ::fidl::ClientResponseCallback<::test_nullable::SimpleProtocol::Add>&&
        _callback) const {
  ::fidl::Encoder _encoder{::test_nullable::kSimpleProtocol_Add_Ordinal};
  return messenger().TwoWay(
      &::test_nullable::test_nullable_SimpleProtocolAddRequestMessageTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_nullable::SimpleProtocol::Add>,
          ::fidl::ClientResponseCallback<::test_nullable::SimpleProtocol::Add>>(
          ::test_nullable::kSimpleProtocol_Add_Ordinal, std::move(_callback)));
}
namespace test_nullable {
#endif  // __Fuchsia__

}  // namespace test_nullable
#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo> fidl::internal::
    NaturalEventDispatcher<::test_nullable::SimpleProtocol>::DispatchEvent(
        ::fidl::IncomingMessage& msg,
        ::fidl::internal::IncomingTransportContext transport_context) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__
