// WARNING: This file is machine generated by fidlgen_cpp.

#include <fidl/test/nullable/cpp/fidl_v2.h>

#ifdef __Fuchsia__

void ::fidl_test_nullable::StructWithNullableVector::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::fidl_test_nullable::StructWithNullableVector,
                                 ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::fidl_test_nullable::StructWithNullableVector>::Encode(
      &encoder, this, offset);
}

::fidl_test_nullable::StructWithNullableVector::StructWithNullableVector(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::fidl::VectorPtr<int32_t>>(&decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl_test_nullable::StructWithNullableUnion::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::fidl_test_nullable::StructWithNullableUnion,
                                 ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::fidl_test_nullable::StructWithNullableUnion>::Encode(
      &encoder, this, offset);
}

::fidl_test_nullable::StructWithNullableUnion::StructWithNullableUnion(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<
          ::std::unique_ptr<::fidl_test_nullable::SimpleUnion>>(&decoder, 0)}) {
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl_test_nullable::StructWithNullableStruct::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::fidl_test_nullable::StructWithNullableStruct,
                                 ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::fidl_test_nullable::StructWithNullableStruct>::Encode(
      &encoder, this, offset);
}

::fidl_test_nullable::StructWithNullableStruct::StructWithNullableStruct(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<
          ::std::unique_ptr<::fidl_test_nullable::Int32Wrapper>>(&decoder,
                                                                 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl_test_nullable::StructWithNullableString::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::fidl_test_nullable::StructWithNullableString,
                                 ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::fidl_test_nullable::StructWithNullableString>::Encode(
      &encoder, this, offset);
}

::fidl_test_nullable::StructWithNullableString::StructWithNullableString(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::fidl::StringPtr>(&decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl_test_nullable::StructWithNullableRequest::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<
          ::fidl_test_nullable::StructWithNullableRequest, ::fidl::Encoder>(
          &encoder));
  ::fidl::CodingTraits<::fidl_test_nullable::StructWithNullableRequest>::Encode(
      &encoder, this, offset);
}

::fidl_test_nullable::StructWithNullableRequest::StructWithNullableRequest(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<
          ::fidl::InterfaceRequest<::fidl::test::nullable::SimpleProtocol>>(
          &decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl_test_nullable::StructWithNullableProtocol::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<
          ::fidl_test_nullable::StructWithNullableProtocol, ::fidl::Encoder>(
          &encoder));
  ::fidl::CodingTraits<
      ::fidl_test_nullable::StructWithNullableProtocol>::Encode(&encoder, this,
                                                                offset);
}

::fidl_test_nullable::StructWithNullableProtocol::StructWithNullableProtocol(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<
          ::fidl::InterfaceHandle<::fidl::test::nullable::SimpleProtocol>>(
          &decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl_test_nullable::StructWithNullableHandle::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::fidl_test_nullable::StructWithNullableHandle,
                                 ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::fidl_test_nullable::StructWithNullableHandle>::Encode(
      &encoder, this, offset);
}

::fidl_test_nullable::StructWithNullableHandle::StructWithNullableHandle(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<::zx::vmo>(&decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl_test_nullable::SimpleProtocolAddTopResponse::
    EncodeWithoutValidating(::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<
          ::fidl_test_nullable::SimpleProtocolAddTopResponse, ::fidl::Encoder>(
          &encoder));
  ::fidl::CodingTraits<
      ::fidl_test_nullable::SimpleProtocolAddTopResponse>::Encode(&encoder,
                                                                  this, offset);
}

::fidl_test_nullable::SimpleProtocolAddTopResponse::
    SimpleProtocolAddTopResponse(::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<int32_t>(&decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl_test_nullable::SimpleProtocolAddRequest::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(
      ::fidl::EncodingInlineSize<::fidl_test_nullable::SimpleProtocolAddRequest,
                                 ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::fidl_test_nullable::SimpleProtocolAddRequest>::Encode(
      &encoder, this, offset);
}

::fidl_test_nullable::SimpleProtocolAddRequest::SimpleProtocolAddRequest(
    ::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<int32_t>(&decoder, 0),
                ::fidl::DecodeAs<int32_t>(&decoder, 4)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

void ::fidl_test_nullable::Int32Wrapper::EncodeWithoutValidating(
    ::fidl::Encoder& encoder, size_t offset) {
  encoder.Alloc(::fidl::EncodingInlineSize<::fidl_test_nullable::Int32Wrapper,
                                           ::fidl::Encoder>(&encoder));
  ::fidl::CodingTraits<::fidl_test_nullable::Int32Wrapper>::Encode(
      &encoder, this, offset);
}

::fidl_test_nullable::Int32Wrapper::Int32Wrapper(::fidl::Decoder& decoder)
    : storage_({::fidl::DecodeAs<int32_t>(&decoder, 0)}) {}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__
