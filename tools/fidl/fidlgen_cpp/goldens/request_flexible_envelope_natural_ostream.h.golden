// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.requestflexibleenvelope/cpp/natural_types.h>
#include <lib/fidl/cpp/natural_ostream.h>

#include <iostream>

template <>
struct fidl::ostream::Formatter<::test_requestflexibleenvelope::FlexibleFoo> {
  static std::ostream& Format(std::ostream& os, const ::test_requestflexibleenvelope::FlexibleFoo& value);
};
std::ostream& operator<<(std::ostream& os, const ::test_requestflexibleenvelope::FlexibleFoo& value);
template <>
struct fidl::ostream::Formatter<::test_requestflexibleenvelope::StrictFoo> {
  static std::ostream& Format(std::ostream& os, const ::test_requestflexibleenvelope::StrictFoo& value);
};
std::ostream& operator<<(std::ostream& os, const ::test_requestflexibleenvelope::StrictFoo& value);
template <>
struct fidl::ostream::Formatter<::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest& value);
};
std::ostream& operator<<(std::ostream& os, const ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest& value);
template <>
struct fidl::ostream::Formatter<::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleTopResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleTopResponse& value);
};
std::ostream& operator<<(std::ostream& os, const ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleTopResponse& value);
template <>
struct fidl::ostream::Formatter<::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest& value);
};
std::ostream& operator<<(std::ostream& os, const ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest& value);
template <>
struct fidl::ostream::Formatter<::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictTopResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictTopResponse& value);
};
std::ostream& operator<<(std::ostream& os, const ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictTopResponse& value);
template <>
struct fidl::ostream::Formatter<::fidl::ClientEnd<::test_requestflexibleenvelope::Protocol>> {
  static std::ostream& Format(std::ostream& os, const ::fidl::ClientEnd<::test_requestflexibleenvelope::Protocol>& value) {
    return os << "ClientEnd<"
              << "test_requestflexibleenvelope::Protocol"
              << ">(" << value.channel().get() << ")";
  }
};
inline std::ostream& operator<<(std::ostream& os, const ::fidl::ClientEnd<::test_requestflexibleenvelope::Protocol>& value) {
  return fidl::ostream::Formatter<::fidl::ClientEnd<::test_requestflexibleenvelope::Protocol>>::Format(os, value);
}

template <>
struct fidl::ostream::Formatter<::fidl::ServerEnd<::test_requestflexibleenvelope::Protocol>> {
  static std::ostream& Format(std::ostream& os, const ::fidl::ServerEnd<::test_requestflexibleenvelope::Protocol>& value) {
    return os << "ServerEnd<"
              << "test_requestflexibleenvelope::Protocol"
              << ">(" << value.channel().get() << ")";
  }
};
inline std::ostream& operator<<(std::ostream& os, const ::fidl::ServerEnd<::test_requestflexibleenvelope::Protocol>& value) {
  return fidl::ostream::Formatter<::fidl::ServerEnd<::test_requestflexibleenvelope::Protocol>>::Format(os, value);
}
