library fidl.test.experimentalmaybefromtypealias;

protocol MyProtocol {
};

alias AliasOfBytes = bytes;
alias AliasOfString = string;
alias U64 = uint64;
alias Vector = vector<uint64>?;
alias AliasOfArray = array<uint64>:1;
alias AliasOfRequest = request<MyProtocol>?;
alias AliasOfVectorContainingAliasOfVector = vector<U64>:2;
alias AliasOfArrayContainingAliasOfArray = array<U64>:2;

resource struct Testing {
    U64 u1;
    vector<U64>:1 u2;
    array<U64>:1 u3;
    vector<vector<U64>:1> u4;
    vector<array<U64>:1> u5;
    array<vector<U64>:1>:4 u6;
    array<array<U64>:1>:4 u7;

    Vector v1;
    vector<Vector> v2;
    array<Vector>:4 v3;

    AliasOfArray a1;
    vector<AliasOfArray> a2;
    array<AliasOfArray>:4 a3;

    AliasOfRequest r1;
    vector<AliasOfRequest> r2;
    array<AliasOfRequest>:4 r3;

    AliasOfBytes b1;
    vector<AliasOfBytes> b2;
    array<AliasOfBytes>:4 b3;

    AliasOfString s1;
    vector<AliasOfString> s2;
    array<AliasOfString>:4 s3;

    AliasOfVectorContainingAliasOfVector vv1;
    vector<AliasOfVectorContainingAliasOfVector>:3 vv2;
    array<AliasOfVectorContainingAliasOfVector>:3 vv3;

    AliasOfArrayContainingAliasOfArray aa1;
    vector<AliasOfArrayContainingAliasOfArray>:3 aa2;
    array<AliasOfArrayContainingAliasOfArray>:3 aa3;
};
