deprecated_syntax;
library fidl.test.table;

table EmptyTable {
};

table SimpleTable {
    1: int64 x;
    2: reserved;
    3: reserved;
    4: reserved;
    5: int64 y;
};

table OlderSimpleTable {
    1: int64 x;
    2: reserved;
};

table NewerSimpleTable {
    1: int64 x;
    2: reserved;
    3: reserved;
    4: reserved;
    5: int64 y;
    6: int64 z;
    7: reserved;
};

table ReverseOrdinalTable {
    3: int64 x;
    2: int64 y;
    1: int64 z;
};

// There is one bitmask per 64-entries in the V2 wire format.
// This tests the cases where there is more than one bitmask.
table GreaterThan64OrdinalTable {
    1: int64 v1;
    2: int64 v2;
    3: int64 v3;
    4: int64 v4;
    5: int64 v5;
    6: int64 v6;
    7: int64 v7;
    8: int64 v8;
    9: int64 v9;
    10: int64 v10;
    11: int64 v11;
    12: int64 v12;
    13: int64 v13;
    14: int64 v14;
    15: int64 v15;
    16: int64 v16;
    17: int64 v17;
    18: int64 v18;
    19: int64 v19;
    20: int64 v20;
    21: int64 v21;
    22: int64 v22;
    23: int64 v23;
    24: int64 v24;
    25: int64 v25;
    26: int64 v26;
    27: int64 v27;
    28: int64 v28;
    29: int64 v29;
    30: int64 v30;
    31: int64 v31;
    32: int64 v32;
    33: int64 v33;
    34: int64 v34;
    35: int64 v35;
    36: int64 v36;
    37: int64 v37;
    38: int64 v38;
    39: int64 v39;
    40: int64 v40;
    41: int64 v41;
    42: int64 v42;
    43: int64 v43;
    44: int64 v44;
    45: int64 v45;
    46: int64 v46;
    47: int64 v47;
    48: int64 v48;
    49: int64 v49;
    50: int64 v50;
    51: int64 v51;
    52: int64 v52;
    53: int64 v53;
    54: int64 v54;
    55: int64 v55;
    56: int64 v56;
    57: int64 v57;
    58: int64 v58;
    59: int64 v59;
    60: int64 v60;
    61: int64 v61;
    62: int64 v62;
    63: int64 v63;
    64: int64 v64;
    65: int64 v65;
    66: int64 v66;
};
