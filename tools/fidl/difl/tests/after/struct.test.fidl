// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file
library fidl.difl.test;

using zx;

// After

//!DeclAdded
type StructAdded = struct {
    field int32;
};

// Attributes
@attribute
type StructAttributeAdded = struct {
    field int32;
};

type StructAttributeRemoved = struct {
    field int32;
};

@attribute("after")
type StructAttributeChanged = struct {
    field int32;
};

// Fields

type StructMemberRenamed = struct {
    //!StructMemberRenamed
    renamed_field int32;
};

//!StructSizeChanged
type StructMemberAdded = struct {
    field int32;
    //!StructMemberAdded
    new_field int32;
};

//!StructSizeChanged
//!StructMemberRemoved
type StructMemberRemoved = struct {
    field int32;
};

type StructMemberReordered = struct {
    //!StructMemberMoved
    second int32;
    //!StructMemberMoved
    first int32;
};

// Field attributes

type StructMemberAttributeAdded = struct {
    @attribute
    field int32;
};

type StructMemberAttributeRemoved = struct {
    field int32;
};

type StructMemberAttributeChanged = struct {
    @attribute("before")
    field int32;
};

// Field types

type StructMemberSignChanged = struct {
    //!StructMemberTypeChanged
    field uint32;
};

//!StructSizeChanged
type StructMemberSizeChanged = struct {
    //!StructMemberSizeChanged
    //!StructMemberTypeChanged
    field int64;
};

//!StructMemberSplit
type StructMemberSplit = struct {
    a int16;
    b int16;
};

type StructMemberJoin = struct {
    //!StructMemberJoined
    ab int32;
};

//!StructSizeChanged
//!StructMemberRemoved
type StructMemberSplitPadding = struct {
    z uint16;
    //!StructMemberAdded
    a int16;
    //!StructMemberAdded
    b int16;
};

//!StructSizeChanged
//!StructMemberRemoved
type StructMemberJoinPadding = struct {
    z uint16;
    //!StructMemberAdded
    ab int32;
};

type StructMemberStringToOptionalString = struct {
    //!StructMemberTypeChanged
    field string:optional;
};

type StructMemberStringFromOptionalString = struct {
    //!StructMemberTypeChanged
    field string;
};

type StructMemberHandleToOptionalHandle = resource struct {
    //!StructMemberTypeChanged
    field zx.handle:optional;
};

type StructMemberHandleFromOptionalHandle = resource struct {
    //!StructMemberTypeChanged
    field zx.handle;
};

type StructMemberHandleTypeChanged = resource struct {
    //!StructMemberTypeChanged
    field zx.handle:SOCKET;
};

type StructMemberStringLengthChanged = struct {
    //!StructMemberTypeChanged
    field string:10;
};

type StructMemberVectorLengthChanged = struct {
    //!StructMemberTypeChanged
    field vector<int32>:10;
};

//!StructSizeChanged
type StructMemberArrayLengthChanged = struct {
    //!StructMemberSizeChanged
    //!StructMemberTypeChanged
    field array<int32, 10>;
};

// Struct Layout
