// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// WARNING: This file is machine generated by bindc.

#ifndef TEST_LIB_BINDLIB_
#define TEST_LIB_BINDLIB_

#include <string>

#include <another/bindlibrary/bindlib.h>

namespace test_lib {

static const std::string KINGFISHER = "test.lib.KINGFISHER";
static const std::string KINGFISHER_BELTED = "test.lib.KINGFISHER.BELTED";

static const std::string MIMID = "test.lib.Mimid";
static const std::string MIMID_CATBIRD = "test.lib.Mimid.Catbird";
static const std::string MIMID_THRASHER = "test.lib.Mimid.Thrasher";
static const std::string MIMID_TREMBLER = "test.lib.Mimid.Trembler";
static const std::string MIMID_MOCKINGBIRD = "test.lib.Mimid.Mockingbird";

static const std::string PHAINOPEPLA = "test.lib.Phainopepla";

static const std::string THRUSH = "test.lib.THRUSH";
static const std::string THRUSH_HERMIT = "hermit_thrush";
static const std::string THRUSH_ROBIN = "robin";
static const std::string THRUSH_SOLITAIRE = "solitaire";

static const std::string WAXWING = "test.lib.WAXWING";

static const std::string PICIDAE = "test.lib.PICIDAE";
static constexpr uint32_t PICIDAE_FLICKER = 16;
static constexpr uint32_t PICIDAE_SAPSUCKER = 200;

static const std::string NUTHATCH = "test.lib.NUTHATCH";

static const std::string FLYCATCHER = "test.lib.FLYCATCHER";
static constexpr bool FLYCATCHER_PHOEBE = true;
static constexpr bool FLYCATCHER_KESTREL = false;

static constexpr uint32_t BIND_PROTOCOL_DEVICE = 10;
static constexpr uint32_t BIND_PROTOCOL_IMPL = 15;

}  // namespace test_lib

#endif  // TEST_LIB_BINDLIB_
