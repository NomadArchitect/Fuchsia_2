#include </fidl/examples/routing/echo/cpp/fidl.h>;
#include <gtest/gtest.h>;
#include <lib/gtest/real_loop_fixture.h>;
#include <lib/sys/component/cpp/testing/realm_builder.h>;

constexpr char COMPONENT_URL[] = "fuchsia-pkg://fuchsia.com/echo_server_test#meta/echo_server.cm";


class EchoServerTest: public ::gtest::RealLoopFixture {

 protected:
  std::unique_ptr<sys::testing::experimental::RealmRoot> CreateRealm() {

    auto realm_builder = sys::testing::experimental::RealmBuilder::Create();
    realm_builder
      .AddChild(
        "echo_server",
        COMPONENT_URL)
      .AddRoute(sys::testing::Route {
        .capabilities = {sys::testing::Protocol {"fuchsia.logger.LogSink"}},
        .source = sys::testing::ParentRef(),
        .targets = {sys::testing::ChildRef{"echo_server"}, }})
      .AddRoute(sys::testing::Route {
        .capabilities = {sys::testing::Protocol {"fidl.examples.routing.echo.Echo"}},
        .source = sys::testing::ChildRef{"echo_server"},
        .targets = {sys::testing::ParentRef(), }});

    return std::make_unique<sys::testing::experimental::RealmRoot>(realm_builder.Build(dispatcher()));
  }
};

TEST_F(EchoServerTest, Echo) {
  auto realm = CreateRealm();
  fidl::examples::routing::echo::Echo proxy;
  realm -> Connect(proxy.NewRequest());
}

