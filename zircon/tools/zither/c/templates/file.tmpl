{{- define "GenerateCFile" -}}
// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

{{/* TODO(fxbug.dev/51002): Give source-relative path to library. */}}
// DO NOT EDIT.
// Generated from FIDL library `{{ .Library.String }}` by zither, a Fuchsia platform tool.

// TODO(fxbug.dev/51002): Give a traditional header guard.
#pragma once

#include <stdbool.h>
#include <stdint.h>

{{/*
    TODO(fxbug.dev/106538) We are not protected against cyclic includes here.
    Either we need to generate headers differently or appeal to a FIDL feature
    that does not yet exist in order to restrict what sort of FIDL gets
    processed by zither.
*/}}
{{ range $name, $unused := .Deps }}
#include "{{ Append $name ".h" }}"
{{ end }}

#if defined(__cplusplus)
extern "C" {
#endif

{{ range .Decls }}

{{ if .IsConst }}
{{ template "GenerateCConst" .AsConst }}

{{ else if .IsEnum }}
{{ template "GenerateCEnum" .AsEnum }}

{{ else if .IsBits }}
{{ template "GenerateCBits" .AsBits }}

{{ else if .IsStruct }}
{{ template "GenerateCStruct" .AsStruct }}

{{ end }}
{{ end }}

#if defined(__cplusplus)
}
#endif

{{ end }}