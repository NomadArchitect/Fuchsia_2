# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/test.gni")
import("//zircon/system/ulib/devmgr-integration-test/isolated_devmgr.gni")

test("fvm") {
  output_name = "fvm-test"
  sources = [ "fvm.cc" ]
  configs += [ "//build/unification/config:zircon-migrated" ]
  fdio_config = [ "//build/config/fuchsia:fdio_config" ]

  if (configs + fdio_config - fdio_config != configs) {
    configs -= fdio_config
  }
  deps = [
    "//sdk/fidl/fuchsia.device:fuchsia.device_c",
    "//sdk/fidl/fuchsia.device:fuchsia.device_llcpp",
    "//sdk/fidl/fuchsia.hardware.block.volume:fuchsia.hardware.block.volume_c",
    "//sdk/fidl/fuchsia.io:fuchsia.io_llcpp",
    "//sdk/lib/fdio",
    "//src/lib/digest",
    "//src/lib/storage/vfs/cpp",
    "//src/storage/blobfs",
    "//src/storage/fvm",
    "//src/storage/gpt",
    "//src/storage/memfs",
    "//src/storage/minfs",
    "//third_party/boringssl",
    "//zircon/public/lib/async",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/sync",
    "//zircon/public/lib/zircon-internal",
    "//zircon/public/lib/zx",
    "//zircon/public/lib/zxtest",
    "//zircon/system/ulib/async-default",
    "//zircon/system/ulib/async-loop",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/bitmap",
    "//zircon/system/ulib/block-client",
    "//zircon/system/ulib/devmgr-integration-test",
    "//zircon/system/ulib/devmgr-launcher",
    "//zircon/system/ulib/fdio-caller",
    "//zircon/system/ulib/fs-management",
    "//zircon/system/ulib/fvm-devices",
    "//zircon/system/ulib/fzl",
    "//zircon/system/ulib/ramdevice-client",
    "//zircon/system/ulib/trace",
    "//zircon/system/ulib/trace-engine",
    "//zircon/third_party/ulib/cksum",
  ]

  # TODO(fxbug.dev/69585): This target uses raw zx::channel with LLCPP which is deprecated.
  # Please migrate to typed channel APIs (fidl::ClientEnd<T>, fidl::ServerEnd<T>).
  # See linked bug for details.
  configs += [ "//build/cpp:fidl-llcpp-deprecated-raw-channels" ]
}

test("fvm-integration") {
  output_name = "fvm-integration-test"
  sources = [ "resize-tests.cc" ]
  configs += [ "//build/unification/config:zircon-migrated" ]
  fdio_config = [ "//build/config/fuchsia:fdio_config" ]

  if (configs + fdio_config - fdio_config != configs) {
    configs -= fdio_config
  }

  deps = [
    "//zircon/public/lib/zxtest",
    "//zircon/system/ulib/devmgr-integration-test",
    "//zircon/system/ulib/devmgr-launcher",
    "//zircon/system/ulib/fvm-devices",
  ]
}

isolated_devmgr_unittest_package("fvm-integration-test") {
  executable_path = "test/fvm-integration-test"

  deps = [
    ":fvm-integration",
    "//src/devices/block/drivers/core",
    "//src/devices/block/drivers/ramdisk",
    "//src/devices/misc/drivers/test",
    "//src/devices/tests/sysdev",
    "//src/storage/fvm/driver",
  ]
}

isolated_devmgr_unittest_package("fvm-test") {
  executable_path = "test/fvm-test"

  deps = [
    ":fvm",
    "//src/devices/block/drivers/core",
    "//src/devices/block/drivers/ramdisk",
    "//src/devices/misc/drivers/test",
    "//src/devices/tests/sysdev",
    "//src/storage/fvm/driver",
  ]
}

group("tests") {
  testonly = true
  deps = [
    ":fvm-integration-test",
    ":fvm-test",
  ]
}
