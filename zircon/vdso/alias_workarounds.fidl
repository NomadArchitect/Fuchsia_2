// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library zx;

// These are all aliases that will be subsumed by the future implementation of
// templating, constraints, etc. in fidlc.
//
// The right hand side is completely ignored by kazoo, that is, only the name of
// the alias is significant. Generally the right hand side is set so that if
// there were no handling of the alias (and the alias was "expanded" as is the
// default behaviour), it would result in something sensible.

// TODO(fidl)
alias ConstFutexPtr = int32;

// TODO(fidlc): const void*
alias ConstVoidPtr = uint64;

// TODO(fidlc): mutable<string>
alias MutableString = string;

// TODO(fidlc): mutable<uint32>
alias MutableUint32 = uint32;

// TODO(fidlc): mutable<usize>
alias Mutableusize = usize;

// TODO(fidlc): uint32 size
// TODO(fidlc): mutable<vector<HandleDisposition>
alias MutableVectorHandleDispositionU32Size = vector<HandleDisposition>;

// TODO(fidlc): uint32 size
// TODO(fidlc): vector<HandleInfo>
alias MutableVectorHandleInfoU32Size = vector<HandleInfo>;

// TODO(fidlc): mutable<ChannelCallEtcArgs>
alias MutableChannelCallEtcArgs = ChannelCallEtcArgs;

// TODO(fidlc): mutable<vector<WaitItem>>
alias MutableVectorWaitItem = vector<WaitItem>;

// TODO(fidlc): uint32 size
// TODO(fidlc): mutable<vector<handle>
alias MutableVectorHandleU32Size = vector<handle>;

// TODO(fidlc): mutable<vector<void>>
alias MutableVectorVoid = vector<byte>;

// TODO(fidlc): uint32 size
// TODO(fidlc): mutable<vector<void>>
alias MutableVectorVoidU32Size = vector<byte>;

// TODO(fidlc): uint32 size
// TODO(fidlc): vector<HandleInfo>
alias VectorHandleInfoU32Size = vector<HandleInfo>;

// TODO(fidlc): vector<handle> uint32 size
alias VectorHandleU32Size = vector<handle>;

// TODO(fidlc): vector<void>
alias VectorVoid = vector<byte>;

// TODO(fidlc): vector<iovec>
alias VectorIovec = vector<byte>;

// TODO(fidlc): vector<paddr>
alias VectorPaddr = vector<paddr>;

// TODO(fidlc): uint32 size
// TODO(fidlc): vector<void>
alias VectorVoidU32Size = vector<byte>;

// TODO(fidlc): (mutable) void*
alias VoidPtr = uint64;

// This is <zircon/StringView.h>'s zx_string_view_t in C/C++.
alias StringView = uint64;
