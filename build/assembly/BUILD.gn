# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/assembly/assembly_input_bundle.gni")
import("//build/assembly/legacy.gni")
import("//build/security.gni")

if (is_fuchsia) {
  # Create an OOT-usable Image Assembly configuration, with all supporting
  # artifacts, based on the currently configured product configuration.
  #
  # This takes the image assembly config from the legacy_image_assembly label, and creates
  # a package from it that contains all the base, cache, bootfs, and config data
  # files, the kernel, and a new version of the image assembly config whose paths
  # are all relative to the file (in the same package as those artifacts.)
  legacy_assembly_input_bundle("legacy") {
    testonly = true
    image_assembly_label = "//build/images/fuchsia"
    create_package_archive = true
  }

  # This is an example of creating an assembly input bundle, it's only for use
  # to show how to use the template, and isn't meant to be used (it will be
  # removed after there are other, "real" usages of the template.)
  assembly_input_bundle("additional_packages") {
    testonly = base_cache_packages_testonly
    visibility = [ ":*" ]
    base_packages = [ "//:additional_base_packages" ]
    cache_packages = [ "//:additional_cache_packages" ]
    create_aib_package = true
    create_aib_archive = true
  }

  group("assembly") {
    testonly = true
    public_deps = [
      ":additional_packages",
      ":legacy",
      ":legacy.tgz",
      "scripts:assembly_input_bundle_tool_install($host_toolchain)",
    ]
  }
}

if (is_host) {
  group("host_tests") {
    testonly = true
    deps = [ "scripts:tests($host_toolchain)" ]
  }
}
