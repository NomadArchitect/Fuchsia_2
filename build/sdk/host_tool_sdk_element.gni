# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("sdk_element.gni")

# Defines an SDK element containing a host tool binary.

# Parameters
#   binary (required)
#     GN label that builds the host tool binary. This will be the element's
#     only dependency.
#
#   output_name (optional)
#     Name of the host tool binary, if different than the value of `binary`. For
#     example, many rustc_binary targets have the label ":bin" and set their own
#     `output_name` parameter -- this should be that same name.
#
#   description (optional)
#     Description of the host tool, to be included in the element's metadata.
template("host_tool_sdk_element") {
  assert(defined(invoker.binary), "Must define a binary")
  binary = invoker.binary

  if (defined(invoker.output_name)) {
    output_name = invoker.output_name
  } else {
    output_name = get_label_info(binary, "name")
  }

  if (defined(invoker.description)) {
    description = invoker.description
  } else {
    description = ""
  }

  sdk_element(target_name) {
    non_sdk_deps = [ binary ]
    schema = "//sdk/schema/host_tool-f8025966.json"

    files = [
      {
        src = rebase_path(get_label_info("$binary($current_toolchain)",
                                         "root_out_dir") + "/" + output_name,
                          root_build_dir)
        dst = output_name
      },
    ]

    meta = {
      schema_id = "https://fuchsia.dev/schema/sdk/host_tool-f8025966.json"
      data = {
        name = output_name
        element_type = "host_tool"
        description = description
        host_os = current_os
        host_arch = current_cpu
        contents = {
          binary = output_name
        }
      }
    }
  }
}
