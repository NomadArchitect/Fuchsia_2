# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load(":generated_constants.bzl", "constants")
load("@//:build/bazel/toolchains/clang/toolchains.bzl", "prebuilt_clang_cc_toolchain")

package(default_visibility = ["//visibility:public"])

# The following filegroups are referenced from toolchains.bzl functions.

filegroup(
    name = "all",
    srcs = glob(["**/*"], exclude = ["**/*.html", "**/*.pdf"]),
)

filegroup(
    name = "compiler_binaries",
    srcs = [
        "bin/clang",
        "bin/clang++",
        "bin/clang-" + constants.clang_short_version,
    ],
)

filegroup(
    name = "linker_binaries",
    srcs = glob(["bin/*"]),  # TODO(digit): Restrict this
)

filegroup(
    name = "ar_binaries",
    srcs = ["bin/llvm-ar"],
)

filegroup(
    name = "objcopy_binaries",
    srcs = ["bin/llvm-objcopy"],
)

filegroup(
    name = "strip_binaries",
    srcs = ["bin/llvm-strip"],
)

filegroup(
    name = "all_binaries",
    srcs = [
        ":compiler_binaries",
        ":linker_binaries",
        ":ar_binaries",
        ":objcopy_binaries",
        ":strip_binaries",
    ],
)

filegroup(
    name = "headers",
    srcs = glob(["lib/clang/" + constants.clang_long_version + "/include/**"]) +
           glob(["include/c++/v1/**"]),
)

exports_files(
    glob(["**/*"]),
)

prebuilt_clang_cc_toolchain(
    name = "host_clang_linux_x64",
    target_os = "linux",
    target_arch = "x64",
    sysroot_files = ["@//:linux_sysroot_x64"],
    sysroot_path = "prebuilt/third_party/sysroot/linux",
)

prebuilt_clang_cc_toolchain(
    name = "host_clang_linux_arm64",
    target_os = "linux",
    target_arch = "arm64",
    sysroot_files = ["@//:linux_sysroot_arm64"],
    sysroot_path = "prebuilt/third_party/sysroot/linux",
)
