# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/images/args.gni")

# Kernel file used to populate emu manifest
qemu_kernel_file = ""
qemu_kernel_target = ""
if (target_cpu == "x64") {
  qemu_kernel_file = "$root_build_dir/multiboot.bin"
  qemu_kernel_target = "//zircon/kernel/arch/x86/phys/boot-shim:multiboot-shim"
} else if (target_cpu == "arm64") {
  qemu_kernel_file = "$root_build_dir/qemu-boot-shim.bin"
  qemu_kernel_target = "//zircon/kernel/target/arm64/boot-shim:qemu"
} else {
  assert(false, "Unsupported target cpu: $target_cpu")
}

recovery_is_zedboot =
    get_label_info(recovery_label, "label_with_toolchain") ==
    get_label_info("//build/images/zedboot", "label_with_toolchain")

generate_flash_script_path = "//build/images/generate_flash_script.sh"

flash_manifest_version = 3

image_suffix = "zbi"
if (custom_signing_script != "" || use_vboot) {
  image_suffix = "zbi.signed"
}

image = "$root_out_dir/fuchsia.${image_suffix}"
vbmeta = "$root_out_dir/fuchsia.vbmeta"

recovery_image = "$root_out_dir/recovery.zbi"
recovery_vbmeta = "$root_out_dir/recovery.vbmeta"
if (recovery_is_zedboot) {
  recovery_image = "$root_out_dir/zedboot.${image_suffix}"
  recovery_vbmeta = "$root_out_dir/zedboot.vbmeta"
}
