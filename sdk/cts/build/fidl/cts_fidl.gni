# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/fidl/fidl.gni")
import("//sdk/cts/build/cts_element.gni")
import("//sdk/cts/build/write_cts_file.gni")

# Declares a FIDL Library that can be used in CTS.
#
# An equivalent to fidl.gni, but ensures deendencies are allowed in CTS.
template("cts_fidl") {
  assert(defined(invoker.sources), "Sources must be defined.")
  assert(!defined(invoker.deps), "All FIDL dependencies should be public.")

  invoker_deps = []
  if (defined(invoker.public_deps)) {
    invoker_deps += invoker.public_deps
  }
  if (defined(invoker.non_fidl_deps)) {
    invoker_deps += invoker.non_fidl_deps
  }

  if (invoker_deps != []) {
    cts_element("${target_name}_verify_deps") {
      deps = invoker_deps
      invoker_label = get_label_info(invoker.target_name, "label_no_toolchain")
    }
  }

  fidl(target_name) {
    forward_variables_from(invoker, "*")
    if (invoker_deps != []) {
      if (defined(non_fidl_deps)) {
        non_fidl_deps += [ ":${target_name}_verify_deps" ]
      } else {
        non_fidl_deps = [ ":${target_name}_verify_deps" ]
      }
    }

    if (defined(non_fidl_deps)) {
      non_fidl_deps += [ ":${target_name}_cts_file" ]
    } else {
      non_fidl_deps = [ ":${target_name}_cts_file" ]
    }
  }

  write_cts_file(target_name) {
  }
}
