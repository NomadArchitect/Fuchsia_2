// Copyright 2021 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library fuchsia.wlan.ieee80211;

/// IEEE Std 802.11-2016, 9.4.2.2
/// The maximum length of an SSID is 32 bytes, even when the SSID should be
/// interpreted using UTF-8 encoding (see Table 9-135). While every length in
/// the 802.11 standard is byte oriented, the word BYTE is included in the
/// name of this constant to emphasize the importance that it not be applied
/// to the length of a UTF-8 encoded string.
@namespaced
const MAX_SSID_BYTE_LEN uint8 = 32;
alias Ssid = bytes:MAX_SSID_BYTE_LEN;

// CSsid is intended for use only in source code using C bindings where
// the Ssid alias does not exist.
type CSsid = struct {
    len uint8;
    data array<uint8, MAX_SSID_BYTE_LEN>;
};

@namespaced
const MAC_ADDR_LEN uint8 = 6;
alias MacAddr = array<uint8, MAC_ADDR_LEN>;

/// IEEE Std 802.11-2016, 9.4.2.99
@namespaced
const MAX_MESH_ID_BYTE_LEN uint8 = 32;

/// IEEE Std 802.11-2016, 9.2.4.7
@namespaced
const MAX_MMPDU_BYTE_LEN uint16 = 2304;
@namespaced
const MAX_VHT_MPDU_BYTE_LEN_0 uint16 = 3895;
@namespaced
const MAX_VHT_MPDU_BYTE_LEN_1 uint16 = 7991;
@namespaced
const MAX_VHT_MPDU_BYTE_LEN_2 uint16 = 11454;

/// IEEE Std 802.11-2016, 9.3.3.2
@namespaced
const MAX_MGMT_FRAME_MAC_HEADER_BYTE_LEN uint8 = 28;
