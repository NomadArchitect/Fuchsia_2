[
    {
        "declaration": "string:<64,optional>",
        "kind": "struct/member",
        "name": "fuchsia.cobalt/CobaltEvent.component"
    },
    {
        "declaration": "vector<uint32>:5",
        "kind": "struct/member",
        "name": "fuchsia.cobalt/CobaltEvent.event_codes"
    },
    {
        "declaration": "uint32",
        "kind": "struct/member",
        "name": "fuchsia.cobalt/CobaltEvent.metric_id"
    },
    {
        "declaration": "fuchsia.cobalt/EventPayload",
        "kind": "struct/member",
        "name": "fuchsia.cobalt/CobaltEvent.payload"
    },
    {
        "kind": "struct",
        "name": "fuchsia.cobalt/CobaltEvent"
    },
    {
        "declaration": "(uint32 max_wait_seconds) -> ()",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Controller.BlockUntilEmpty"
    },
    {
        "declaration": "(uint32 day_index,vector<fuchsia.cobalt/ReportSpec> report_specs) -> (vector<uint64> num_obs)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Controller.GenerateAggregatedObservations"
    },
    {
        "declaration": "() -> (uint32 num)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Controller.GetFailedSendAttempts"
    },
    {
        "declaration": "() -> (uint64 num_runs)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Controller.GetNumEventAggregatorRuns"
    },
    {
        "declaration": "() -> (uint64 num_obs)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Controller.GetNumObservationsAdded"
    },
    {
        "declaration": "() -> (uint32 num)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Controller.GetNumSendAttempts"
    },
    {
        "declaration": "() -> ()",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Controller.ListenForInitialized"
    },
    {
        "declaration": "() -> (bool success)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Controller.RequestSendSoon"
    },
    {
        "kind": "protocol",
        "name": "fuchsia.cobalt/Controller"
    },
    {
        "declaration": "int64",
        "kind": "struct/member",
        "name": "fuchsia.cobalt/CountEvent.count"
    },
    {
        "declaration": "int64",
        "kind": "struct/member",
        "name": "fuchsia.cobalt/CountEvent.period_duration_micros"
    },
    {
        "kind": "struct",
        "name": "fuchsia.cobalt/CountEvent"
    },
    {
        "declaration": "string",
        "kind": "struct/member",
        "name": "fuchsia.cobalt/CustomEventValue.dimension_name"
    },
    {
        "declaration": "fuchsia.cobalt/Value",
        "kind": "struct/member",
        "name": "fuchsia.cobalt/CustomEventValue.value"
    },
    {
        "kind": "struct",
        "name": "fuchsia.cobalt/CustomEventValue"
    },
    {
        "kind": "struct",
        "name": "fuchsia.cobalt/Event"
    },
    {
        "declaration": "int64",
        "kind": "union/member",
        "name": "fuchsia.cobalt/EventPayload.elapsed_micros"
    },
    {
        "declaration": "fuchsia.cobalt/Event",
        "kind": "union/member",
        "name": "fuchsia.cobalt/EventPayload.event"
    },
    {
        "declaration": "fuchsia.cobalt/CountEvent",
        "kind": "union/member",
        "name": "fuchsia.cobalt/EventPayload.event_count"
    },
    {
        "declaration": "float32",
        "kind": "union/member",
        "name": "fuchsia.cobalt/EventPayload.fps"
    },
    {
        "declaration": "vector<fuchsia.cobalt/HistogramBucket>:500",
        "kind": "union/member",
        "name": "fuchsia.cobalt/EventPayload.int_histogram"
    },
    {
        "declaration": "int64",
        "kind": "union/member",
        "name": "fuchsia.cobalt/EventPayload.memory_bytes_used"
    },
    {
        "kind": "union",
        "name": "fuchsia.cobalt/EventPayload",
        "strictness": "strict"
    },
    {
        "declaration": "uint64",
        "kind": "struct/member",
        "name": "fuchsia.cobalt/HistogramBucket.count"
    },
    {
        "declaration": "uint32",
        "kind": "struct/member",
        "name": "fuchsia.cobalt/HistogramBucket.index"
    },
    {
        "kind": "struct",
        "name": "fuchsia.cobalt/HistogramBucket"
    },
    {
        "declaration": "(string:64 timer_id,uint64 timestamp,uint32 timeout_s) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Logger.EndTimer"
    },
    {
        "declaration": "(fuchsia.cobalt/CobaltEvent event) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Logger.LogCobaltEvent"
    },
    {
        "declaration": "(vector<fuchsia.cobalt/CobaltEvent>:500 events) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Logger.LogCobaltEvents"
    },
    {
        "declaration": "(uint32 metric_id,vector<fuchsia.cobalt/CustomEventValue> event_values) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Logger.LogCustomEvent"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,int64 elapsed_micros) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Logger.LogElapsedTime"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Logger.LogEvent"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,int64 period_duration_micros,int64 count) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Logger.LogEventCount"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,float32 fps) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Logger.LogFrameRate"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,vector<fuchsia.cobalt/HistogramBucket>:500 histogram) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Logger.LogIntHistogram"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,int64 bytes) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Logger.LogMemoryUsage"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,string:64 timer_id,uint64 timestamp,uint32 timeout_s) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/Logger.StartTimer"
    },
    {
        "kind": "protocol",
        "name": "fuchsia.cobalt/Logger"
    },
    {
        "declaration": "(string:64 timer_id,uint64 timestamp,uint32 timeout_s) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerBase.EndTimer"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,int64 elapsed_micros) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerBase.LogElapsedTime"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerBase.LogEvent"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,int64 period_duration_micros,int64 count) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerBase.LogEventCount"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,float32 fps) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerBase.LogFrameRate"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,int64 bytes) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerBase.LogMemoryUsage"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,string:64 timer_id,uint64 timestamp,uint32 timeout_s) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerBase.StartTimer"
    },
    {
        "kind": "protocol",
        "name": "fuchsia.cobalt/LoggerBase"
    },
    {
        "declaration": "(uint32 project_id,server_end:fuchsia.cobalt/Logger logger) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerFactory.CreateLoggerFromProjectId"
    },
    {
        "declaration": "(uint32 customer_id,uint32 project_id,server_end:fuchsia.cobalt/Logger logger) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerFactory.CreateLoggerFromProjectSpec"
    },
    {
        "declaration": "(uint32 project_id,server_end:fuchsia.cobalt/LoggerSimple logger) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerFactory.CreateLoggerSimpleFromProjectId"
    },
    {
        "kind": "protocol",
        "name": "fuchsia.cobalt/LoggerFactory"
    },
    {
        "declaration": "(string:64 timer_id,uint64 timestamp,uint32 timeout_s) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerSimple.EndTimer"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,int64 elapsed_micros) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerSimple.LogElapsedTime"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerSimple.LogEvent"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,int64 period_duration_micros,int64 count) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerSimple.LogEventCount"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,float32 fps) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerSimple.LogFrameRate"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,vector<uint32>:500 bucket_indices,vector<uint64>:500 bucket_counts) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerSimple.LogIntHistogram"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,int64 bytes) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerSimple.LogMemoryUsage"
    },
    {
        "declaration": "(uint32 metric_id,uint32 event_code,string:64 component,string:64 timer_id,uint64 timestamp,uint32 timeout_s) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/LoggerSimple.StartTimer"
    },
    {
        "kind": "protocol",
        "name": "fuchsia.cobalt/LoggerSimple"
    },
    {
        "declaration": "uint32",
        "kind": "const",
        "name": "fuchsia.cobalt/MAX_BATCHED_EVENTS",
        "value": "500"
    },
    {
        "declaration": "int64",
        "kind": "const",
        "name": "fuchsia.cobalt/MAX_BYTES_PER_EVENT",
        "value": "102400"
    },
    {
        "declaration": "uint32",
        "kind": "const",
        "name": "fuchsia.cobalt/MAX_CHANNEL_NAME_LENGTH",
        "value": "256"
    },
    {
        "declaration": "uint32",
        "kind": "const",
        "name": "fuchsia.cobalt/MAX_COMPONENT_LENGTH",
        "value": "64"
    },
    {
        "declaration": "uint32",
        "kind": "const",
        "name": "fuchsia.cobalt/MAX_EVENT_CODE_COUNT",
        "value": "5"
    },
    {
        "declaration": "uint32",
        "kind": "const",
        "name": "fuchsia.cobalt/MAX_HISTOGRAM_BUCKETS",
        "value": "500"
    },
    {
        "declaration": "uint32",
        "kind": "const",
        "name": "fuchsia.cobalt/MAX_REALM_NAME_LENGTH",
        "value": "256"
    },
    {
        "declaration": "uint32",
        "kind": "const",
        "name": "fuchsia.cobalt/MAX_TIMER_ID_LENGTH",
        "value": "64"
    },
    {
        "declaration": "uint32",
        "kind": "table/member",
        "name": "fuchsia.cobalt/ReportSpec.customer_id"
    },
    {
        "declaration": "uint32",
        "kind": "table/member",
        "name": "fuchsia.cobalt/ReportSpec.metric_id"
    },
    {
        "declaration": "uint32",
        "kind": "table/member",
        "name": "fuchsia.cobalt/ReportSpec.project_id"
    },
    {
        "declaration": "uint32",
        "kind": "table/member",
        "name": "fuchsia.cobalt/ReportSpec.report_id"
    },
    {
        "kind": "table",
        "name": "fuchsia.cobalt/ReportSpec"
    },
    {
        "declaration": "string:256",
        "kind": "table/member",
        "name": "fuchsia.cobalt/SoftwareDistributionInfo.current_channel"
    },
    {
        "declaration": "string:256",
        "kind": "table/member",
        "name": "fuchsia.cobalt/SoftwareDistributionInfo.current_realm"
    },
    {
        "kind": "table",
        "name": "fuchsia.cobalt/SoftwareDistributionInfo"
    },
    {
        "kind": "enum/member",
        "name": "fuchsia.cobalt/Status.BUFFER_FULL",
        "value": "3"
    },
    {
        "kind": "enum/member",
        "name": "fuchsia.cobalt/Status.EVENT_TOO_BIG",
        "value": "2"
    },
    {
        "kind": "enum/member",
        "name": "fuchsia.cobalt/Status.INTERNAL_ERROR",
        "value": "-1"
    },
    {
        "kind": "enum/member",
        "name": "fuchsia.cobalt/Status.INVALID_ARGUMENTS",
        "value": "1"
    },
    {
        "kind": "enum/member",
        "name": "fuchsia.cobalt/Status.OK",
        "value": "0"
    },
    {
        "kind": "enum/member",
        "name": "fuchsia.cobalt/Status.SHUT_DOWN",
        "value": "4"
    },
    {
        "declaration": "int32",
        "kind": "enum",
        "name": "fuchsia.cobalt/Status",
        "strictness": "strict"
    },
    {
        "declaration": "(fuchsia.cobalt/SoftwareDistributionInfo info) -> (fuchsia.cobalt/Status status)",
        "kind": "protocol/member",
        "name": "fuchsia.cobalt/SystemDataUpdater.SetSoftwareDistributionInfo"
    },
    {
        "kind": "protocol",
        "name": "fuchsia.cobalt/SystemDataUpdater"
    },
    {
        "declaration": "float64",
        "kind": "union/member",
        "name": "fuchsia.cobalt/Value.double_value"
    },
    {
        "declaration": "uint32",
        "kind": "union/member",
        "name": "fuchsia.cobalt/Value.index_value"
    },
    {
        "declaration": "int64",
        "kind": "union/member",
        "name": "fuchsia.cobalt/Value.int_value"
    },
    {
        "declaration": "string",
        "kind": "union/member",
        "name": "fuchsia.cobalt/Value.string_value"
    },
    {
        "kind": "union",
        "name": "fuchsia.cobalt/Value",
        "strictness": "strict"
    },
    {
        "kind": "library",
        "name": "fuchsia.cobalt"
    }
]
