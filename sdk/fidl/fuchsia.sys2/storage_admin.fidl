// Copyright 2020 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library fuchsia.sys2;

using fuchsia.component;
using fuchsia.io;

@discoverable
protocol StorageAdmin {
    /// Opens the isolated directory for the given component. The open request will fail if
    /// the given component's storage has not been provisioned yet.
    OpenComponentStorage(resource struct {
        relative_moniker string:fuchsia.component.MAX_MONIKER_LENGTH;
        flags uint32;
        mode uint32;
        object server_end:fuchsia.io.Node;
    });

    /// Deletes the contents of the storage for this component. Does not delete the component's
    /// subdirectory itself from the backing directory.
    DeleteComponentStorage(struct {
        relative_moniker string:fuchsia.component.MAX_MONIKER_LENGTH;
    }) -> (struct {}) error fuchsia.component.Error;
};
