// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
deprecated_syntax;

library fuchsia.hardware.spi;

using fuchsia.hardware.sharedmemory;
using zx;

const uint32 MAX_TRANSFER_SIZE = 8196; // arbitrary - to be removed

protocol Device {
    /// Half-duplex transmit data to a SPI device; always transmits the entire buffer on success.
    TransmitVector(vector<uint8>:MAX_TRANSFER_SIZE data) -> (zx.status status);
    /// Half-duplex receive data from a SPI device; always reads the full size requested.
    ReceiveVector(uint32 size) -> (zx.status status, vector<uint8>:MAX_TRANSFER_SIZE data);
    /// Full-duplex SPI transaction. Received data will exactly equal the length of the transmit
    /// buffer.
    ExchangeVector(vector<uint8>:MAX_TRANSFER_SIZE txdata)
        -> (zx.status status, vector<uint8>:MAX_TRANSFER_SIZE rxdata);

    compose fuchsia.hardware.sharedmemory.SharedVmoIo;
    compose fuchsia.hardware.sharedmemory.SharedVmoRegister;
};
