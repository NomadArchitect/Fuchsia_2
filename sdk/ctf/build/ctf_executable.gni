# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//sdk/ctf/build/ctf_element.gni")
import("//sdk/ctf/build/ctf_version.gni")
import("//sdk/ctf/build/write_ctf_file.gni")

# An executable that can be used in CTF.
#
# An equivalent to the built-in executable, but ensures dependencies are allowed
# in CTF.
#
# Example:
# ```
# ctf_executable("my-test") {
#   deps = [ "//zircon/system/ulib/zxtest" ]
#   sources = [ "//sdk/ctf/tests/my_test/my_test.cc" ]
#   testonly = true
# }
# ```
template("ctf_executable") {
  invoker_deps = []
  if (defined(invoker.deps)) {
    invoker_deps += invoker.deps
  }
  if (defined(invoker.public_deps)) {
    invoker_deps += invoker.public_deps
  }

  if (invoker_deps != [] && cts_version == "") {
    verify_target = target_name + "_verify_deps"
  }
  write_file_target = target_name + "_ctf_file"

  if (defined(verify_target)) {
    ctf_element(verify_target) {
      deps_to_verify = invoker_deps
      invoker_label = get_label_info(invoker.target_name, "label_no_toolchain")
    }
  }

  write_ctf_file(write_file_target) {
  }

  executable(target_name) {
    forward_variables_from(invoker, "*")
    if (!defined(deps)) {
      deps = []
    }
    if (defined(non_cts_deps)) {
      deps += non_cts_deps
    }

    if (defined(verify_target)) {
      deps += [ ":$verify_target" ]
    }
    deps += [ ":$write_file_target" ]
  }
}

set_defaults("ctf_executable") {
  configs = default_executable_configs
}
