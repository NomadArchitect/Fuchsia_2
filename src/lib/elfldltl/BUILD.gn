# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/cpp/cpp_fuzzer.gni")
import("//build/test.gni")
import("//build/zircon/migrated_targets.gni")

is_elf = current_os != "mac" && current_os != "win"

zx_library("elfldltl") {
  sdk = "source"
  sdk_headers = [
    "lib/elfldltl/compat-hash.h",
    "lib/elfldltl/constants.h",
    "lib/elfldltl/diagnostics.h",
    "lib/elfldltl/dynamic.h",
    "lib/elfldltl/field.h",
    "lib/elfldltl/fuzzer.h",
    "lib/elfldltl/gnu-hash.h",
    "lib/elfldltl/init-fini.h",
    "lib/elfldltl/internal/const-string.h",
    "lib/elfldltl/internal/dynamic-tag-error.h",
    "lib/elfldltl/layout.h",
    "lib/elfldltl/link.h",
    "lib/elfldltl/machine.h",
    "lib/elfldltl/memory.h",
    "lib/elfldltl/note.h",
    "lib/elfldltl/relocation.h",
    "lib/elfldltl/relro.h",
    "lib/elfldltl/self.h",
    "lib/elfldltl/static-pie.h",
    "lib/elfldltl/symbol.h",
  ]

  sources = []
  if (is_elf) {
    sources += [ "self.cc" ]
    configs += [ "//build/config:no_sanitizers" ]
    libs = [ "./self-base.ld" ]
  }

  public_deps = [ "//sdk/lib/stdcompat" ]

  if (is_kernel) {
    deps = [
      "//zircon/kernel/lib/ktl",
      "//zircon/kernel/lib/libc",
    ]
  }

  if (current_os == "linux") {
    configs -= [ "//build/config/linux:implicit-host-libs" ]
  }
}

test("elfldltl-unittests") {
  deps = [ ":unittests" ]
}

# These pure unit tests can be included in a standalone ZBI test binary too.
source_set("unittests") {
  sources = [
    "diagnostics-tests.cc",
    "dynamic-tests.cc",
    "field-tests.cc",
    "initfini-tests.cc",
    "internal-tests.cc",
    "layout-tests.cc",
    "memory-tests.cc",
    "note-tests.cc",
    "relocation-tests.cc",
    "symbol-tests.cc",
    "symbol-tests.h",
    "tests.h",
  ]
  deps = [
    ".",
    "//sdk/lib/stdcompat",
    "//zircon/system/ulib/zxtest",
  ]
  if (is_elf) {
    sources += [ "self-tests.cc" ]
  }
}

if (current_os == "linux") {
  config("linux-static-pie.config") {
    # Avoid libc references from assert() in libc++ header code.
    defines = [ "NDEBUG=1" ]
    include_dirs = [ "//third_party/linux-syscall-support" ]
  }

  static_library("linux-static-pie") {
    sources = [ "linux-static-pie.cc" ]
    configs -= [ "//build/config/linux:implicit-host-libs" ]
    configs += [ ":linux-static-pie.config" ]
    deps = [ "." ]
  }

  test("linux-static-pie-test") {
    disable_syslog_backend = true
    sources = [ "linux-static-pie-test.cc" ]
    configs -= [
      "//build/config/linux:default-pie",
      "//build/config/linux:implicit-host-libs",
    ]
    configs += [ ":linux-static-pie.config" ]
    cflags = [ "-fPIE" ]
    ldflags = [
      "-nostartfiles",
      "-nostdlib++",
      "-static-pie",
      "-nolibc",
    ]
    deps = [ ":linux-static-pie" ]

    exclude_toolchain_tags = [ "instrumented" ]
  }
}

fuchsia_unittest_package("elfldltl-tests") {
  deps = [ ":elfldltl-unittests" ]
}

cpp_fuzzer("dynamic-fuzzer") {
  sources = [ "dynamic-fuzzer.cc" ]
  deps = [ "." ]
}

cpp_fuzzer("note-fuzzer") {
  sources = [ "note-fuzzer.cc" ]
  deps = [ "." ]
}

cpp_fuzzer("relocation-fuzzer") {
  sources = [ "relocation-fuzzer.cc" ]
  deps = [ "." ]
}

cpp_fuzzer("symbol-fuzzer") {
  sources = [ "symbol-fuzzer.cc" ]
  deps = [ "." ]
}

fuzzer_package("elfldltl-fuzzers") {
  fuzz_host = true
  cpp_fuzzers = [
    ":dynamic-fuzzer",
    ":note-fuzzer",
    ":relocation-fuzzer",
    ":symbol-fuzzer",
  ]
}

group("tests") {
  testonly = true

  deps = [
    ":elfldltl-fuzzers",
    ":elfldltl-tests",
    ":elfldltl-unittests($host_toolchain)",
  ]

  if (host_os == "linux") {
    deps += [ ":linux-static-pie-test(//build/toolchain:linux_$host_cpu)" ]
  }
}
