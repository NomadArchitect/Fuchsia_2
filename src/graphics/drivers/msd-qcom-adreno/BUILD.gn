# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//src/graphics/lib/magma/gnbuild/magma.gni")

if (is_fuchsia) {
  import("//build/config/fuchsia/rules.gni")
  driver_module = "driver_module"
  driver_module_test = driver_module
} else {
  driver_module = "shared_library"
  driver_module_test = "executable"
}

bind_test("msd_qcom_bind_test") {
  rules = "msd_qcom.bind"
  tests = "tests/bind_tests.json"
  deps = [
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.qualcomm.platform",
  ]
}

if (is_fuchsia) {
  bind_rules("msd_qcom_bind") {
    rules = "msd_qcom.bind"
    output = "bind.h"
    deps = [
      "//src/devices/bind/fuchsia.platform",
      "//src/devices/bind/fuchsia.qualcomm.platform",
    ]
  }

  magma_pdev_entry("msd_qcom_entry") {
    deps = [ ":msd_qcom_bind" ]
  }

  bind_rules("msd_qcom_test_bind") {
    rules = "msd_qcom.bind"
    output = "test_bind.h"
    disable_autobind = true
    deps = [
      "//src/devices/bind/fuchsia.platform",
      "//src/devices/bind/fuchsia.qualcomm.platform",
    ]
  }

  magma_pdev_entry("msd_qcom_entry_test") {
    test_entry = true
    deps = [ ":msd_qcom_test_bind" ]
  }
}

target(driver_module, "msd_qcom") {
  deps = [
    "src",
    "//src/graphics/lib/magma/src/magma_util/platform:logger_for_system_drivers",
    "//src/graphics/lib/magma/src/sys_driver",
  ]

  if (is_fuchsia) {
    output_name = "libmsd_qcom"
    deps += [ ":msd_qcom_entry" ]
  }

  if (is_linux) {
    deps += [ "//src/graphics/lib/magma/src/magma_util/platform:entry" ]
  }
}

group("msd_qcom_linux_arm64") {
  deps = [ ":msd_qcom(//build/toolchain:linux_arm64-shared)" ]
}

target(driver_module_test, "msd_qcom_test") {
  testonly = true

  deps = [
    "src",
    "//src/graphics/lib/magma/src/magma_util/platform:logger_for_system_drivers",
    "//src/graphics/lib/magma/src/sys_driver",
  ]

  if (is_fuchsia) {
    output_name = "libmsd_qcom_test"
    deps += [ ":msd_qcom_entry_test" ]
  }

  if (is_linux) {
    deps += [
      "//src/graphics/lib/magma/src/magma_util/platform:entry",
      "//src/graphics/lib/magma/tests_linux:drm_test_runner",
    ]
  }

  deps += [
    "//src/graphics/lib/magma/tests/unit_tests:magma_platform_hardware_tests",
    "//src/graphics/lib/magma/tests/unit_tests:msd_abi_conformance_tests",
  ]
}

group("msd_qcom_test_linux_arm64") {
  testonly = true
  deps = [ ":msd_qcom_test(//build/toolchain:linux_arm64)" ]
}

group("tests") {
  testonly = true
  deps = [ ":msd_qcom_bind_test" ]
}
