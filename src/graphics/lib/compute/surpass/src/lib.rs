// Copyright 2020 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// surpass does float comparison in a few places where the extra instructions generated by a
// full comparison would be too expensive in terms of computation.

mod affine_transform;
mod extend;
mod layer;
pub mod layout;
mod lines;
pub mod painter;
mod path;
mod point;
pub mod rasterizer;
mod simd;
mod transform;

pub use affine_transform::AffineTransform;
pub use layer::Layer;
pub use lines::{Lines, LinesBuilder};
pub use path::{Path, PathBuilder};
pub use point::Point;
pub use transform::{GeomPresTransform, GeomPresTransformError};

const PIXEL_WIDTH: usize = 16;
const PIXEL_DOUBLE_WIDTH: usize = PIXEL_WIDTH * 2;
const PIXEL_SHIFT: usize = PIXEL_WIDTH.trailing_zeros() as usize;

pub const MAX_WIDTH: usize = 1 << 16;
pub const MAX_HEIGHT: usize = 1 << 15;

const MAX_WIDTH_SHIFT: usize = MAX_WIDTH.trailing_zeros() as usize;
const MAX_HEIGHT_SHIFT: usize = MAX_HEIGHT.trailing_zeros() as usize;

/// The width of the renderer's tiles.
pub const TILE_WIDTH: usize = 16;
const _ASSERT_TILE_WIDTH_MULTIPLE_OF_16: usize = 0 - (TILE_WIDTH % 16);
const _ASSERT_MAX_TILE_WIDTH: usize = 128 - TILE_WIDTH;
const TILE_WIDTH_SHIFT: usize = TILE_WIDTH.trailing_zeros() as usize;
const TILE_WIDTH_MASK: usize = TILE_WIDTH - 1;

/// The height of the renderer's tiles.
pub const TILE_HEIGHT: usize = 16;
const _ASSERT_TILE_HEIGHT_MULTIPLE_OF_16: usize = 0 - (TILE_HEIGHT % 16);
const _ASSERT_MAX_TILE_HEIGHT: usize = 128 - TILE_HEIGHT;
const TILE_HEIGHT_SHIFT: usize = TILE_HEIGHT.trailing_zeros() as usize;
const TILE_HEIGHT_MASK: usize = TILE_HEIGHT - 1;

pub const LAYER_LIMIT: usize = (1 << rasterizer::BIT_FIELD_LENS[2]) - 1;
