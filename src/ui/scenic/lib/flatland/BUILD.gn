# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

config("glm_config") {
  include_dirs = [ "//third_party/glm" ]

  defines = [ "GLM_ENABLE_EXPERIMENTAL" ]
}

source_set("flatland") {
  sources = [
    "default_flatland_presenter.cc",
    "default_flatland_presenter.h",
    "flatland.cc",
    "flatland.h",
    "flatland_display.cc",
    "flatland_display.h",
    "flatland_manager.cc",
    "flatland_manager.h",
    "flatland_presenter.h",
    "global_image_data.cc",
    "global_image_data.h",
    "global_matrix_data.cc",
    "global_matrix_data.h",
    "global_topology_data.cc",
    "global_topology_data.h",
    "hanging_get_helper.h",
    "link_system.cc",
    "link_system.h",
    "transform_graph.cc",
    "transform_graph.h",
    "transform_handle.cc",
    "transform_handle.h",
    "uber_struct.h",
    "uber_struct_system.cc",
    "uber_struct_system.h",
  ]

  public_configs = [ ":glm_config" ]

  public_deps = [
    "//sdk/fidl/fuchsia.ui.scenic",
    "//sdk/fidl/fuchsia.ui.scenic.internal",
    "//src/lib/fxl",

    # TODO(fxbug.dev/56879): this dependency should be broken down into smaller libraries,
    # since it is currently only used for escher::FenceQueue.
    "//sdk/lib/fit",
    "//src/ui/lib/escher",
    "//src/ui/lib/glm_workaround",
    "//src/ui/scenic/lib/display",
    "//src/ui/scenic/lib/flatland/buffers",
    "//src/ui/scenic/lib/utils",
    "//zircon/system/ulib/async-default",
  ]

  deps = [
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//src/ui/scenic/lib/gfx:object_linker",
    "//src/ui/scenic/lib/scenic/util",
    "//src/ui/scenic/lib/scheduling:frame_scheduler_interface",
    "//src/ui/scenic/lib/scheduling:present_helpers",
    "//src/ui/scenic/lib/utils",
    "//zircon/system/ulib/trace",
  ]
}

group("pixeltests") {
  testonly = true

  public_deps = [ "engine/tests/pixeltests" ]
}

group("unittests") {
  testonly = true

  public_deps = [
    "buffers/tests:unittests",
    "engine/tests:unittests",
    "renderer/tests:unittests",
    "tests:unittests",
  ]
}

group("tests") {
  testonly = true

  public_deps = [
    ":pixeltests",
    ":unittests",
  ]
}
