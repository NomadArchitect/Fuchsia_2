# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/config/fuchsia/rules.gni")
import("//build/test.gni")
import("//zircon/system/ulib/devmgr-integration-test/isolated_devmgr.gni")

bind_rules("usb_hid_bind") {
  rules = "usb_hid.bind"
  output = "usb_hid-bind.h"
  tests = "usb_hid_bind_tests.json"
  deps = [ "//src/devices/bind/fuchsia.usb" ]
}

bind_rules("one_endpoint_hid_bind") {
  rules = "function/one_endpoint_hid.bind"
  output = "function/one_endpoint_hid-bind.h"
  tests = "function/one_endpoint_hid_bind_tests.json"
  deps = [
    "//src/devices/bind/fuchsia.usb",
    "//src/ui/input/drivers/usb-hid/fuchsia.usb.hid.bind:fuchsia.usb.hid.test",
  ]
}

bind_rules("two_endpoint_hid_bind") {
  rules = "function/two_endpoint_hid.bind"
  output = "function/two_endpoint_hid-bind.h"
  tests = "function/two_endpoint_hid_bind_tests.json"
  deps = [
    "//src/devices/bind/fuchsia.usb",
    "//src/ui/input/drivers/usb-hid/fuchsia.usb.hid.bind:fuchsia.usb.hid.test",
  ]
}

driver_module("usb-hid") {
  configs += [
    "//build/config:all_source",
    "//build/config/fuchsia:enable_zircon_asserts",
  ]
  configs += [ "//build/unification/config:zircon-migrated" ]
  sources = [ "usb-hid.cc" ]
  deps = [
    ":usb_hid_bind",
    "//sdk/banjo/fuchsia.hardware.hidbus",
    "//sdk/banjo/fuchsia.hardware.usb",
    "//sdk/banjo/fuchsia.hardware.usb.composite",
    "//sdk/banjo/fuchsia.hardware.usb.request",
    "//src/devices/lib/driver",
    "//src/devices/usb/lib/usb",
    "//src/devices/usb/lib/usb",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/pretty",
    "//zircon/public/lib/sync",
  ]
}

driver_module("usb-one-endpoint-hid-fake-usb") {
  configs += [
    "//build/config:all_source",
    "//build/config/fuchsia:enable_zircon_asserts",
  ]
  configs += [ "//build/unification/config:zircon-migrated" ]
  sources = [ "function/one-endpoint-hid-function.cc" ]
  deps = [
    ":one_endpoint_hid_bind",
    "//sdk/banjo/fuchsia.hardware.hidbus",
    "//sdk/banjo/fuchsia.hardware.usb",
    "//sdk/banjo/fuchsia.hardware.usb.function",
    "//sdk/banjo/fuchsia.hardware.usb.request",
    "//sdk/lib/fit",
    "//src/devices/lib/driver",
    "//src/devices/usb/lib/usb",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/sync",
    "//zircon/public/lib/zircon-internal",
    "//zircon/system/ulib/hid",
  ]
}

driver_module("usb-two-endpoint-hid-fake-usb") {
  configs += [
    "//build/config:all_source",
    "//build/config/fuchsia:enable_zircon_asserts",
  ]
  configs += [ "//build/unification/config:zircon-migrated" ]
  sources = [ "function/two-endpoint-hid-function.cc" ]
  deps = [
    ":two_endpoint_hid_bind",
    "//sdk/banjo/fuchsia.hardware.hidbus",
    "//sdk/banjo/fuchsia.hardware.usb",
    "//sdk/banjo/fuchsia.hardware.usb.function",
    "//sdk/banjo/fuchsia.hardware.usb.request",
    "//sdk/lib/fit",
    "//src/devices/lib/driver",
    "//src/devices/usb/lib/usb",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/sync",
    "//zircon/public/lib/zircon-internal",
    "//zircon/system/ulib/hid",
  ]
}

group("fake") {
  deps = [
    ":usb-one-endpoint-hid-fake-usb",
    ":usb-two-endpoint-hid-fake-usb",
  ]
}

test("usb-hid-test") {
  sources = [ "usb-hid-test.cc" ]
  deps = [
    "//sdk/fidl/fuchsia.device:fuchsia.device_llcpp",
    "//sdk/fidl/fuchsia.hardware.input:fuchsia.hardware.input_llcpp",
    "//sdk/fidl/fuchsia.hardware.usb.peripheral:fuchsia.hardware.usb.peripheral_llcpp",
    "//sdk/fidl/fuchsia.hardware.usb.virtual.bus:fuchsia.hardware.usb.virtual.bus_llcpp",
    "//sdk/lib/fdio",
    "//src/lib/ddk",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/zx",
    "//zircon/public/lib/zxtest",
    "//zircon/system/ulib/hid",
    "//zircon/system/ulib/usb-virtual-bus-launcher",
  ]

  # TODO(fxbug.dev/69585): This target uses raw zx::channel with LLCPP which is deprecated.
  # Please migrate to typed channel APIs (fidl::ClientEnd<T>, fidl::ServerEnd<T>).
  # See linked bug for details.
  configs += [ "//build/cpp:fidl-llcpp-deprecated-raw-channels" ]
}

isolated_devmgr_unittest_package("usb-hid-test-package") {
  package_name = "usb-hid-test"
  executable_path = "test/usb-hid-test"
  deps = [
    ":fake",
    ":usb-hid",
    ":usb-hid-test",
    "//src/devices/board/drivers/integration-test",
    "//src/devices/bus/drivers/platform",
    "//src/devices/usb/drivers/usb-bus",
    "//src/devices/usb/drivers/usb-composite",
    "//src/devices/usb/drivers/usb-peripheral",
    "//src/devices/usb/drivers/usb-virtual-bus",
    "//src/ui/input/drivers/hid",
  ]
}

group("tests") {
  testonly = true
  deps = [
    ":one_endpoint_hid_bind_test",
    ":two_endpoint_hid_bind_test",
    ":usb-hid-test-package",
    ":usb_hid_bind_test",
  ]
}
