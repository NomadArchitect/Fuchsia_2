# Copyright 2015 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/config.gni")

fuchsia_component("component_v2") {
  component_name = "root_presenter"
  manifest = "meta/root_presenter.cml"
  deps = [ ":bin" ]
}

fuchsia_component("virtual_keyboard_component_v2") {
  component_name = "virtual_keyboard_manager"
  manifest = "meta/virtual_keyboard_manager.cml"
  deps = [ ":bin" ]
}

fuchsia_package("root_presenter") {
  deps = [ ":component_v2" ]
}

fuchsia_package("virtual_keyboard_manager") {
  deps = [ ":virtual_keyboard_component_v2" ]
}

group("tests") {
  testonly = true

  deps = [ "//src/ui/bin/root_presenter/tests" ]
}

executable("bin") {
  output_name = "root_presenter"

  sources = [ "main.cc" ]

  deps = [
    ":lib",
    "//sdk/lib/sys/inspect/cpp",
    "//src/lib/fxl",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/trace",
    "//zircon/system/ulib/trace-provider",
  ]

  configs += [ "//third_party/glm:enable_experimental" ]

  # TODO(fxbug.dev/58162): delete the below and fix compiler warnings
  configs += [ "//build/config:Wno-conversion" ]
}

source_set("lib") {
  sources = [
    "app.cc",
    "app.h",
    "inspect.cc",
    "inspect.h",
    "presentation.cc",
    "presentation.h",
  ]

  public_deps = [
    ":focus_dispatcher",
    "//sdk/fidl/fuchsia.accessibility",
    "//sdk/fidl/fuchsia.input.virtualkeyboard",
    "//sdk/fidl/fuchsia.ui.accessibility.view",
    "//sdk/fidl/fuchsia.ui.brightness",
    "//sdk/fidl/fuchsia.ui.gfx",
    "//sdk/fidl/fuchsia.ui.input.accessibility",
    "//sdk/fidl/fuchsia.ui.keyboard.focus",
    "//sdk/fidl/fuchsia.ui.pointerinjector.configuration",
    "//sdk/fidl/fuchsia.ui.policy",
    "//sdk/fidl/fuchsia.ui.scenic",
    "//sdk/fidl/fuchsia.ui.views",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/sys/inspect/cpp",
    "//sdk/lib/ui/scenic/cpp",
    "//src/lib/ui/input",
    "//src/ui/input/lib/injector",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/inspect",
  ]

  deps = [
    ":color_transform",
    ":constants",
    ":displays",
    ":safe_presenter",
    ":virtual_keyboard",
    "//sdk/fidl/fuchsia.accessibility",
    "//sdk/fidl/fuchsia.ui.gfx",
    "//sdk/fidl/fuchsia.ui.pointerinjector.configuration",
    "//sdk/fidl/fuchsia.ui.views",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//src/lib/fxl",
    "//third_party/glm",
    "//zircon/system/ulib/trace",
  ]

  # TODO(fxbug.dev/58162): delete the below and fix compiler warnings
  configs += [ "//build/config:Wno-conversion" ]
}

source_set("displays") {
  sources = [
    "displays/display_configuration.cc",
    "displays/display_configuration.h",
    "displays/display_metrics.h",
    "displays/display_model.cc",
    "displays/display_model.h",
  ]

  deps = [
    "//sdk/fidl/fuchsia.ui.policy",
    "//src/lib/fxl",
  ]

  # TODO(fxbug.dev/58162): delete the below and fix compiler warnings
  configs += [ "//build/config:Wno-conversion" ]
}

source_set("focus_dispatcher") {
  sources = [
    "focus_dispatcher.cc",
    "focus_dispatcher.h",
    "focus_listener.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.ui.focus",
    "//sdk/fidl/fuchsia.ui.keyboard.focus",
    "//sdk/lib/sys/cpp",
    "//src/lib/fxl",
  ]
}

source_set("color_transform") {
  sources = [
    "color_transform_handler.cc",
    "color_transform_handler.h",
  ]

  public_deps = [ "//sdk/lib/sys/cpp" ]

  deps = [
    ":safe_presenter",
    "//sdk/fidl/fuchsia.accessibility",
    "//sdk/fidl/fuchsia.ui.brightness",
    "//sdk/fidl/fuchsia.ui.gfx",
    "//sdk/fidl/fuchsia.ui.policy",
    "//sdk/fidl/fuchsia.ui.scenic",
    "//sdk/lib/syslog/cpp",
    "//sdk/lib/ui/scenic/cpp",
  ]
}

source_set("safe_presenter") {
  sources = [
    "safe_presenter.cc",
    "safe_presenter.h",
  ]

  public_deps = [ "//sdk/lib/sys/cpp" ]

  deps = [
    "//sdk/lib/syslog/cpp",
    "//sdk/lib/ui/scenic/cpp",
  ]
}

source_set("constants") {
  sources = [
    "constants.cc",
    "constants.h",
  ]
  deps = [ "//src/lib/files" ]
}

source_set("virtual_keyboard") {
  sources = [
    "virtual_keyboard_controller.cc",
    "virtual_keyboard_controller.h",
    "virtual_keyboard_coordinator.cc",
    "virtual_keyboard_coordinator.h",
    "virtual_keyboard_manager.cc",
    "virtual_keyboard_manager.h",
  ]

  deps = [
    ":focus_dispatcher",
    "//sdk/fidl/fuchsia.input.virtualkeyboard",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/syslog/cpp",
    "//src/lib/fxl",
  ]
}
