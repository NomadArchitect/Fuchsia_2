// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "//sdk/lib/inspect/client.shard.cml",
        "//src/ui/lib/input_pipeline/meta/client.shard.cml",
        "syslog/client.shard.cml",
    ],
    program: {
        runner: "elf",
        binary: "bin/scene_manager",
    },
    children: [
        {
            name: "cursor",
            url: "fuchsia-pkg://fuchsia.com/cursor#meta/cursor.cm",
        },
    ],
    capabilities: [
        {
            // Protocols routed for consumption by SL4F in system "E2E" tests or
            // for consumption by UITestManager in integration tests.
            protocol: [ "fuchsia.input.injection.InputDeviceRegistry" ],
        },
        {
            protocol: [
                "fuchsia.input.interaction.Notifier",
                "fuchsia.input.interaction.observation.Aggregator",
                "fuchsia.recovery.policy.Device",
                "fuchsia.recovery.ui.FactoryResetCountdown",
                "fuchsia.session.scene.Manager",
                "fuchsia.ui.accessibility.view.Registry",
                "fuchsia.ui.brightness.ColorAdjustmentHandler",
                "fuchsia.ui.input.config.Features",
                "fuchsia.ui.policy.DeviceListenerRegistry",
                "fuchsia.ui.policy.DisplayBacklight",
            ],
        },
    ],
    use: [
        {
            directory: "dev-input-report",
            from: "parent",
            rights: [ "r*" ],
            path: "/dev/class/input-report",
        },
        {
            directory: "config-data",
            from: "parent",
            rights: [ "r*" ],
            path: "/config/data",
        },
        {
            protocol: [
                // Used to register with the a11y service as the color transform handler.
                "fuchsia.accessibility.ColorTransform",

                // Used to register with the a11y service as the magnification handler.
                "fuchsia.accessibility.Magnifier",

                // Used by the input pipeline library which is linked into the
                // scene manager.
                "fuchsia.accessibility.scene.Provider",
                "fuchsia.recovery.FactoryReset",
                "fuchsia.settings.Keyboard",

                // Used by the input pipeline library to provide trace data
                // for input events.
                "fuchsia.tracing.provider.Registry",

                // Graphics protocols needed for scene management.
                "fuchsia.ui.composition.Flatland",
                "fuchsia.ui.composition.FlatlandDisplay",
                "fuchsia.ui.display.color.Converter",
                "fuchsia.ui.display.singleton.Info",

                // Used by the input pipeline library to distribute focus.
                "fuchsia.ui.focus.FocusChainListenerRegistry",
                "fuchsia.ui.input.ImeService",
                "fuchsia.ui.input3.Keyboard",
                "fuchsia.ui.input3.KeyEventInjector",

                // Used by the input pipeline library to distribute focus.
                "fuchsia.ui.keyboard.focus.Controller",
                "fuchsia.ui.pointerinjector.Registry",
                "fuchsia.ui.scenic.Scenic",
                "fuchsia.ui.views.ViewRefInstalled",
            ],
        },
        {
            protocol: "fuchsia.media.sounds.Player",
            availability: "optional",
        },
        {
            protocol: "fuchsia.ui.shortcut.Manager",
            availability: "optional",
        },
        {
            protocol: "fuchsia.ui.app.ViewProvider",
            from: "#cursor",
        },
        {
            // Used by the input pipeline library to report activity.
            protocol: "fuchsia.input.interaction.observation.Aggregator",
            from: "self",
        },
    ],
    offer: [
        {
            protocol: [
                "fuchsia.logger.LogSink",
                "fuchsia.sysmem.Allocator",
                "fuchsia.tracing.provider.Registry",
                "fuchsia.ui.composition.Allocator",
                "fuchsia.ui.composition.Flatland",
                "fuchsia.ui.scenic.Scenic",
                "fuchsia.vulkan.loader.Loader",
            ],
            from: "parent",
            to: [ "#cursor" ],
        },
    ],
    expose: [
        {
            // Protocols routed for consumption by SL4F in system "E2E" tests or
            // for consumption by UITestManager in integration tests.
            protocol: [ "fuchsia.input.injection.InputDeviceRegistry" ],
            from: "self",
        },
        {
            protocol: [
                "fuchsia.input.interaction.Notifier",
                "fuchsia.input.interaction.observation.Aggregator",
                "fuchsia.recovery.policy.Device",
                "fuchsia.recovery.ui.FactoryResetCountdown",
                "fuchsia.session.scene.Manager",
                "fuchsia.ui.accessibility.view.Registry",
                "fuchsia.ui.brightness.ColorAdjustmentHandler",
                "fuchsia.ui.input.config.Features",
                "fuchsia.ui.policy.DeviceListenerRegistry",
                "fuchsia.ui.policy.DisplayBacklight",
            ],
            from: "self",
        },
    ],
    config: {
        idle_threshold_minutes: { type: "uint64" },
        supported_input_devices: {
            type: "vector",
            element: {
                type: "string",
                max_size: 12,
            },
            max_count: 6,
        },
    },
}
