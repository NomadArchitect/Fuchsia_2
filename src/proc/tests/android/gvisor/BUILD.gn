# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/dist/zip_resource.gni")
import("//src/proc/tests/android/build/starnix_test_component.gni")
import("//src/proc/tests/starnix_test_package.gni")

group("gvisor") {
  testonly = true
  deps = [
    # The benchmarks aren't currently enabled by default in CQ.
    #":starnix_gvisor_benchmarks",
    ":starnix_gvisor_tests",
  ]
}

# Gvisor tests should depend on this.
expect_includes("gvisor_test") {
  includes = [ "meta/gvisor.shard.cml" ]

  # Uses stardroid_test_runner
  deps = [ "//src/proc/tests:starnix_test" ]
}

template("gvisor_test_component") {
  # Without this gn gives an error: `You set the variable "invoker" here and it was unused before it
  # went out of scope.`
  not_needed([ "invoker" ])

  test_dir = "linux"
  meta_dir = "//src/proc/tests/android/gvisor/meta"
  starnix_test_component(target_name) {
    deps = [ ":gvisor_test" ]
  }
}

# Commented out tests exist as binaries in the tree but are not run (yet!).
gvisor_tests = [
  "accept_bind_stream_test",
  "accept_bind_test",
  "access_test",
  "bind_test",
  "brk_test",
  "chdir_test",
  "chmod_test",

  # "chown_test",
  "chroot_test",
  "clock_getres_test",
  "clock_gettime_test",
  "creat_test",
  "dev_test",
  "dup_test",
  "epoll_test",
  "eventfd_test",

  # "exec_binary_test",
  "exec_test",
  "exit_test",
  "fchdir_test",

  "flock_test",
  "fork_test",
  "getdents_test",
  "getrandom_test",

  # "getrusage_test",
  # "ioctl_test",
  "kill_test",
  "link_test",
  "lseek_test",

  "madvise_test",

  # "memfd_test",
  "mkdir_test",
  "mknod_test",
  "mmap_test",

  "mremap_test",
  "munmap_test",
  "open_create_test",
  "open_test",
  "pipe_test",
  "poll_test",
  "ppoll_test",

  # "prctl_test",
  "pread64_test",
  "priority_test",
  "proc_test",
  "pselect_test",
  "pty_root_test",
  "pty_test",
  "pwrite64_test",
  "read_test",
  "readv_socket_test",
  "readv_test",
  "rename_test",

  # "rtsignal_test",
  # "sched_test",
  "select_test",
  "sigaction_test",
  "sigaltstack_test",
  "sigprocmask_test",
  "sigstop_test",
  "sigtimedwait_test",
  "socket_abstract_test",
  "socket_test",
  "socket_unix_dgram_local_test",

  #"socket_unix_dgram_non_blocking_test",
  "socket_unix_pair_test",

  #"socket_unix_seqpacket_local_test",
  "socket_unix_stream_test",

  #"socket_unix_unbound_abstract_test",
  #"socket_unix_unbound_dgram_test",
  #"socket_unix_unbound_filesystem_test",
  #"socket_unix_unbound_seqpacket_test",
  #"socket_unix_unbound_stream_test",
  "stat_test",

  # "statfs_test",
  "symlink_test",

  # "tgkill_test",
  "time_test",
  "timerfd_test",
  "uidgid_test",
  "unlink_test",
  "wait_test",
  "xattr_test",
]

gvisor_benchmarks = [
  "clock_getres_benchmark",
  "clock_gettime_benchmark",
  "death_benchmark",
  "dup_benchmark",
  "epoll_benchmark",
  "fork_benchmark",
  "futex_benchmark",
  "getdents_benchmark",
  "getpid_benchmark",
  "gettid_benchmark",
  "mapping_benchmark",
  "open_benchmark",
  "open_read_close_benchmark",
  "pipe_benchmark",
  "randread_benchmark",
  "read_benchmark",
  "sched_yield_benchmark",
  "send_recv_benchmark",
  "seqwrite_benchmark",
  "signal_benchmark",
  "sleep_benchmark",
  "stat_benchmark",
  "unlink_benchmark",
  "write_benchmark",
]

foreach(test_name, gvisor_tests) {
  gvisor_test_component(test_name) {
  }
}

foreach(benchmark_name, gvisor_benchmarks) {
  gvisor_test_component(benchmark_name) {
  }
}

zip_resource("gvisor_runfiles") {
  file = "${gvisor_prebuilt_test_root}/gvisor_runfiles"
  dest_prefix = "data/tests"
}

stardroid_test_package("starnix_gvisor_tests") {
  deps = [ ":gvisor_runfiles" ]

  test_components = []

  foreach(test_name, gvisor_tests) {
    test_components += [ ":${test_name}" ]
  }
}

stardroid_test_package("starnix_gvisor_benchmarks") {
  test_components = []

  foreach(benchmark_name, gvisor_benchmarks) {
    test_components += [ ":${benchmark_name}" ]
  }
}
