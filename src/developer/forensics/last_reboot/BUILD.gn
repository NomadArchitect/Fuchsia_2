# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

visibility = [ "//src/developer/forensics/last_reboot/*" ]

###############################################################################
# SOURCES
###############################################################################
source_set("last_reboot_info_provider") {
  sources = [
    "last_reboot_info_provider.cc",
    "last_reboot_info_provider.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.feedback",
    "//src/developer/forensics/feedback/reboot_log",
  ]

  deps = [ "//sdk/lib/syslog/cpp" ]
}

source_set("main") {
  sources = [
    "main.cc",
    "main.h",
  ]

  deps = [
    ":main_service",
    "//sdk/lib/syslog/cpp",
    "//src/developer/forensics/utils:previous_boot_file",
    "//src/developer/forensics/utils/component",
  ]

  visibility += [ "//src/developer/forensics:*" ]
}

source_set("main_service") {
  sources = [
    "main_service.cc",
    "main_service.h",
  ]

  public_deps = [
    ":last_reboot_info_provider",
    ":reboot_watcher",
    ":reporter",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/inspect/cpp",
    "//src/developer/forensics/feedback/reboot_log",
    "//src/developer/forensics/utils:inspect_node_manager",
    "//src/developer/forensics/utils:inspect_protocol_stats",
    "//src/developer/forensics/utils/cobalt",
  ]
}

source_set("reboot_watcher") {
  sources = [
    "reboot_watcher.cc",
    "reboot_watcher.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.hardware.power.statecontrol",
    "//sdk/lib/fidl/cpp",
    "//src/developer/forensics/utils/cobalt",
  ]

  deps = [
    "//src/developer/forensics/feedback/reboot_log",
    "//src/lib/files",
    "//src/lib/fxl",
  ]
}

source_set("reporter") {
  sources = [
    "reporter.cc",
    "reporter.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.cobalt",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/fit-promise",
    "//sdk/lib/sys/cpp",
    "//src/developer/forensics/feedback/reboot_log",
    "//src/developer/forensics/utils:errors",
    "//src/developer/forensics/utils/cobalt",
    "//src/developer/forensics/utils/fidl:oneshot_ptr",
  ]

  deps = [
    "//sdk/lib/syslog/cpp",
    "//src/lib/files",
    "//src/lib/fsl",
    "//src/lib/fxl",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/zx",
  ]
}
