# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//src/developer/ffx/build/ffx_plugin.gni")

# Generate .symbol-index.json in the build directory.
if (current_toolchain == default_toolchain) {
  generated_file("symbol_index_json") {
    _symbol_index_path = "$root_build_dir/.symbol-index.json"
    _source_root = rebase_path("//", root_build_dir)  # ends with /

    outputs = [ _symbol_index_path ]
    output_conversion = "json"
    contents = {
      includes = [ _source_root + "vendor/*/.symbol-index.json" ]
      build_id_dirs = [
        {
          path = ".build-id"
          build_dir = "."
        },
        {
          path =
              _source_root + "prebuilt/third_party/clang/*/lib/debug/.build-id"
        },
        {
          path =
              _source_root + "prebuilt/third_party/rust/*/lib/debug/.build-id"
        },
      ]
      gcs_flat = [
        {
          url = "gs://fuchsia-artifacts/debug"
        },
      ]
    }
  }
}

ffx_plugin("ffx_debug_symbol_index") {
  version = "0.1.0"
  edition = "2018"
  with_unit_tests = true

  deps = [
    ":symbol_index_json($default_toolchain)",
    "//third_party/rust_crates:glob",
    "//third_party/rust_crates:serde",
    "//third_party/rust_crates:serde_json",
  ]

  test_deps = [
    ":test_data",
    "//third_party/rust_crates:tempfile",
  ]

  sources = [
    "src/args.rs",
    "src/lib.rs",
    "src/symbol_index.rs",
  ]
}

# Use $root_build_dir instead of $root_out_dir so that
# 1. Only one copy of test_data will be copied.
# 2. The test_data will be placed at a fixed location for all host architectures.
if (current_toolchain == default_toolchain) {
  host_test_data("test_data") {
    sources = [
      "test_data/another.json",
      "test_data/main.json",
    ]
    outputs = [
      "$root_build_dir/test_data/ffx_debug_symbol_index/{{source_file_part}}",
    ]
  }
} else {
  group("test_data") {
    testonly = true

    deps = [ ":test_data($default_toolchain)" ]
  }
}
