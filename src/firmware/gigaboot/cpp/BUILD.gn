# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/images/vboot/vboot.gni")
import("//zircon/kernel/phys/efi/efi_executable.gni")

source_set("lib") {
  sources = [
    "boot_zbi_items.cc",
    "boot_zbi_items.h",
    "device_path.cc",
    "device_path.h",
    "fastboot.cc",
    "fastboot.h",
    "gpt.cc",
    "gpt.h",
    "utils.cc",
    "utils.h",
  ]

  public_deps = [
    "//sdk/lib/fit",
    "//src/firmware/lib/fastboot:fastboot-base",
    "//src/firmware/lib/zbi:in_tree",
    "//src/lib/utf_conversion",
    "//zircon/kernel/lib/efi",
    "//zircon/kernel/phys/efi:main",
    "//zircon/kernel/phys/efi:protocol",
    "//zircon/system/ulib/fbl",
  ]

  if (is_kernel) {
    public_deps += [
      "//zircon/kernel/lib/ktl",
      "//zircon/kernel/lib/libc",
    ]

    include_dirs = [ "//" ]  # utf_conversion isn't a proper library.
  }
}

efi_executable("gigaboot") {
  sources = [
    "fastboot_tcp.cc",
    "fastboot_tcp.h",
    "main.cc",
    "sysdeps.cc",
    "zircon_boot_ops.cc",
    "zircon_boot_ops.h",
  ]

  deps = [
    ":lib",
    "legacy_c_gigaboot",
    "//src/firmware/lib/zircon_boot:in_tree",
    "//src/lib/zbitl",
    "//zircon/kernel/lib/ktl",
    "//zircon/kernel/lib/libc",
    "//zircon/kernel/phys:boot-zbi",
    "//zircon/third_party/ulib/cksum",
  ]

  cflags = [ "-DAVB_COMPILATION" ]
}

# Create a bootable gigaboot esp image.
esp("esp") {
  output_name = "gigaboot_cpp"
  gigaboot_target = ":gigaboot"
  gigaboot_bin =
      get_label_info(
          ":gigaboot(//zircon/kernel/phys/efi:kernel.efi_$current_cpu)",
          "root_out_dir") + "/gigaboot.efi"
}
