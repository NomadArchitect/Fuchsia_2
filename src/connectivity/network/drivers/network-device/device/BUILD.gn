# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//src/connectivity/network/drivers/network-device/ddk_source_split.gni")

ddk_source_split("device") {
  sources = [
    "definitions.h",
    "device_interface.cc",
    "device_interface.h",
    "log.h",
    "public/network_device.h",
    "rx_queue.cc",
    "rx_queue.h",
    "session.cc",
    "session.h",
    "status_watcher.cc",
    "status_watcher.h",
    "tx_queue.cc",
    "tx_queue.h",
  ]

  public_deps = [
    "//sdk/banjo/fuchsia.hardware.network.device",
    "//sdk/fidl/fuchsia.hardware.network:fuchsia.hardware.network_llcpp",
    "//sdk/lib/stdcompat",
    "//src/lib/vmo_store",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/fidl",
    "//zircon/public/lib/sync",
    "//zircon/system/ulib/fidl-async:fidl-async-cpp",
    "//zircon/system/ulib/fidl-utils",
    "//zircon/system/ulib/fzl",
  ]
}

group("tests") {
  testonly = true
  deps = [ ":network-device-lib-test" ]
}

executable("test_bin") {
  testonly = true
  output_name = "network-device-lib-test"
  sources = [
    "data_structs-test.cc",
    "network_device-test.cc",
    "status_watcher-test.cc",
    "test_util.cc",
    "test_util.h",
  ]

  deps = [
    ":device",
    "//zircon/public/lib/sync",
    "//zircon/public/lib/zxtest",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
  ]
}

fuchsia_unittest_package("network-device-lib-test") {
  deps = [ ":test_bin" ]
}
