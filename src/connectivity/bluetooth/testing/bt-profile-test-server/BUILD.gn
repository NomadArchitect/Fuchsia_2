# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_library.gni")

rustc_library("lib") {
  name = "bt_profile_test_server_client"

  deps = [
    "//sdk/fidl/fuchsia.bluetooth.bredr:fuchsia.bluetooth.bredr-rustc",
    "//src/connectivity/bluetooth/fidl:host-rustc",
    "//src/connectivity/bluetooth/lib/fuchsia-bluetooth",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/trace/rust:trace",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:futures",
  ]

  sources = [ "src/lib.rs" ]
}

rustc_binary("bin") {
  output_name = "bt_profile_test_server"
  with_unit_tests = true

  deps = [
    "//sdk/fidl/fuchsia.bluetooth:fuchsia.bluetooth-rustc",
    "//sdk/fidl/fuchsia.bluetooth.bredr:fuchsia.bluetooth.bredr-rustc",
    "//sdk/fidl/fuchsia.sys:fuchsia.sys-rustc",
    "//src/connectivity/bluetooth/lib/bt-rfcomm",
    "//src/connectivity/bluetooth/lib/fuchsia-bluetooth",
    "//src/lib/async-utils",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/syslog/rust:syslog",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:log",
    "//third_party/rust_crates:parking_lot",
    "//third_party/rust_crates:slab",
  ]

  test_deps = [ "//third_party/rust_crates:matches" ]

  sources = [
    "src/main.rs",
    "src/peer/mod.rs",
    "src/peer/rfcomm.rs",
    "src/peer/search.rs",
    "src/peer/service.rs",
    "src/profile.rs",
    "src/types.rs",
  ]
}

fuchsia_component("component") {
  component_name = "bt-profile-test-server"
  manifest = "meta/bt-profile-test-server.cmx"
  deps = [ ":bin" ]
}

fuchsia_package("bt-profile-test-server") {
  deps = [ ":component" ]
}

fuchsia_unittest_package("bt-profile-test-server-tests") {
  manifest = "meta/bt-profile-test-server-tests.cmx"
  deps = [ ":bin_test" ]
}

group("tests") {
  testonly = true
  deps = [
    ":bt-profile-test-server-tests",

    # Packages for components that are injected into the tests.
    "//src/cobalt/bin/testing/mock_cobalt",
  ]
}
