# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/config.gni")
import("//build/rust/rustc_binary.gni")
import("//src/sys/core/build/core_shard.gni")

rustc_binary("bin_v2") {
  name = "bt_init_v2"
  edition = "2018"
  source_root = "src/main_v2.rs"
  with_unit_tests = true

  deps = [
    "//sdk/fidl/fuchsia.bluetooth.bredr:fuchsia.bluetooth.bredr-rustc",
    "//sdk/fidl/fuchsia.bluetooth.snoop:fuchsia.bluetooth.snoop-rustc",
    "//sdk/fidl/fuchsia.io:fuchsia.io-rustc",
    "//sdk/fidl/fuchsia.logger:fuchsia.logger-rustc",
    "//src/lib/fdio/rust:fdio",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/syslog/rust:syslog",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:async-trait",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:serde",
    "//third_party/rust_crates:serde_json",
    "//third_party/rust_crates:tracing",
  ]

  test_deps = [
    "//src/lib/fuchsia",
    "//src/lib/zircon/rust:fuchsia-zircon",
  ]

  sources = [
    "src/config.rs",
    "src/main_v2.rs",
  ]

  configs -= [ "//build/config/rust:allow_unused_results" ]
}

resource("default-config") {
  sources = [ "config/default.json" ]
  outputs = [ "data/bt-init-default.json" ]
}

fuchsia_package_with_single_component("bt-init") {
  deps = [
    ":bin_v2",
    ":default-config",
  ]
  manifest = "meta/bt-init.cml"
}

fuchsia_package_with_single_component("bt-init-testonly") {
  deps = [
    ":bin_v2",
    ":default-config",
  ]
  manifest = "meta/bt-init-testonly.cml"
}

# The fuchsia.bluetooth.sys.Bootstrap service is not relevant to all configurations, so products
# that require it should include this shard to expose the protocol to appmgr via bt-init.
core_shard("bt-bootstrap-core-shard") {
  shard_file = "meta/bt-bootstrap.core_shard.cml"
}

# The fuchsia.bluetooth.rfcomm.test.RfcommTest capability is only relevant to test configurations.
# Product integrators that require it should include this shard to expose the protocol to appmgr via
# bt-init.
core_shard("bt-init-testonly-core-shard") {
  shard_file = "meta/bt-init-testonly.core_shard.cml"
}

fuchsia_unittest_package("tests-v2") {
  component_name = "bt-init-unittests-v2"
  package_name = "bt-init-unittests-v2"

  deps = [
    ":bin_v2_test",
    ":default-config",
  ]
}

group("tests") {
  testonly = true
  deps = [ ":tests-v2" ]
}
