# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/fidl/fidl.gni")
import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_test.gni")

rustc_test("overnet_stress_test_driver_bin") {
  edition = "2021"
  name = "overnet_stress_test_driver"
  deps = [
    "//sdk/fidl/fuchsia.overnet:fuchsia.overnet_rust",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/testing/fidl/proxy_stressor/fidl:test.proxy.stress_rust",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:tracing",
  ]

  sources = [ "src/driver.rs" ]
  source_root = "src/driver.rs"
}

fuchsia_test_component("overnet-stress-test-driver") {
  manifest = "meta/test-driver.cml"
  deps = [ ":overnet_stress_test_driver_bin" ]
}

rustc_binary("overnet_publisher_bin") {
  edition = "2021"
  name = "overnet_publisher"
  deps = [
    "//sdk/fidl/fuchsia.overnet:fuchsia.overnet_rust",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-component",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:tracing",
  ]

  sources = [ "src/publisher.rs" ]
  source_root = "src/publisher.rs"
}

fuchsia_component("overnet-publisher") {
  testonly = true
  manifest = "meta/overnet-publisher.cml"
  deps = [ ":overnet_publisher_bin" ]
}

fuchsia_component("overnet-stress-test-cmp") {
  manifest = "meta/overnet-stress-test.cml"
}

fuchsia_test_package("overnet-stress-test") {
  test_components = [ ":overnet-stress-test-cmp" ]
  deps = [
    ":overnet-publisher",
    ":overnet-stress-test-driver",
    "//src/connectivity/network/mdns/service:component",
    "//src/connectivity/network/testing/netemul/configurable-netstack",
    "//src/connectivity/overnet/examples:device-name-provider-client",
    "//src/connectivity/overnet/examples:device-name-provider-server",
    "//src/connectivity/overnet/overnetstack:component-with-udp",
    "//src/testing/fidl/proxy_stressor",
  ]

  test_specs = {
    parallel = 1
  }
}

group("tests") {
  testonly = true
  deps = [ ":overnet-stress-test" ]
}
