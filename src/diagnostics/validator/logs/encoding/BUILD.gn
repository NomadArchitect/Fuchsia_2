# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/dart/config.gni")
import("//build/rust/rustc_binary.gni")

rustc_binary("bin") {
  output_name = "encoding_validator"
  edition = "2021"
  with_unit_tests = true
  deps = [
    "fidl:validate_rust",
    "//sdk/fidl/fuchsia.diagnostics:fuchsia.diagnostics_rust",
    "//sdk/fidl/fuchsia.diagnostics.stream:fuchsia.diagnostics.stream_rust",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-component",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:tracing",
  ]

  sources = [ "src/main.rs" ]
}

fuchsia_unittest_package("encoding-validator-tests") {
  deps = [ ":bin_test" ]
}

### C++ ###

fuchsia_component("encoding-validator-for-cpp") {
  manifest = "meta/validator.cml"
  deps = [ ":bin" ]
}

fuchsia_test_package("log-encoding-validator-cpp") {
  deps = [ "puppet/cpp:component" ]
  test_components = [ ":encoding-validator-for-cpp" ]
}

### Dart ###

fuchsia_component("encoding-validator-for-dart") {
  manifest = "meta/validator.cml"
  deps = [ ":bin" ]
}

fuchsia_test_package("log-encoding-validator-dart") {
  deps = [ "puppet/dart:component" ]
  test_components = [ ":encoding-validator-for-dart" ]
}

### Rust ###

fuchsia_component("encoding-validator-for-rust") {
  manifest = "meta/validator.cml"
  deps = [ ":bin" ]
}

fuchsia_test_package("log-encoding-validator-rust") {
  deps = [ "puppet/rust:component" ]
  test_components = [ ":encoding-validator-for-rust" ]
}

group("tests") {
  testonly = true

  deps = [
    ":encoding-validator-tests",
    ":log-encoding-validator-cpp",
    ":log-encoding-validator-dart",
    ":log-encoding-validator-rust",
  ]
}
