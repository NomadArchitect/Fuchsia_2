// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// This shard is meant to contain stuff that is meant to be shared across all flavors of the
// archivist.
{
    include: [
        "//src/diagnostics/archivist/meta/config.shard.cml",
        "inspect/client.shard.cml",
    ],
    program: {
        runner: "elf",
    },
    capabilities: [
        {
            protocol: [
                "fuchsia.diagnostics.ArchiveAccessor",
                "fuchsia.diagnostics.LogSettings",
                "fuchsia.logger.Log",
                "fuchsia.logger.LogSink",
            ],
        },
    ],
    use: [
        {
            protocol: [ "fuchsia.sys2.EventSource" ],
        },

        // TODO(https://fxbug.dev/81980): Remove once everything is migrated.
        // Currently we have both legacy and new events. CM will temporarily
        // conditionally route the old events if the new events fail to route.
        // We'll never get both at the same time. This is because Archivist runs
        // in several environments, all of which will need to be updated
        // to support the new style of events.
        {
            event_stream_deprecated: "EventStream",
            subscriptions: [
                { event: "diagnostics_ready" },
                { event: "log_sink_requested" },
            ],
        },
        {
            event: "directory_ready",
            from: "parent",
            as: "diagnostics_ready",
            filter: { name: "diagnostics" },
        },
        {
            event: "capability_requested",
            from: "parent",
            as: "log_sink_requested",
            filter: { name: "fuchsia.logger.LogSink" },
        },
        {
            event_stream: [ "capability_requested_v2" ],
            from: "parent",
            path: "/events/log_sink_requested_event_stream",
            filter: { name: "fuchsia.logger.LogSink" },
        },
        {
            event_stream: [ "directory_ready_v2" ],
            from: "parent",
            path: "/events/diagnostics_ready_event_stream",
            filter: { name: "diagnostics" },
        },
    ],
    expose: [
        {
            protocol: [
                "fuchsia.diagnostics.ArchiveAccessor",
                "fuchsia.diagnostics.LogSettings",
                "fuchsia.logger.Log",
                "fuchsia.logger.LogSink",
            ],
            from: "self",
        },
    ],
}
