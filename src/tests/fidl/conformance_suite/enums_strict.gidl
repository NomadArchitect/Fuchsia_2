// Copyright 2020 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

success("StrictEnumInt8Struct") {
    // Not yet supported.
    bindings_denylist = [cpp],
    value = StrictEnumInt8Struct{
        e: 0x01,
    },
    bytes = {
        v1, v2 = [
            0x01, padding:7,
        ],
    },
}

success("StrictEnumInt16Struct") {
    // Not yet supported.
    bindings_denylist = [cpp],
    value = StrictEnumInt16Struct{
        e: 0x0102,
    },
    bytes = {
        v1, v2 = [
            0x02, 0x01, padding:6,
        ],
    },
}

success("StrictEnumInt32Struct") {
    // Not yet supported.
    bindings_denylist = [cpp],
    value = StrictEnumInt32Struct{
        e: 0x01020304,
    },
    bytes = {
        v1, v2 = [
            0x04, 0x03, 0x02, 0x01, padding:4,
        ],
    },
}

success("StrictEnumInt64Struct") {
    // Not yet supported.
    bindings_denylist = [cpp],
    value = StrictEnumInt64Struct{
        e: 0x0102030405060708,
    },
    bytes = {
        v1, v2 = [
            0x08, 0x07, 0x06, 0x05, 0x04, 0x03, 0x02, 0x01,
        ],
    },
}

success("StrictEnumUint8Struct") {
    // Not yet supported.
    bindings_denylist = [cpp],
    value = StrictEnumUint8Struct{
        e: 0x01,
    },
    bytes = {
        v1, v2 = [
            0x01, padding:7,
        ],
    },
}

success("StrictEnumUint16Struct") {
    // Not yet supported.
    bindings_denylist = [cpp],
    value = StrictEnumUint16Struct{
        e: 0x0102,
    },
    bytes = {
        v1, v2 = [
            0x02, 0x01, padding:6,
        ],
    },
}

success("StrictEnumUint32Struct") {
    // Not yet supported.
    bindings_denylist = [cpp],
    value = StrictEnumUint32Struct{
        e: 0x01020304,
    },
    bytes = {
        v1, v2 = [
            0x04, 0x03, 0x02, 0x01, padding:4,
        ],
    },
}

success("StrictEnumUint64Struct") {
    // Not yet supported.
    bindings_denylist = [cpp],
    value = StrictEnumUint64Struct{
        e: 0x0102030405060708,
    },
    bytes = {
        v1, v2 = [
            0x08, 0x07, 0x06, 0x05, 0x04, 0x03, 0x02, 0x01,
        ],
    },
}

success("VectorOfEnumStruct") {
    // Not yet supported.
    bindings_denylist = [cpp],
    value = VectorOfEnumStruct{
        v: [0x0102],
    },
    bytes = {
        v1, v2 = [
            0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        ],
    },
}

encode_failure("StrictEnumInt8StructUnknownValue") {
    // Rust: cannot construct invalid enum.
    // Cpp: not yet supported.
    bindings_denylist = [rust, cpp],
    value = StrictEnumInt8Struct{
        e: 0x08, // invalid value
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

encode_failure("StrictEnumInt16StructUnknownValue") {
    // Rust: cannot construct invalid enum.
    // Cpp: not yet supported.
    bindings_denylist = [rust, cpp],
    value = StrictEnumInt16Struct{
        e: 0x08, // invalid value
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

encode_failure("StrictEnumInt32StructUnknownValue") {
    // Rust: cannot construct invalid enum.
    // Cpp: not yet supported.
    bindings_denylist = [rust, cpp],
    value = StrictEnumInt32Struct{
        e: 0x08, // invalid value
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

encode_failure("StrictEnumInt64StructUnknownValue") {
    // Rust: cannot construct invalid enum.
    // Cpp: not yet supported.
    bindings_denylist = [rust, cpp],
    value = StrictEnumInt64Struct{
        e: 0x08, // invalid value
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

encode_failure("StrictEnumUint8StructUnknownValue") {
    // Rust: cannot construct invalid enum.
    // Cpp: not yet supported.
    bindings_denylist = [rust, cpp],
    value = StrictEnumUint8Struct{
        e: 0x08, // invalid value
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

encode_failure("StrictEnumUint16StructUnknownValue") {
    // Rust: cannot construct invalid enum.
    // Cpp: not yet supported.
    bindings_denylist = [rust, cpp],
    value = StrictEnumUint16Struct{
        e: 0x08, // invalid value
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

encode_failure("StrictEnumUint32StructUnknownValue") {
    // Rust: cannot construct invalid enum.
    // Cpp: not yet supported.
    bindings_denylist = [rust, cpp],
    value = StrictEnumUint32Struct{
        e: 0x08, // invalid value
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

encode_failure("StrictEnumUint64StructUnknownValue") {
    // Rust: cannot construct invalid enum.
    // Cpp: not yet supported.
    bindings_denylist = [rust, cpp],
    value = StrictEnumUint64Struct{
        e: 0x08, // invalid value
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

decode_failure("StrictEnumInt8StructUnknownValue") {
    // Not yet supported.
    bindings_denylist = [cpp],
    type = StrictEnumInt8Struct,
    bytes = {
        v1, v2 = [
            0xaa, padding:7,
        ],
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

decode_failure("StrictEnumInt16StructUnknownValue") {
    // Not yet supported.
    bindings_denylist = [cpp],
    type = StrictEnumInt16Struct,
    bytes = {
        v1, v2 = [
            0xaa, 0xaa, padding:6,
        ],
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

decode_failure("StrictEnumInt32StructUnknownValue") {
    // Not yet supported.
    bindings_denylist = [cpp],
    type = StrictEnumInt32Struct,
    bytes = {
        v1, v2 = [
            0xaa, 0xaa, 0xaa, 0xaa, padding:4,
        ],
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

decode_failure("StrictEnumInt64StructUnknownValue") {
    // Not yet supported.
    bindings_denylist = [cpp],
    type = StrictEnumInt64Struct,
    bytes = {
        v1, v2 = [
            0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
        ],
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

decode_failure("StrictEnumUint8StructUnknownValue") {
    // Not yet supported.
    bindings_denylist = [cpp],
    type = StrictEnumUint8Struct,
    bytes = {
        v1, v2 = [
            0xaa, padding:7,
        ],
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

decode_failure("StrictEnumUint16StructUnknownValue") {
    // Not yet supported.
    bindings_denylist = [cpp],
    type = StrictEnumUint16Struct,
    bytes = {
        v1, v2 = [
            0xaa, 0xaa, padding:6,
        ],
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

decode_failure("StrictEnumUint32StructUnknownValue") {
    // Not yet supported.
    bindings_denylist = [cpp],
    type = StrictEnumUint32Struct,
    bytes = {
        v1, v2 = [
            0xaa, 0xaa, 0xaa, 0xaa, padding:4,
        ],
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}

decode_failure("StrictEnumUint64StructUnknownValue") {
    // Not yet supported.
    bindings_denylist = [cpp],
    type = StrictEnumUint64Struct,
    bytes = {
        v1, v2 = [
            0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
        ],
    },
    err = STRICT_ENUM_UNKNOWN_VALUE,
}
