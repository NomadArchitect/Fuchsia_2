// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fidl.serversuite;

// The Runner coordinates test activity and is shared by multiple tests.
@discoverable
protocol Runner {
    // Check if a test with a given name is enabled before running it.
    IsTestEnabled(struct {
        test Test;
    }) -> (struct {
        is_enabled bool;
    });

    // Create a Target to run tests against.
    Start(resource struct {
        reporter client_end:Reporter;
    }) -> (resource struct {
        target client_end:Target;
    });

    // A two-way function to test that the Runner is still responding.
    CheckAlive() -> ();
};

// The Target is the server under test.
protocol Target {
    OneWayNoPayload();
    TwoWayNoPayload() -> ();
};

// The Reporter sends results of the test to the test harness.
protocol Reporter {
    ReceivedOneWayNoPayload();
};

type Test = enum {
    SETUP = 1;
    ONE_WAY_NO_PAYLOAD = 2;
    ONE_WAY_WITH_NON_ZERO_TXID = 3;
    UNKNOWN_ORDINAL_CAUSES_CLOSE = 4;
    TWO_WAY_NO_PAYLOAD = 5;
    TWO_WAY_NO_PAYLOAD_WITH_ZERO_TXID = 6;
};
