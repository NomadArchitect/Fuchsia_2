# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")
import("//src/virtualization/lib/qcow/qcow_test_image.gni")

group("tests") {
  testonly = true
  deps = [ ":virtio_block_rs_unittests" ]
}

rustc_binary("virtio_block_bin") {
  name = "virtio_block_rs"
  edition = "2018"
  with_unit_tests = true

  sources = [
    "src/backend.rs",
    "src/backend_test.rs",
    "src/block_device.rs",
    "src/file_backend.rs",
    "src/main.rs",
    "src/memory_backend.rs",
    "src/qcow_backend.rs",
    "src/remote_backend.rs",
    "src/wire.rs",
  ]

  deps = [
    "//sdk/fidl/fuchsia.io:fuchsia.io-rustc",
    "//sdk/fidl/fuchsia.virtualization:fuchsia.virtualization-rustc",
    "//sdk/fidl/fuchsia.virtualization.hardware:fuchsia.virtualization.hardware-rustc",
    "//src/lib/fdio/rust:fdio",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/storage/block_client/rust:remote-block-device",
    "//src/lib/syslog",
    "//src/lib/zerocopy",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/lib/zircon/rust:fuchsia-zircon-status",
    "//src/virtualization/lib/machina-virtio-device",
    "//src/virtualization/lib/qcow",
    "//src/virtualization/lib/virtio-device",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:async-lock",
    "//third_party/rust_crates:async-trait",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:libc",
    "//third_party/rust_crates:tempfile",
    "//third_party/rust_crates:thiserror",
  ]

  test_deps = [
    "//src/lib/storage/ramdevice_client/rust",
    "//third_party/rust_crates:tempfile",
  ]
}

qcow_test_image("qcow_test") {
  disk_size = "64k"
  writes = [
    "0+512=0x01",
    "512+512=0x02",
    "32k+1k=0xab",
    "37k+1k=0xcd",
  ]
}

fuchsia_unittest_package("virtio_block_rs_unittests") {
  manifest = "meta/virtio_block_rs_unittests.cml"
  deps = [
    ":virtio_block_bin_test",

    # A test qcow image used by the QcowBackend tests.
    ":qcow_test",

    # Use the storage_driver_test_realm to provide access to a ramdisk driver for testing.
    "//src/storage/testing:storage_driver_test_realm",
    "//src/storage/testing:storage_test_includes",
  ]

  # The DriverTestRealm will emit an ERROR log when testing the RemoteBackend.
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

fuchsia_package("virtio_block_rs") {
  deps = [
    ":virtio_block_rs_v1",
    ":virtio_block_rs_v2",
  ]
}

fuchsia_component("virtio_block_rs_v2") {
  manifest = "meta/virtio_block.cml"
  deps = [ ":virtio_block_bin" ]
  component_name = "virtio_block_rs"
}

fuchsia_component("virtio_block_rs_v1") {
  manifest = "meta/virtio_block.cmx"
  deps = [ ":virtio_block_bin" ]
  component_name = "virtio_block_rs"
}
